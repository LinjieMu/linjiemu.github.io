<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构(一)线性表</title>
      <link href="/2022/07/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/DataStructure/LinearTable/"/>
      <url>/2022/07/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/DataStructure/LinearTable/</url>
      
        <content type="html"><![CDATA[<h1>第一章 线性表</h1><h2 id="1-线性表的定义">1. 线性表的定义</h2><h3 id="1-逻辑定义">1. 逻辑定义</h3><p>线性表是具有<strong>相同数据类型</strong>的n个数据元素的<strong>有限序列</strong>，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L=(a_1,a_2,\dots,a_i,a_{i+1},\dots,a_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>表头元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，表尾元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。除了第一个元素外，每一个元素只有唯一一个直接前驱；除最后一个元素外，每一个元素有且只有唯一一个直接后继。</p><h3 id="2-线性表的基本操作">2. 线性表的基本操作</h3><ul><li><code>InitList(&amp;L)</code>：初始化</li><li><code>Length(L)</code>：求表长</li><li><code>LocateElem(L,e)</code>：按值查找</li><li><code>GetElem(L,i)</code>：按位查找</li><li><code>ListInsert(&amp;L,i,e)</code>：插入操作</li><li><code>ListDelete(&amp;L,i,e)</code>：删除操作</li><li><code>PrintList(L)</code>：输出操作</li><li><code>Empty(L)</code>：判空操作</li><li><code>DestroyList(&amp;L)</code>：销毁操作</li></ul><h2 id="2-线性表的顺序表示">2. 线性表的顺序表示</h2><h3 id="1-顺序表的定义">1. 顺序表的定义</h3><ul><li><p>用一组地址连续的存储单元一次存储线性表中的数据元素，从而使得逻辑上相邻的两个元素在物理上也相邻。</p></li><li><p>逻辑顺序与其物理顺序相同。</p></li><li><p>设第1个元素的内存地址为<code>LOC(A)</code>，则第i个元素的内存地址为<code>LOC(A)+(i-1)*sizeof(ElemType)</code>。</p></li><li><p>线性表的顺序存储结构是一种<strong>随机存取</strong>的存储结构。</p></li><li><p>数据结构：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 100</span></span><br><span class="line">typeof <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">  ElemType data[MaxSize];</span><br><span class="line">  <span class="keyword">int</span> length;</span><br><span class="line">&#125;SqList;</span><br></pre></td></tr></table></figure></li><li><p>线性表的<strong>存储密度高</strong>，每个结点只存储数据元素。</p></li><li><p>插入和删除操作需要移动大量元素，开销大。</p></li></ul><h3 id="2-顺序表上基本操作的实现">2. 顺序表上基本操作的实现</h3><h4 id="1-插入操作">1. 插入操作</h4><p>在线性表第i个元素位置插入元素，将第i个及之后的元素后移：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> i, ElemType e)</span></span>&#123;</span><br><span class="line">  <span class="comment">//判断i的范围是否有效</span></span><br><span class="line">  <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;L.length+<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">//判断是否存满了 </span></span><br><span class="line">  <span class="keyword">if</span>(L.length&gt;=MaxSize) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">//将第i个元素及之后的元素后移</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=L.length;j&gt;=i;j--)&#123;</span><br><span class="line">    L.data[j] = L.data[j<span class="number">-1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  L.data[i<span class="number">-1</span>] = e;</span><br><span class="line">  L.length++;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><ul><li><strong>最好情况</strong>：在表尾插入，时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li><strong>最坏情况</strong>：在表头插入，时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li><strong>平均情况</strong>：等差数列求和可以计算出时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li></ul><h4 id="2-删除操作">2. 删除操作</h4><p>删除线性表第i个元素，将第i+1个及后面的元素向前移动，将被删元素赋给变量e：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> i, ElemType &amp;e)</span></span>&#123;</span><br><span class="line">  <span class="comment">//判断i的范围是否有效</span></span><br><span class="line">  <span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;L.length)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  e = L.data[i<span class="number">-1</span>];</span><br><span class="line">  <span class="comment">//将第i个之后的元素前移</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;L.length;j++)&#123;</span><br><span class="line">    L.data[j<span class="number">-1</span>] = L.data[j];</span><br><span class="line">  &#125;</span><br><span class="line">  L.length--;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>最好情况</strong>：删除表尾元素，时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li><strong>最坏情况</strong>：删除表头元素，时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li><strong>平均情况</strong>：等差数列求和可以计算出时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li></ul><h4 id="3-按值查找">3. 按值查找</h4><p>顺序扫描表中的元素，返回对应的次序（从1开始）：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(SqList &amp;L, ElemType e)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;L.length;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.data[i]==e) <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//退出循环则表明查找失败</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>最好情况</strong>：查找表头元素，时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li><strong>最坏情况</strong>：查找表尾元素，时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li><strong>平均情况</strong>：等差数列求和可以计算出时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li></ul><h2 id="3-线性表的链表表示">3. 线性表的链表表示</h2><h3 id="1-单链表表示">1. 单链表表示</h3><ul><li><p>通过一组任意的存储单元来存储线性表中的元素。</p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h3r6nze42aj20ea024t8l.jpg" alt="image-20220701094629082" style="zoom:50%;" /></li><li><p>单元中一部分存放数据本身，另一部分存放数据间的关系。</p></li><li><p>单链表只需要存放指向后继结点的指针。</p></li><li><p>结点类型：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">typeof <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">  ElemType data;<span class="comment">//数据域</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>* <span class="title">next</span>;</span><span class="comment">//指针域</span></span><br><span class="line">&#125;LNode, *LinkList;</span><br></pre></td></tr></table></figure></li><li><p>单链表不需要连续的存储空间，且插入删除操作效率高，但不支持顺序存取，且存在浪费存储空间的缺点。</p></li><li><p>头指针是指向链表第一个结点的指针，头结点（可加可不加）是在链表首个有效结点前加的结点。引入头结点后，在表头插入元素与其他位置情况一致，无需额外操作；而且无论链表是否为空，头指针都非空。</p></li></ul><h3 id="2-单链表的基本操作">2. 单链表的基本操作</h3><p>下面的所有实现均针对有头结点的单链表</p><h4 id="1-采用表头插入法建表">1. 采用表头插入法建表</h4><p>该方法从一个空表开始，生成新结点，并将读取到的数据存放到新结点的数据域中，然后将新结点插入到当前链表的表头，即头结点之后。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_HeadInsert</span><span class="params">(LinkList&amp; L)</span></span>&#123;<span class="comment">//逆向建立单链表</span></span><br><span class="line">  LNode *s; <span class="keyword">int</span> x;</span><br><span class="line">  <span class="comment">//创建头结点</span></span><br><span class="line">  L = (LinkList*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">  L-&gt;next = null;</span><br><span class="line">  <span class="comment">//输入结点的值</span></span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line"> <span class="keyword">while</span>(x!=<span class="number">9999</span>)&#123;<span class="comment">//输入9999表示结束</span></span><br><span class="line">    s = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    s-&gt;data = x;</span><br><span class="line">    s-&gt;next = L-&gt;next;</span><br><span class="line">    L-&gt;next = s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建表的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h4 id="2-采用表尾插入法建表">2. 采用表尾插入法建表</h4><p>该方法将新的元素插入当前链表的尾部，因此我们需要增加一个尾指针。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_TailInsert</span><span class="params">(LinkList&amp; L)</span></span>&#123;<span class="comment">//建立单链表</span></span><br><span class="line">  <span class="keyword">int</span> x;</span><br><span class="line">  <span class="comment">//创建头结点</span></span><br><span class="line">  L = (LinkList*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">  L-&gt;next = null;</span><br><span class="line">  <span class="comment">//声明插入结点指针s和尾结点指针r</span></span><br><span class="line">  LNode* s,r=L;</span><br><span class="line">  <span class="comment">//输入结点的值</span></span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line"> <span class="keyword">while</span>(x!=<span class="number">9999</span>)&#123;<span class="comment">//输入9999表示结束</span></span><br><span class="line">    s = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">    s-&gt;data = x;</span><br><span class="line">    s-&gt;next = null;</span><br><span class="line">    r-&gt;next = s;</span><br><span class="line">    r = s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建表的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h4 id="3-按值查找元素">3. 按值查找元素</h4><p>从头结点开始遍历链表，返回结点，返回<code>null</code>表示查找失败：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">ElemType* <span class="title">Locate_Elem</span><span class="params">(LinkList &amp;L, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">  LNode* r = L-&gt;next;</span><br><span class="line">  <span class="keyword">while</span>(r!=null)&#123;</span><br><span class="line">    <span class="keyword">if</span>(r-&gt;data = i)&#123;</span><br><span class="line">      <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    r = r-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> null;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顺序查找的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h4 id="4-按序号查找元素">4. 按序号查找元素</h4><p>从头结点开始查找，返回第i个元素，查找失败返回null：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">LNode* <span class="title">Get_Elem</span><span class="params">(LinkList &amp;L, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> j = <span class="number">0</span>;<span class="comment">//序号</span></span><br><span class="line">  LNode* r = L;</span><br><span class="line">  <span class="keyword">while</span>(r!=null&amp;&amp;j&lt;i)&#123;</span><br><span class="line">    r = r-&gt;next;</span><br><span class="line">    j++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(j==i)<span class="keyword">return</span> r;</span><br><span class="line">  <span class="keyword">return</span> null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顺序查找的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h4 id="5-插入结点操作">5. 插入结点操作</h4><p>在当前结点后插入新结点，成功返回<code>true</code>：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Insert_Node</span><span class="params">(LNode &amp;L, LNode &amp;N)</span></span>&#123;</span><br><span class="line">  <span class="comment">//进行插入操作</span></span><br><span class="line">  N-&gt;next = l-&gt;next;</span><br><span class="line">  l-&gt;next = N;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>插入操作的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><h4 id="6-删除结点操作">6. 删除结点操作</h4><p>删除当前结点后的一个结点，成功返回<code>true</code>，失败返回<code>false</code>：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Delete_Node</span><span class="params">(LNode &amp;L)</span></span>&#123;</span><br><span class="line">  <span class="comment">//找到下一个结点</span></span><br><span class="line">  LNode* r = L-&gt;next;</span><br><span class="line">  <span class="keyword">if</span>(r==null)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  L-&gt;next = r-&gt;next;</span><br><span class="line">  <span class="built_in">free</span>(r);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除操作的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><h4 id="7-查找表的元素个数">7. 查找表的元素个数</h4><p>顺序遍历即可</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Length</span><span class="params">(LinkList &amp;L)</span></span>&#123;</span><br><span class="line">  LNode* r = L;</span><br><span class="line">  <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(r!=null)&#123;</span><br><span class="line">    len++;</span><br><span class="line">    r=r-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>操作的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h4 id="8-查找当前结点的直接前驱结点">8. 查找当前结点的直接前驱结点</h4><p>再次顺序遍历即可，返回结点，返回<code>null</code>表示查找失败：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">LNode* <span class="title">GET_PreNode</span><span class="params">(LinkList &amp;L, LNode &amp;N)</span></span>&#123;</span><br><span class="line">  LNode *r = L;</span><br><span class="line">  <span class="keyword">if</span>(L == N) <span class="keyword">return</span> null;</span><br><span class="line">  <span class="keyword">while</span>(r!=null)&#123;</span><br><span class="line">    <span class="keyword">if</span>(r-&gt;next==N)&#123;</span><br><span class="line">      <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    r = r-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>操作的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h4 id="9-销毁单链表">9. 销毁单链表</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Delete_ListNode</span><span class="params">(LinkList &amp;L)</span></span>&#123;</span><br><span class="line">  LNode* r;</span><br><span class="line">  <span class="comment">//依次释放每一个结点</span></span><br><span class="line">  <span class="keyword">while</span>(L-&gt;next!=null)&#123;</span><br><span class="line">    r = L-&gt;next;</span><br><span class="line">    L-&gt;next  = r-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(r);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//释放头结点</span></span><br><span class="line">  <span class="built_in">free</span>(L);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除操作的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p><h3 id="3-双链表的定义">3. 双链表的定义</h3><ul><li><p>在单链表的基础上增加了一个指向直接前驱结点的指针域</p></li><li><p>求解直接前驱的时间复杂度降低为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></li><li><p>图示：</p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h3r8gpqgw1j219a04a74o.jpg" alt="image-20220701104843757" style="zoom:50%;" /></li><li><p>数据声明：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">typeof <span class="class"><span class="keyword">struct</span> <span class="title">DNode</span>&#123;</span></span><br><span class="line">  ElemType data;<span class="comment">//数据域</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">DNode</span>* <span class="title">prior</span>,<span class="title">next</span>;</span><span class="comment">//直接前驱和后继结点指针</span></span><br><span class="line">&#125;DNode, *DLinkList;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-双链表的基本操作">4. 双链表的基本操作</h3><p>插入操作核心代码，在*p结点后面插入*s结点：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">s-&gt;next = p-&gt;next;</span><br><span class="line">s-&gt;prior = p;</span><br><span class="line">p-&gt;next-&gt;prior = s;</span><br><span class="line">p-&gt;next = s;</span><br></pre></td></tr></table></figure><p>删除操作核心代码，删除结点*p的后继结点*q：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line">q-&gt;next-&gt;prior = p;</span><br><span class="line"><span class="built_in">free</span>(q);</span><br></pre></td></tr></table></figure><h3 id="5-循环链表">5. 循环链表</h3><ul><li>循环链表与正常链表的区别在于，尾结点的指针域指向头结点</li><li>循环双链表的头结点的<code>prior</code>指向尾结点</li><li>当<code>L-&gt;next==L</code>时，链表为空</li></ul><h3 id="6-静态链表">6. 静态链表</h3><p>静态链表借助数组来描述线性表的链式存储结构，结点也有数据域<code>data</code>和指针域<code>next</code>,与前面所讲的链表中的指针不同的是，这里的指针是结点的相对地址(数组下标)，又称游标。和顺序表一样，静态链表也要预先分配一块连续的内存空间。</p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h3r8yr6993j211c0fc0u0.jpg" alt="image-20220701110604315" style="zoom:50%;" /><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 50</span></span><br><span class="line">typeof <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">  ElemType data;</span><br><span class="line">  <span class="keyword">int</span> next;</span><br><span class="line">&#125;SLinkList[MaxSize];</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据存储结构</title>
      <link href="/2022/04/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/DataBase/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/"/>
      <url>/2022/04/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/DataBase/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1>数据存储结构</h1><h2 id="1-数据库存储架构">1. 数据库存储架构</h2><ul><li>持久性数据存储在非易失性存储器中，一般为磁盘或固态硬盘，它们都是<strong>块结构设备</strong>，即以块为单位读或写数据。</li><li>大多数数据库使用<strong>操作系统文件</strong>作为存储记录的中间层。</li><li>CPU要访问的数据必须位于<strong>主存</strong>中，而持久性数据存储在非易失性存储器中，于是引入了<strong>数据库缓冲区</strong>来解决问题。</li><li>把整个数据库位于内存中的数据库称为<strong>主存数据库</strong>。</li></ul><h2 id="2-文件组织">2. 文件组织</h2><ul><li>数据库 =&gt; 多个不同的文件<ul><li>文件由底层操作系统来维护</li><li>一个<strong>文件</strong>在逻辑上被组织为记录的一个<strong>序列</strong></li><li>文件从逻辑上被分为定长的存储单元，<strong>块</strong>（存储分配和数据传输的基本单位）</li></ul></li><li>关于块的假设：<ul><li>没有比块更大的记录</li><li>每条记录被完全包换在单个块中</li></ul></li><li>两种映射文件的类型：<ul><li>定长记录文件</li><li>变长记录文件</li></ul></li></ul><h3 id="1-定长记录">1. 定长记录</h3><p><strong>问题1</strong>：块的大小不可能每次都是记录大小的整数倍，该如何存储？</p><p>我们在一个块中只分配它能完整容纳的最多记录的数目（块大小除以记录大小并舍弃小数部分）</p><p><strong>问题2</strong>：如何从块中删除一条记录？</p><p>在删除一条记录后，直接的移动占据是不理想的，这会造成额外的块访问。因此可以让被删除记录先空着，直到被后面的插入占据。为了快速找到这些空闲的位置，我们引入了<strong>文件头</strong>，其中含有第一条被删除记录的地址，第一条中有第二条的地址，以此类推，形成一个<strong>自由链表</strong>。</p><h3 id="2-变长记录">2. 变长记录</h3><p><strong>问题1</strong>：如何存储单条记录？</p><ul><li><p>单条记录=定长的初始部分+变长的内容部分。</p></li><li><p>初始部分由多组<code>(偏移量,长度)</code>对组成，偏移量记录该属性的开始位置，长度为属性的字节长度。</p></li><li><p>记录中也可以使用<strong>位空图</strong>，它表示记录的那个属性为空。有些数据库中会跳过为空的属性端，有些数据库中甚至不会记录为空的数据段。</p></li></ul><p><strong>问题2</strong>：如何在块中存储变长记录？</p><p>采用<strong>分槽的页结构存储</strong>，由四部分组成：块头，槽数组，自由空间，记录。</p><img src="https://tva1.sinaimg.cn/large/e6c9d24ely1h1gb8vhbgpj20da0gcq3z.jpg" alt="image-20220420172303483" style="zoom:50%;" /><p>其中，块头中含有记录项的数量、自由空间的末尾。槽数组包含每一条记录的位置和大小。</p><p>当一个记录被删除时，首先在槽数组中它的项被置为deleted，位于该记录前的记录将<strong>被移动</strong>来消除内碎片，并修改槽数组中对应的项。同时，自由空间尾指针也做修改。由于块的大小有限，因此移动代价并不高。</p><h3 id="3-大对象存储">3. 大对象存储</h3><p>由于限制一条记录的大小不能比一个块更大，因此往往在记录中存指向大对象的指针。</p><p>大对象可以以文件形式存储在被数据库管理的一个文件系统的区域中，或者作为文件结构存储在数据库中并被数据库管理。</p><h2 id="3-文件中记录的组织">3. 文件中记录的组织</h2><p>给定一个记录的集合，如何在文件中组织他们？</p><h3 id="1-堆文件组织">1. 堆文件组织</h3><ul><li>特征：记录可以存放在文件的任意位置，且没有顺序。</li><li><strong>自由空间图</strong>：一个数组，用于记录每个块的自由空间比例。</li><li>数据插入：扫描自由空间图，找到一个可以容纳该数据的块，如果找不到则分配一个新块。</li><li><strong>二级自由空间图</strong>：对于大型文件而言，臊面自由空间图的开销仍然非常巨大，因此可以引入一个二级自由空间图，每一个位置存储主自由空间图对应的N个位置的<strong>最大值</strong>，根据该值进行多次查表。多级自由空间图同理。</li></ul><h3 id="2-顺序文件组织">2. 顺序文件组织</h3><ul><li><strong>顺序文件</strong>是按照某个搜索码顺序的记录设计的，搜索码可以是任意的属性或者属性集合。</li><li>顺序的物理存储有利于随机读取，但不利于记录的插入和删除，因此使用指针链表来管理。对于删除操作，类似于定长记录中的删除操作。对于插入操作，如下步骤：<ol><li>在文件中定位按搜索码顺序位于插入记录前的那条记录。</li><li>若该记录所在空有自由记录，则原地插入，否则将新纪录插入一个溢出块中。同时链接链表。</li></ol></li><li>一段时间后，搜索码顺序和物理顺序相似性会完全丧失，因此我们需要在系统低负荷下对文件进行<strong>重组</strong>。</li></ul><h3 id="3-多表聚簇文件组织">3. 多表聚簇文件组织</h3><ul><li>特征：在该文件组织下，单个块中可能存储不止一个关系的记录。</li><li><strong>聚簇码</strong>：是一种属性，定义了哪些记录被储存在一起。</li><li>该文件组织经过特定的设计可以在解决特定问题上有很大的优化，但也可能会降低其他类类型的问题，因此使用多表聚簇取决于设计者认为的最频繁的查询类型。</li></ul><h3 id="4-划分">4. 划分</h3><ul><li>将一个大的关系划分为更小的关系并分别存储。</li></ul><h2 id="4-数据字典存储">4. 数据字典存储</h2><ul><li>我们称类似于关系的模式、完整性约束这种“关于数据的数据”为<strong>元数据</strong>。</li><li>元数据一般被存储在<strong>数据字典</strong>或<strong>系统目录</strong>中。</li></ul><h2 id="5-数据缓冲区">5. 数据缓冲区</h2><ul><li>数据库系统设计的一个主要目标是：尽量减少在磁盘和内存之间传输的块的数量。</li><li><strong>缓冲区</strong>是主存中用于储存磁盘块拷贝的那部分。负责缓冲区空间分配的子系统被称为<strong>缓冲区管理器</strong>。</li></ul><h3 id="1-缓冲区管理器">1. 缓冲区管理器</h3><p>当数据库系统需要磁盘上某一个块时，它向缓冲区管理器发送请求，管理的响应如下：</p><blockquote><ul><li>判断这个块是否在缓冲区：</li><li>如果在，则直接将这个块在主存中的地址发送给数据库</li><li>如果不在，则判断是否可以为该块分配空间：<ul><li>如果可以分配空间，则从磁盘把目标块读入缓冲区，并将块在主存中的地址发送给数据库系统</li><li>如果不可以，则根据<strong>某种策略</strong>将一些块移出主存（注意被移出的块当且它在最后一次写回磁盘后被修改过才需要写回磁盘），再从磁盘把目标块读入缓冲区，并将块在主存中的地址发送给数据库系统</li></ul></li></ul></blockquote><h4 id="1-缓冲区替换策略">1. 缓冲区替换策略</h4><p>大多数数据库应用的是改进后的<strong>最近最少使用策略</strong>（LRU）</p><h4 id="2-被钉住的块">2. 被钉住的块</h4><p>为了保证并发执行过程中的数据安全：</p><ul><li>当一个进程从某个块中读取数据前，执行<strong>钉住</strong>操作，缓冲区管理器绝对不会移出一个被钉住的块。</li><li>当进程完成数据读取后，执行<strong>解除钉住</strong>操作，此时缓冲区管理器在必要时可将该块移出。</li></ul><p>另外要避免同时钉住太多的块，极端情况下，所有块被钉住，此时缓冲区所有的块都不能被操作。另外，当多个进程从一个块中读取数据，为了判断何时该块才能被移出，我们可以做<strong>钉住计数</strong>，当计数为0时可以被移出。</p><h4 id="3-缓冲区上的共享排他锁">3. 缓冲区上的共享排他锁</h4><p>当从一个页面上修改数据时，在此期间其他进程都不应该访问刚页面。但当一个进程访问一个页面时，其他进程此时也可以访问该页面。因此缓冲区允许一个进程以共享模式和排他模式封锁该缓冲块。</p><p>关于<strong>封锁</strong>的规则：</p><ul><li>多个进程可在一个块上同时拥有共享锁。</li><li>只允许一个进程在一个块上有排他锁，此时不允许其他进程在该块上有共享锁。</li><li>请求一个块的排他锁时，若该块已经被加上其他进程的共享锁或排他锁则进入等待状态。</li><li>请求一个共享锁时，若该块被其他进程的排它锁封锁，则不被授予。</li></ul><p>关于<strong>释放封锁</strong>的规则：</p><ul><li><p>在一个块上执行操作前，进程必须先钉住该块，之后获得封锁，进行操作后释放封锁，最后解除钉住。</p></li><li><p>从缓冲区读取数据前，必须获得此块上的共享锁，当完成读取后，释放此锁。</p></li><li><p>在更新缓冲区块内容前，必须获得此块上的排他锁，更新完成后释放。</p></li></ul><h4 id="4-块写出">4. 块写出</h4><p>当另一个块需要缓冲区空间时，此时需要写出一个块。但是，也可以在该需求产生前写出那些更新过快的块，需要时便可以直接移出。</p><p>大多数数据库有一个进程，可以连续检测更新过快的块并将其写回磁盘。</p><h4 id="5-块的强制写出">5. 块的强制写出</h4><p>在某些特殊情况下，需要吧块写回磁盘，这种操作成为<strong>强制写出</strong>。</p><p>将强制写出与日志机制一起使用，可以确保当执行更新的事务提交时，有足够的数据写回磁盘，从而保证事务更新不会丢失。</p><h3 id="2-缓冲区替换策略">2. 缓冲区替换策略</h3><p>操作系统中使用过去的块访问模式来预测未来的访问，因此如果必须替换一个块时，则替换最近最少使用的块，该策略成为<strong>最近最少使用替换策略</strong>。然而，数据库系统能够比操作系统<strong>更准确</strong>地预测未来的访问模式。可以通过查看用户请求操作的每一步，预先确定哪些块是需要的。</p><p>当有些块被使用后则不再被使用，我们可以使用<strong>立即丢弃</strong>策略。对于某些特定的情况我们还需要使用，<strong>最近最常使用</strong>策略。</p><h3 id="3-写操作的重排序与恢复">3. 写操作的重排序与恢复</h3><h2 id="6-面向列的存储">6. 面向列的存储</h2><ul><li><strong>面向列的存储</strong>指，关系的每个属性被单独存储，来自相邻元组的属性值被存储在文件的相邻位置上</li><li>面向列的存储的优点：<ul><li>减少I/O</li><li>提高CPU的缓存性能</li><li>提高压缩效率</li><li>向量处理</li></ul></li><li>面向列的存储的缺点：<ul><li>元组重构的代价高</li><li>元组删除和更新的代价</li><li>解压的代价</li></ul></li></ul><h2 id="7-主存数据库">7. 主存数据库</h2><ul><li>定义：所有的数据都驻留在内存中的数据库。</li><li>许多主存数据库直接在主存中分配记录，并确保记录不会因为其他记录的更新而移动。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>现代卷积神经网络</title>
      <link href="/2022/01/30/AI/DeepLearning/CNN/"/>
      <url>/2022/01/30/AI/DeepLearning/CNN/</url>
      
        <content type="html"><![CDATA[<h2 id="LeNet">LeNet</h2><p>总体上看，LeNet由两部分组成：卷积编码器、全连接层密集块。其架构如下图：</p><img src="/Users/linjiemu/Desktop/机器学习/深度学习/d2l-zh/pytorch/img/lenet.svg" alt="lenet" style="zoom: 67%;" /><p>每个卷积块中的基本单元是一个卷积层、一个sigmoid激活函数和平均汇聚层。此处注意，虽然ReLU和最大汇聚层更为有效，但在该论文发表时，1998年，还没有出现。</p><p>第一个卷积层由1个输入通道，6个输出通道构成。输入通道的大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>28</mn><mo>×</mo><mn>28</mn></mrow><annotation encoding="application/x-tex">28\times 28</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">28</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">28</span></span></span></span>，上下左右各填充2像素，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">5\times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>的卷积核，步长为1，并使用一个sigmoid激活函数，输出大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>28</mn><mo>×</mo><mn>28</mn></mrow><annotation encoding="application/x-tex">28\times 28</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">28</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">28</span></span></span></span>的6通道像素张量C1。之后紧接着<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>的池操作，通过空间下采样将维数减少4倍，输出大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>14</mn><mo>×</mo><mn>14</mn></mrow><annotation encoding="application/x-tex">14\times 14</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">14</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">14</span></span></span></span>的6通道像素张量S2。</p><p>第二个卷积层由6个输入通道、16个输出通道构成。输入通道大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>14</mn><mo>×</mo><mn>14</mn></mrow><annotation encoding="application/x-tex">14\times 14</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">14</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">14</span></span></span></span>，不进行像素填充，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">5\times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>的卷积核，步长为1，并使用一个sigmoid激活函数，输出大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><mo>×</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">10\times 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">10</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">10</span></span></span></span>的16通道像素张量C3.之后继续使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>的池操作，输出大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">5\times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>的16通道张量S4。</p><p>为了充分使用学习到的样本，接下来我们首先使用展平层将学得数据展开为有个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>400</mn></mrow><annotation encoding="application/x-tex">1\times 400</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">400</span></span></span></span>的一维像素向量。之后由三个全连接层，分别有120、84、10输出。</p><p>PyTorch实现如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeNet</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>(LeNet,self).__init__()</span><br><span class="line">        self.conv1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">1</span>,<span class="number">6</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid()</span><br><span class="line">        )</span><br><span class="line">        self.avg_pool1 = nn.AvgPool2d(kernel_size=<span class="number">2</span>)</span><br><span class="line">        self.conv2 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">6</span>,<span class="number">16</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">0</span>,stride=<span class="number">1</span>),</span><br><span class="line">            nn.Sigmoid()</span><br><span class="line">        )</span><br><span class="line">        self.avg_pool2 = nn.AvgPool2d(kernel_size=<span class="number">2</span>)</span><br><span class="line">        self.fc1 = nn.Sequential(</span><br><span class="line">            nn.Flatten(),</span><br><span class="line">            nn.Linear(<span class="number">16</span>*<span class="number">5</span>*<span class="number">5</span>,<span class="number">120</span>),</span><br><span class="line">            nn.Sigmoid()</span><br><span class="line">        )</span><br><span class="line">        self.fc2 = nn.Sequential(</span><br><span class="line">            nn.Linear(<span class="number">120</span>,<span class="number">84</span>),</span><br><span class="line">            nn.Sigmoid()</span><br><span class="line">        )</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">84</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self,x</span>):</span></span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.avg_pool1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = self.avg_pool2(x)</span><br><span class="line">        x = self.fc1(x)</span><br><span class="line">        x = self.fc2(x)</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure><p>对MNISRT数据集进行训练，训练集准确率在0.822左右，测试集准确率在0.802左右，损失值为0.473</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gyvvhjvqz1j30u80m2tak.jpg" alt="image-20220130182552328" style="zoom:50%;" /><h2 id="AlexNet">AlexNet</h2>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 卷积神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KNN分类算法</title>
      <link href="/2022/01/27/AI/MachineLearning/KNN/"/>
      <url>/2022/01/27/AI/MachineLearning/KNN/</url>
      
        <content type="html"><![CDATA[<ol><li><p><strong>算法思想</strong>：对于给定测试样本，基于某种距离度量找出训练集中与其最靠近的k个训练样本，然后基于这k个“邻居”的信息来进行预测。</p></li><li><p><strong>处理方式</strong>：</p><ol><li><strong>分类问题</strong>：选择这k个样本中出现最多的类别标记</li><li><strong>回归问题</strong>：将这k个样本的实值输出标记的平均值作为预测结果，可以基于距离加权（距离越近权重越大）</li></ol></li><li><p><strong>误差分析</strong>（以1NN为例）：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>e</mi><mi>r</mi><mi>r</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><munder><mo>∑</mo><mrow><mi>c</mi><mo>∈</mo><mi>y</mi></mrow></munder><mi>p</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≈</mo><mn>1</mn><mo>−</mo><munder><mo>∑</mo><mrow><mi>c</mi><mo>∈</mo><mi>y</mi></mrow></munder><mi>p</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><msup><mi>c</mi><mo>∗</mo></msup><mi mathvariant="normal">∣</mi><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>p</mi><mo stretchy="false">(</mo><msup><mi>c</mi><mo>∗</mo></msup><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><msup><mi>c</mi><mo>∗</mo></msup><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><mn>2</mn><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">(</mo><msup><mi>c</mi><mo>∗</mo></msup><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}p(err)&amp;=1-\sum_{c\in y}p(c|x)p(c|z)\\&amp;\approx 1-\sum_{c\in y}p(c|x)^2\\&amp;\le 1-p(c^*|x)^2\\&amp;=(1+p(c^*|x))(1-p(c^*|x))\\&amp;\le 2(1-p(c^*|x))\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.996344em;vertical-align:-4.748172em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.248172em;"><span style="top:-7.248172em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">err</span><span class="mclose">)</span></span></span><span style="top:-4.512054em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"></span></span><span style="top:-1.9618330000000004em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"></span></span><span style="top:-0.4618330000000004em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"></span></span><span style="top:1.0381669999999996em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.748172em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.248172em;"><span style="top:-7.248172em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span><span style="top:-4.512054em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-1.9618330000000004em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-0.4618330000000004em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span><span style="top:1.0381669999999996em;"><span class="pstrut" style="height:3.0500050000000005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.748172em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中，x为预测样本，z为最近邻，c*为最佳分类样本。可见，<font color=red> 最近邻分类器的泛化错误率不超过贝叶斯最优分类器的错误率的两倍</font>。</p></li><li><p>实例：以<a href="https://cs231n.github.io/classification/">CS231n</a>中，KNN图像分类为例。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单文件读取函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpickle</span>(<span class="params">file</span>):</span></span><br><span class="line">    <span class="keyword">import</span> pickle</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fo:</span><br><span class="line">        <span class="built_in">dict</span> = pickle.load(fo, encoding=<span class="string">&#x27;bytes&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dict</span></span><br><span class="line"><span class="comment"># 文件夹读取函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_CIFAR10</span>(<span class="params">file</span>):</span></span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line">    Xtr, Ytr = [],[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>):</span><br><span class="line">        train_file = os.path.join(file,<span class="string">f&#x27;data_batch_<span class="subst">&#123;i&#125;</span>&#x27;</span>)</span><br><span class="line">        Xtr.append(unpickle(train_file)[<span class="string">b&#x27;data&#x27;</span>]) </span><br><span class="line">        Ytr.append(unpickle(train_file)[<span class="string">b&#x27;labels&#x27;</span>])</span><br><span class="line">    test_file = os.path.join(file,<span class="string">&#x27;test_batch&#x27;</span>)</span><br><span class="line">    Xte, Yte = unpickle(test_file)[<span class="string">b&#x27;data&#x27;</span>],unpickle(test_file)[<span class="string">b&#x27;labels&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> np.array(Xtr), np.array(Ytr).reshape(-<span class="number">1</span>,<span class="number">1</span>), Xte, Yte</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 定义最近邻类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NearestNeighbor</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train</span>(<span class="params">self, X, y</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; X is N x D where each row is an example. Y is 1-dimension of size N &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># the nearest neighbor classifier simply remembers all the training data</span></span><br><span class="line">        self.Xtr = X</span><br><span class="line">        self.ytr = y</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span>(<span class="params">self, X, dis = <span class="string">&#x27;l1&#x27;</span>, k = <span class="number">1</span></span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; X is N x D where each row is an example we wish to predict label for &quot;&quot;&quot;</span></span><br><span class="line">        num_test = X.shape[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># lets make sure that the output type matches the input type</span></span><br><span class="line">        Ypred = np.zeros(num_test, dtype = self.ytr.dtype)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># loop over all test rows</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_test):</span><br><span class="line">            <span class="keyword">if</span> i%<span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">                sys.stdout.write(<span class="string">f&#x27;\r 当前完成<span class="subst">&#123;i&#125;</span>&#x27;</span>)</span><br><span class="line">                sys.stdout.flush()</span><br><span class="line">            <span class="comment"># 选择要使用的范数l1/l2</span></span><br><span class="line">            <span class="keyword">if</span> dis == <span class="string">&#x27;l1&#x27;</span>:</span><br><span class="line">                distances = np.<span class="built_in">sum</span>(np.<span class="built_in">abs</span>(self.Xtr - X[i,:]), axis = <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">elif</span> dis == <span class="string">&#x27;l2&#x27;</span>:</span><br><span class="line">                distances = np.sqrt(np.<span class="built_in">sum</span>(np.square(self.Xtr - X[i,:]), axis = <span class="number">1</span>))</span><br><span class="line">            <span class="comment"># 对距离进行排序，返回下标 </span></span><br><span class="line">            index = distances.argsort()</span><br><span class="line">            <span class="comment"># 进行截断，只取前k个元素</span></span><br><span class="line">            index = index[:k]</span><br><span class="line">            <span class="comment"># 返回数组中每个元素比的出现次数，使用weights加权，权重为距离的倒数</span></span><br><span class="line">            count = np.bincount(self.ytr[index][:, <span class="number">0</span>], weights=<span class="number">1</span>/distances[index])</span><br><span class="line">            Ypred[i] = count.argmax() <span class="comment"># predict the label of the nearest example</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Ypred</span><br><span class="line">      </span><br><span class="line"><span class="comment"># 将数据集加载到内存</span></span><br><span class="line">Xtr, Ytr, Xte, Yte = load_CIFAR10(<span class="string">&#x27;data/cifar10/&#x27;</span>)</span><br><span class="line">Xtr_rows = Xtr.reshape(Xtr.shape[<span class="number">0</span>]*Xtr.shape[<span class="number">1</span>], <span class="number">32</span> * <span class="number">32</span> * <span class="number">3</span>) <span class="comment"># Xtr_rows becomes 50000 x 3072</span></span><br><span class="line">Xte_rows = Xte.reshape(Xte.shape[<span class="number">0</span>], <span class="number">32</span> * <span class="number">32</span> * <span class="number">3</span>) <span class="comment"># Xte_rows becomes 10000 x 3072</span></span><br><span class="line">nn = NearestNeighbor() <span class="comment"># create a Nearest Neighbor classifier class</span></span><br><span class="line">nn.train(Xtr_rows, Ytr) <span class="comment"># train the classifier on the training images and labels</span></span><br><span class="line">Yte_predict = nn.predict(Xte_rows,k=<span class="number">7</span>) <span class="comment"># predict labels on the test images</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;accuracy: %f&#x27;</span> % ( np.mean(Yte_predict == Yte)))</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> KNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML学习笔记</title>
      <link href="/2021/12/29/%E5%89%8D%E7%AB%AF/html:css:javascript/HTML/"/>
      <url>/2021/12/29/%E5%89%8D%E7%AB%AF/html:css:javascript/HTML/</url>
      
        <content type="html"><![CDATA[<h3 id="一个HTML实例">一个HTML实例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>解释：</strong></p><ul><li><p><code>&lt;!DOCTYPE html&gt;</code>声明我们使用的是 HTML5 文档。</p></li><li><p>所有的文档均写在<code>&lt;html&gt;&lt;/html&gt;</code>标签（根标签）下，下分<code>&lt;head&gt;&lt;/head&gt;</code>标签和<code>&lt;body&gt;&lt;/body&gt;</code>标签。</p></li><li><p><code>&lt;head&gt;</code>标签下写文档的头部元素，如<code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>，中文网页需要加上，否则会出现乱码；<code>&lt;title&gt;</code> 元素描述了文档的标题。</p><ul><li><code>&lt;title&gt;</code> 标签定义了不同文档的标题。</li><li><code>&lt;base&gt;</code> 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接。</li><li><code>&lt;link&gt;</code> 标签定义了文档与外部资源之间的关系。</li><li><code>&lt;style&gt;</code> 标签定义了HTML文档的样式文件引用地址。</li><li><code>&lt;meta&gt;</code> 标签提供了元数据。</li><li><code>&lt;script&gt;</code> 标签用于加载脚本文件，如： JavaScript。</li></ul></li><li><p><code>&lt;body&gt;</code>标签下包含了可见页面内容，如<code>&lt;h1&gt;</code>定义一个大标题，<code>&lt;p&gt;</code>定义一个段落。</p></li></ul><hr><h3 id="HTML的六级标题">HTML的六级标题</h3><p>HTML的标题（Heading）是通过<code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code> 标签来定义的。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxup79woqgj30dy0fk74m.jpg" alt="image-20211229144229738" style="zoom:50%;" /><hr><h3 id="HTML的段落">HTML的段落</h3><p>HTML的段落是通过标签 <code>&lt;p&gt; </code>来定义的。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是另外一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxup9on9uuj30as04wdfs.jpg" alt="image-20211229144451287" style="zoom:50%;" /><hr><h3 id="HTML的链接">HTML的链接</h3><p>HTML的链接是通过标签 <code>&lt;a&gt; </code>来定义的。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>这是一个链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxupd7z8lyj306g01wt8k.jpg" alt="image-20211229144814735" style="zoom:50%;" /><ul><li>链接内部可以嵌套文本，也可以嵌套图像，还可以嵌套它们的组合。</li><li><code>target</code>属性可以定义链接在何处显示，如当期属性值为<code>_blank</code>时，新建一个网页。</li><li><code>href</code>属性还可以指向本网页或者目标网页的特定id位置，属性值为<code>url#[目标id]</code>，url为空表示本网页。</li></ul><hr><h3 id="HTML的图像">HTML的图像</h3><p>HTML的图像是通过标签<code>&lt;img&gt;</code>来定义的。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png</span></span></span><br><span class="line"><span class="string"><span class="tag">    &quot;</span> <span class="attr">width</span>=<span class="string">&quot;258&quot;</span> <span class="attr">height</span>=<span class="string">&quot;79&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxupgw3k6fj30gw06oq30.jpg" alt="image-20211229145146659" style="zoom:50%;" /><ul><li><code>src</code>属性：图片的地址。</li><li><code>alt</code>属性：当图片无法加载时的文本替换。</li><li><code>height</code>和<code>width</code>属性：属性用于设置图像的高度与宽度。</li></ul><hr><h3 id="HTML的文字格式化">HTML的文字格式化</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>定义加粗文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span>&gt;</span>定义斜体文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>定义着重文字<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">small</span>&gt;</span>定义小号字<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>定义加重语气<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    测试<span class="tag">&lt;<span class="name">sub</span>&gt;</span>定义下标文字<span class="tag">&lt;/<span class="name">sub</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    测试<span class="tag">&lt;<span class="name">sup</span>&gt;</span>定义上标文字<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ins</span>&gt;</span>定义下划线字<span class="tag">&lt;/<span class="name">ins</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">del</span>&gt;</span>定义删除字<span class="tag">&lt;/<span class="name">del</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxupwu57iyj30840bojry.jpg" alt="image-20211229150706084" style="zoom:50%;" /><hr><h3 id="HTML的表格">HTML的表格</h3><p>表格由 <code>&lt;table&gt;</code> 标签来定义。每个表格均有若干行（由 <code>&lt;tr&gt; </code>标签定义），每行被分割为若干单元格（由<code> &lt;td&gt;</code> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxuqodc97rj30be03y0st.jpg" alt="image-20211229153333666" style="zoom:50%;" /><hr><h3 id="HTML的列表">HTML的列表</h3><ul><li>无序列表：无序列表使用<code>&lt;ul&gt;</code>标签。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxuqr8qsynj305e02m743.jpg" alt="image-20211229153619728" style="zoom:50%;" /><ul><li>有序列表：有序列表始于 <ol> 标签。每个列表项始于 <li> 标签。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxuqs387tej305u034dfn.jpg" alt="image-20211229153708186" style="zoom:50%;" /><hr><h3 id="HTML的区块">HTML的区块</h3><ul><li><code>&lt;div&gt;</code>：定义了文档的区域，块级 (block-level)</li><li><code>&lt;span&gt;</code>：用来组合文档中的行内元素， 内联元素(inline)</li></ul><hr><h3 id="HTML的表单">HTML的表单</h3><p>表单是一个包含表单元素的区域。</p><p>表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。</p><ul><li>文本域：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        First name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>密码字段通过标签<code>&lt;input type=&quot;password&quot;&gt;</code> 来定义，密码字段字符不会明文显示，而是以星号或圆点替代。</p><ul><li>单选按钮：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>Male<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>Female</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>复选按钮：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;vehicle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Bike&quot;</span>&gt;</span>I have a bike<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;vehicle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Car&quot;</span>&gt;</span>I have a car</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="HTML架构">HTML架构</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span> <span class="attr">src</span>=<span class="string">&quot;demo_iframe.htm&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="HTML样式的CSS引用">HTML样式的CSS引用</h3><ul><li>内联样式- 在HTML元素中使用<code>&quot;style&quot; </code><strong>属性</strong></li><li>内部样式表 -在HTML文档头部 <code>&lt;head&gt;  </code>区域使用<code>&lt;style&gt; </code>元素来包含CSS</li><li>外部引用 - 使用外部 CSS 文件</li></ul><hr><h3 id="HTML的其他常用元素">HTML的其他常用元素</h3><ul><li><code>&lt;br&gt;</code>：换行</li><li><code>&lt;hr&gt;</code>：添加一行水平线</li><li><code>&lt;!-- 这是一个注释 --&gt;</code>：添加注释</li></ul><hr><h3 id="HTML中的注意事项">HTML中的注意事项</h3><ul><li>HTML的标签对大小写不敏感，但推荐使用小写标签</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络学习笔记6：广域网技术</title>
      <link href="/2021/12/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%B9%BF%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/"/>
      <url>/2021/12/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%B9%BF%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="1-广域网概述">1. 广域网概述</h2><ul><li><p>一个典型的广域网：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj7db8ryvj30pa0hoab6.jpg" alt="image-20211219160419984" style="zoom:50%;" /></li><li><p>网络层与通信子网：</p><ul><li><p>ISO 定义：网络层为一个网络连接的两个传送实体间<font color=red> 交换网络服务数据单元</font>提供功能和规程的方法，它使传送实体独立于<font color=red>路由选择和交换</font>的方式。</p></li><li><p>网络层是处理<font color=red>端到端</font>传输的最低层，<font color=red> 通信子网</font>的最高层。</p></li><li><p>网络层要解决的关键问题是了解通信子网的<font color=red>拓扑结构</font>，<font color=red>选择路由</font>。</p></li></ul></li><li><p>网络服务是按照下列目标设计的：</p><ul><li><p>服务与通信子网技术无关</p></li><li><p>通信子网的数量、类型和拓扑结构对于传输层来说是隐蔽的。</p></li><li><p>传输层所获得的网络地址应该采用统一编号，即使跨越了多个LAN和WAN。</p></li></ul></li><li><p>网络层设计的焦点是：</p><ul><li><p>应该提供<font color=red>面向连接的服务</font>还是<font color=red>无连接服务</font></p></li><li><p>本质是将复杂的差错控制和流量控制放在何处的问题。</p></li></ul></li><li><p>面向连接的服务和无连接的服务：</p><ul><li><p>面向连接服务：</p><p>传统电信的观点：通信子网应该提供可靠的、面向连接的服务，而<font color=red>将复杂的功能放在网络层(通信子网)</font>。</p></li><li><p>无连接服务</p><p>Internet的观点：通信子网无论怎么设计都是不可靠的，因此网络层只需提供无连接服务，而<font color=red>将复杂的功能放在传输层</font>。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj7ndz7uaj30vs08c3zo.jpg" alt="image-20211219161401468" style="zoom:50%;" /></li></ul></li><li><p>虚电路和数据报：</p><ul><li><p>虚电路服务（virtual circuit）</p><ul><li>提供<font color=red>面向连接</font>的服务</li><li>要先发送<font color=red> 虚呼叫分组</font>，一方面通知目的主机要求建立连接，另一方面寻找一条合适的路由。</li><li>若目标主机同意通信，则发应答，然后双方使用虚呼叫时建立的<font color=red> 虚电路</font>进行数据交换。</li><li>通信结束后，释放虚电路。</li></ul></li><li><p>数据报服务（datagram)</p><ul><li><p>提供<font color=red>无连接</font>的服务</p></li><li><p>主机有数据可随时发送</p></li><li><p>每个分组携带完整的目的地址，<font color=red> 独立进行路由选择</font></p></li></ul></li></ul></li><li><p>逻辑信道的管理和虚电路的建立:</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj80vjgbej30y20d43zl.jpg" alt="image-20211219162659112" style="zoom:50%;" /><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj815rhpnj30z40loq6j.jpg" alt="image-20211219162715468"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj80yng71j30ra06o0t5.jpg" alt="image-20211219162704311"></p><ul><li>注意：每一条虚电路的虚电路号由其局部决定</li></ul></li><li><p>虚电路和数据报比较：</p></li></ul><table><thead><tr><th style="text-align:center">项目</th><th style="text-align:center">虚电路</th><th style="text-align:center">数据报</th></tr></thead><tbody><tr><td style="text-align:center">目的地址</td><td style="text-align:center">建立连接时需要</td><td style="text-align:center">每个分组都需要</td></tr><tr><td style="text-align:center">初始化设置</td><td style="text-align:center">需要</td><td style="text-align:center">不需要</td></tr><tr><td style="text-align:center">分组顺序</td><td style="text-align:center">由通信子网保证</td><td style="text-align:center">通信子网不负责</td></tr><tr><td style="text-align:center">差错控制</td><td style="text-align:center">由通信子网负责，对主机透明</td><td style="text-align:center">由主机处理</td></tr><tr><td style="text-align:center">流量控制</td><td style="text-align:center">由通信子网提供</td><td style="text-align:center">通信子网不提供</td></tr><tr><td style="text-align:center">连接的建立和释放</td><td style="text-align:center">需要</td><td style="text-align:center">不需要</td></tr></tbody></table><h2 id="2-路由算法（-）">2. 路由算法（*）</h2><ul><li><p>路由算法是<font color=red>网络层软件</font>的一部分</p><ul><li><p>子网采用<font color=red>数据报</font>方式，每个包都要做路由选择；</p></li><li><p>子网采用<font color=red> 虚电路</font>方式，只需在建立连接时做一次路由选择。</p></li></ul></li><li><p>路由算法应具有的特性：</p><ul><li><p>正确性（correctness）</p></li><li><p>简单性（simplicity）</p></li><li><p>健壮性（robustness：鲁棒性）</p></li><li><p>稳定性（stability）</p></li><li><p>公平性（fairness）</p></li><li><p>最优性（optimality）</p></li></ul></li><li><p>路由算法的分类：</p><ul><li><p>按转发方式和数据副本数量划分：</p><ul><li><p>全路路由算法：如洪泛算法，<font color=red>按照所有路径广播转发</font></p></li><li><p>多路路由算法：如选择洪泛算法，<font color=red>向所有接近目的节点的路径转发</font></p></li><li><p>单路路由算法：向目的节点<font color=red>沿着唯一的路径转发</font><font color=blue>（网络中多采用）</font></p></li></ul></li><li><p>按健壮性和简单性划分：</p><ul><li><p><font color=red>非自适应算法，静态路由算法</font>：不能根据网络流量和拓扑结构的变化更新路由表，使用静态路由表，也称为固定式路由选择算法。</p><ul><li><p>特点：简单，开销少；灵活性差。</p></li><li><p>代表算法：基于流量的路由算法等</p></li></ul></li><li><p><font color=red>自适应算法，动态路由算法</font>：可根据网络流量和拓扑结构的变化更新路由表。<font color=blue>（网络中多采用）</font></p><ul><li><p>特点：开销大；健壮性和灵活性好。</p></li><li><p>代表算法：距离向量路由算法，链路状态路由算法等</p></li></ul></li></ul></li></ul></li><li><p>自适应路由算法工作过程：</p><ul><li><p><font color=red>测量</font>（获取）有关路由选择的<font color=red>网络参数 </font>：</p><ul><li>如何测量？选取什么网络参数</li></ul></li><li><p>将路由信息<font color=red>传送</font>到<font color=red>适当</font>的网络节点：</p><ul><li><p>传送给谁？如何传送？传送什么信息？</p></li><li><p>根据信息汇总时数据传送的方式不同可分为：<font color=red> 孤立式，集中式，分布式</font></p></li></ul></li><li><p>计算和<font color=red>更新</font>路由表</p><ul><li>更新路由表的算法</li></ul></li><li><p>根据新路由表执行分组的转发</p></li></ul></li><li><p>分层路由：</p><ul><li><p>网络规模增长带来的问题：</p><ul><li><p>路由器中的路由表增大；</p></li><li><p>路由器为选择路由而占用的内存、CPU时间和网络带宽增大。</p></li></ul></li><li><p>分层路由：</p><ul><li><p>分而治之的思想；</p></li><li><p>根据需要，将路由器分成区域（regions）、聚类（clusters）、区（zones）和组（groups）</p></li></ul></li><li><p>分层路由带来的问题：</p><ul><li>路由表中的路由不一定是最优路由。</li></ul></li><li><p>分层路由算法示例：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj8o6kjj2j30y40jumzm.jpg" alt="image-20211219164923258" style="zoom:50%;" /></li></ul></li></ul><h3 id="1-距离向量路由算法">1. 距离向量路由算法</h3><ol><li><p>定义：<font color=red>距离向量路由算法</font>（Distance Vector Routing），属于<font color=red>动态路由算法</font>，也称Bellman-Ford路由算法或Ford-Fulkerson算法，最初用于ARPANET，被<font color=red>RIP</font>协议所采用。</p></li><li><p>距离向量路由算法基本思想：</p><ul><li><p>每个路由器维护一张路由表，表中给出了到每个目的地的已知<font color=red> 最佳距离和线路</font>，并通过与相邻路由器<font color=red>交换距离信息</font>来更新表；</p></li><li><p>以路由器为表的索引，表项包括两部分：到达目的结点的<font color=red>最佳输出线路</font>，和到达目的结点<font color=red> 所需时间或距离</font>；</p></li><li><p>每隔一段时间，路由器向<font color=red>所有邻居结点</font><font color=blue>发送</font>它到每个目的结点的距离表，同时它也<font color=blue>接收</font>每个邻居结点发来的距离表；</p></li><li><p>邻居结点X发来的表中，X到路由器i的距离为Xi，本路由器到X的距离为m，则路由器经过X到i的距离为Xi + m。根据不同邻居发来的信息，<font color=red>计算Xi + m</font>，并取<font color=red>最小值</font>，更新本路由器的路由表；</p></li></ul></li><li><p>例子：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj8t2vu0qj30yc0i4dib.jpg" alt="image-20211219165404831" style="zoom:50%;" /></li><li><p>无限计算问题：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj8y0xbcjj30g003aglh.jpg" alt="image-20211219165851264" style="zoom:50%;" /><ul><li><p>算法的缺陷：对好消息反应迅速，对坏消息反应迟钝；</p></li><li><p>通常可以以下4种方法来解决无限计算问题:</p><ul><li><p>水平分割</p></li><li><p>定义一个最大值</p></li><li><p>挂起计数器</p></li><li><p>触发式更新</p></li></ul></li></ul></li></ol><h3 id="2-链路状态路由算法">2. 链路状态路由算法</h3><ul><li><p>距离向量路由算法的主要问题：</p><ul><li><p>选择路由时，没有考虑线路带宽等因素；</p></li><li><p>路由<font color=red>收敛速度慢</font>。</p></li></ul></li><li><p>实用协议：</p><ul><li>OSPF、IS-IS</li></ul></li><li><p>链路状态路由算法：</p><ul><li><p>发现<font color=red>邻居结点</font>，并学习它们的<font color=red>网络地址</font>；</p><ul><li><p>路由器启动后，通过<font color=blue>发送HELLO包</font>发现邻居结点；</p></li><li><p>两个或多个路由器连在一个LAN时，引入人工结点；</p></li></ul></li><li><p>测量到<font color=red>每个邻居结点的延迟或开销</font>；</p><ul><li>一种直接的方法是：发送一个要对方立即响应的ECHO包，来回时间除以2即为延迟。</li></ul></li><li><p>将所有学习到的内容封<font color=red>装成一个链路状态包</font>；</p><ul><li><p>以发送方的标识符开头，后面是序号、年龄和一个邻居结点列表；</p></li><li><p>列表中对应每个邻居结点，都有发送方到它们的延迟或开销。</p></li><li><p>链路状态包定期创建或发生重大事件时创建。</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjdyw5azuj30z00dcjt3.jpg" alt="image-20211219195238039" style="zoom:50%;" /> <ul><li><p>将链路状态包广播<font color=red> 发送给所有其它路由器</font>；</p><ul><li><p>基本思想：洪泛链路状态包</p></li><li><p>为控制洪泛，每个包包含一个序号，每次发送新包时加1。路由器记录信息对（源路由器，序号），当一个链路状态包到达时，若是新的，则分发；若是重复的，则丢弃；若序号比路由器记录中的最大序号小，则认为过时而丢弃；</p></li></ul></li><li><p>计算到每个其它路由器的<font color=red>最短路径</font>。</p><ul><li>根据Dijkstra算法计算最短路径；</li></ul></li></ul></li><li><p>问题：序号循环使用；路由器崩溃后，<font color=red>序号重置</font>；序号出错。</p><p>解决办法：</p><ol><li><p>使用32位序号；</p></li><li><p>增加年龄（age）域，<font color=red>每秒钟年龄减1</font>，为零则丢弃；</p></li><li><p>链路状态包到达后，延迟一段时间，并与其它已到达的来自同一路由器的链路状态包比较序号，丢弃重复包，保留新包；</p></li><li><p>链路状态包需要应答；</p></li></ol></li><li><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjeauhh30j30z00f2myp.jpg" alt="image-20211219200409752" style="zoom:50%;" /><ul><li>从E发来的链路状态包有两个，一个经过EAB，另一个经过EFB；</li><li>从D发来的链路状态包有两个，一个经过DCB，另一个经过DFB；</li></ul></li><li><p>路由器：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjeqrtziwj30yu0j2gnd.jpg" alt="image-20211219201928473" style="zoom:50%;" /><p>交换方法：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjerkvvztj30yu0a4dgw.jpg" alt="image-20211219202014491" style="zoom:50%;" /></li><li><p>组播路由和广播路由：</p><ol><li><p>广播路由：</p><ul><li><p>广播路由用于解决<font color=red>一对所有</font>发送时的路由问题</p></li><li><p>常用的发送方法有以下两种：<font color=blue>（网络中多用后者）</font></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjeszv7ujj30rc0g43zr.jpg" alt="image-20211219202135551" style="zoom:50%;" /></li><li><p>常用的方法</p><ul><li><p>无控制的洪泛算法</p></li><li><p>受控的洪泛算法</p></li></ul></li><li><p>常用的广播控制策略策略：</p><ul><li><p>采用序号来控制洪泛。</p></li><li><p>逆向路径转发，也被称为反向路径转发。</p></li><li><p>生成树广播。</p></li></ul></li></ul></li><li><p>组播路由：</p><ul><li><p>组播路由用于解决<font color=red>一对多</font>发送时的路由问题</p></li><li><p>组播数据转发的原理如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjezlcrqqj30l00jkt9s.jpg" alt="image-20211219202755371" style="zoom:50%;" /></li></ul></li></ol></li></ul><h2 id="3-拥塞控制">3. 拥塞控制</h2><h3 id="1-拥塞产生的原因">1. 拥塞产生的原因</h3><ul><li><p>拥塞（congestion）：</p><ul><li>网络上有太多的包时，性能会下降，这种情况称为<font color=red>拥塞</font>。</li></ul></li><li><p>拥塞产生的原因：</p><ul><li><p>多个输入对应一个输出；</p></li><li><p>慢速处理器；</p></li><li><p>低带宽线路。</p></li></ul></li><li><p>解决办法：</p><ul><li><p>解决<font color=red>需求</font>和<font color=red>能力</font>的矛盾。</p></li><li><p>针对某个因素的解决方案，只能对提高网络性能起到一点点好处，甚至可能仅仅是转移了影响性能的瓶颈；需要全面考虑各个因素。</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjfgiiq9lj30wo0lgmzh.jpg" alt="image-20211219204401501" style="zoom:50%;" /><ul><li><p>拥塞的发现：</p><ul><li>缺乏缓冲区造成的丢包率<font color=blue>（中间节点感受到）</font></li><li>平均队列长度<font color=blue>（中间节点感受到）</font></li><li>超时重传的包的数目<font color=blue>（源节点感受到）（TCP协议在用）</font></li><li>平均包延迟<font color=blue>（源节点感受到）</font></li><li>包延迟变化（Jitter）<font color=blue>（源节点感受到）</font></li></ul></li><li><p>拥塞的监视点：</p><ul><li><p>源节点</p></li><li><p>中间路由器</p></li></ul></li><li><p>拥塞控制与流量控制的差别：</p><ul><li><p>拥塞控制（congestion control）：</p><ul><li>需要确保通信子网能够承载用户提交的通信量，是一个全局性问题，涉及主机、路由器等很多因素；</li></ul></li><li><p>流量控制（flow control）：</p><ul><li>与点到点的通信量有关，主要解决<font color=red> 快速发送方与慢速接收方</font>的问题，是局部问题，一般都是基于反馈进行控制的。</li></ul></li></ul></li><li><p>流量控制的层次：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxjg8l7wmyj30yo07m3zh.jpg" alt="image-20211219211107802" style="zoom:50%;" /></li></ul><h3 id="2-常用的拥塞控制方法">2. 常用的拥塞控制方法</h3><ul><li><p>根据控制论，拥塞控制方法分为两类</p><ul><li><p>开环控制：</p><ul><li><p>通过好的设计来解决问题，<font color=red>避免</font>拥塞发生；</p></li><li><p>拥塞控制时，<font color=red>不考虑</font>网络当前状态；</p></li></ul></li><li><p>闭环控制：</p><ul><li><p>基于<font color=red>反馈机制</font>；</p></li><li><p>工作过程：</p><ul><li><p>监控系统，发现何时何地发生拥塞；</p></li><li><p>把发生拥塞的消息传给能采取动作的站点；</p></li><li><p>调整系统操作，解决问题。</p></li></ul></li></ul></li></ul></li><li><p>根据算法的实现位置：</p><ul><li><p>链路算法</p></li><li><p>源算法</p></li></ul></li></ul><h4 id="1-开环拥塞控制">1. 开环拥塞控制</h4><ul><li><p>基本思想：</p><ul><li><p>造成拥塞的主要原因是网络流量通常是突发性的；</p></li><li><p>强迫包以一种可预测的速率发送；</p></li><li><p>在ATM网中广泛使用。</p></li></ul></li></ul><ol><li><p>漏桶算法（The Leaky Bucket Algorithm）</p><ul><li><p>将用户发出的不平滑的数据包流转变成网络中<font color=red>平滑的数据包流</font>；</p></li><li><p>可用于固定包长的协议，如ATM；也可用于可变包长的协议，如IP，使用字节计数；</p></li><li><p>无论负载突发性如何，漏桶算法强迫输出按<font color=red>平均速率</font>进行，不灵活。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxkdq0jsgqj31400qognr.jpg" alt="image-20211220162942137" style="zoom:50%;" /></li><li><p>令牌桶算法（The Token Bucket Algorithm）：</p><ul><li><p>令牌桶算法：</p><ul><li><p>漏桶算法不够灵活，因此加入令牌机制；</p></li><li><p>基本思想：漏桶存放令牌，每DT秒产生一个令牌，令牌累积到超过漏桶上界时就不再增加。包传输之前必须获得一个令牌，传输之后删除该令牌；</p></li></ul></li><li><p>漏桶算法与令牌桶算法的区别：</p><ul><li><p>流量整形策略不同：漏桶算法不允许空闲主机积累发送权，以便以后发送大的突发数据；令牌桶算法允许，最大为桶的大小。</p></li><li><p>漏桶中存放的是数据包，桶满了丢弃数据包；令牌桶中存放的是令牌，桶满了丢弃令牌，不丢弃数据包。</p></li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxkdt49aklj31400qgjt0.jpg" alt="image-20211220163241909"></p></li></ol><h4 id="2-闭环拥塞控制">2. 闭环拥塞控制</h4><ol><li><p>抑制分组方法：</p><ul><li><p>路由器<font color=red>监控</font>输出线路及其它资源的利用情况，<font color=red>超过某个阈值</font>，则此资源进入警戒状态；</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>U</mi><mtext>新</mtext></msub><mtext>＝</mtext><mi>a</mi><msub><mi>U</mi><mtext>老</mtext></msub><mtext>＋</mtext><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">U_新＝aU_老＋(1-a)f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">新</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">＝</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord cjk_fallback mtight">老</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">＋</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></span></p></li><li><p>每个新包到来，检查它的输出线路<font color=red>是否处于警戒状态</font>；</p></li><li><p>若是，则<font color=red>向源主机发送抑制包</font>，包中指出发生拥塞的<font color=red>目的地址</font>。同时将<font color=red>原包打上标记</font>（为了以后不再产生抑制包），<font color=red>正常转发</font>；</p></li><li><p>源主机收到抑制包后，<font color=red>按一定比例减少发向特定目的地的流量</font>，并在固定时间间隔内<font color=red> 忽略</font>指示同一目的地的抑制包。然后<font color=red>开始监听</font>，若此线路仍然<font color=red> 拥塞</font>，则主机在固定时间内减轻负载、忽略抑制包；若在监听周期内<font color=red> 没有收到抑制包</font>，则<font color=red> 增加负载</font>；</p></li><li><p>通常采用的流量增减策略是：<font color=red> 减少时，按一定比例减少</font>，保证快速解除拥塞；<font color=red> 增加时，以常量增加</font>，防止很快导致拥塞。</p></li></ul></li><li><p>负载丢弃方法：</p><ul><li><p>上述算法都不能消除拥塞时，路由器只得将包<font color=red> 丢弃</font>；</p><ul><li><p>针对不同服务，可采取不同丢弃策略</p><ul><li><p>文件传输，优先丢弃<font color=red>新包</font>，wine策略；</p></li><li><p>多媒体服务，优先丢弃<font color=red>旧包</font>，milk策略；</p></li></ul></li></ul></li><li><p>早期丢弃包，会减少拥塞发生的概率，提高网络性能。</p></li></ul></li></ol><h4 id="3-其他拥塞控制方法">3. 其他拥塞控制方法</h4><ul><li><p>AQM和RED算法：</p><ul><li><p>AQM：主动队列管理</p></li><li><p>REQ：随机早期检测</p></li></ul></li><li><p>基于QoS的拥塞控制：</p><ul><li><p>网络服务质量（Quality of Service，QoS）是指网络在传输数据流时要求满足的一系列服务请求。具体参数有：平均速率、最大速率、数据包的延迟时间、抖动、数据包的损失等。</p></li><li><p>基于QoS的拥塞控制不但可以防止拥塞，还会根据数据流的不同传输要求来分配延迟时间，将影响集中分配到传输延时要求不高的数据流上，而保证传输要求高的数据流顺利、优先通过。</p></li></ul></li></ul><h2 id="4-网络互连">4. 网络互连</h2><h3 id="1-网络互联的基本要求">1. <strong>网络互联的基本要求</strong></h3><ul><li><p>互联网（internet）：两个或多个网络构成互联网。</p></li><li><p>多种不同网络（协议）存在的原因：</p><ul><li><p>历史原因：不同公司的网络产品大量使用；</p></li><li><p>价格原因：网络产品价格低，更多的人有权决定使用何种网络；</p></li><li><p>技术原因：不同网络采用不同技术、不同硬件、不同协议。</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxke7lwyg6j30y00803z1.jpg" alt="image-20211220164637250" style="zoom:50%;" /><h3 id="2-网络互联需解决的问题">2. 网络互联需解决的问题</h3><ul><li><p>相同的通信协议，不但原则上相同，而且细节也要相同。</p></li><li><p>统一的寻址方式。</p></li><li><p>一致的分组或信息帧的长度。</p></li><li><p>广域网互连时，各个网络可能采用不同的流量控制方法，或选择不同的流量控制参数，互连时必须进行适配。</p></li><li><p>必须研究网间的延迟，以保证分组的可靠性传送，并且不超过规定的时延。</p></li><li><p>在跨越网络时，要进行网间传送费用的计算。</p></li><li><p>当有多个网络互连时，还必须解决网际间的路由选择。</p></li></ul><h3 id="3-网络互联的分类">3. 网络互联的分类</h3><p>计算机网络按地理范围可分为广域网WAN和局域网LAN。因此，网络互连可分为：</p><ul><li><p>广域网与广域网的互连</p></li><li><p>广域网和局域网的互连</p></li><li><p>局域网和局域网的互连</p></li><li><p>两个局域网通过广域网的互连</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxkebsokqyj30zq0gmgn1.jpg" alt="image-20211220165038501" style="zoom:50%;" /><ul><li>网关一定是双协议栈，即左侧加载左侧网络的协议，右侧加载右侧网络的协议</li></ul><h3 id="4-网络互联设备">4. 网络互联设备</h3><ul><li><p>中继器（repeater）</p><ul><li><p><font color=red> 物理层</font>设备，在电缆段之间拷贝比特；</p></li><li><p>对弱信号进行放大或再生，以便延长传输距离。</p></li></ul></li><li><p>网桥（bridge）</p><ul><li><p><font color=red> 数据链路层</font>设备，在局域网之间存储转发帧；</p></li><li><p>网桥可以改变帧格式。</p></li></ul></li><li><p>路由器（router）</p><ul><li><p><font color=red>网络层</font>设备，在网络之间存储转发包；</p></li><li><p>必要时，做网络层协议转换。</p></li></ul></li><li><p>网关（gateway）</p><ul><li><p><font color=red> 传输</font>网关（transport gateway）</p></li><li><p><font color=red> 应用</font>网关（application gateway）</p></li></ul></li></ul><h4 id="1-网桥">1. 网桥</h4><ul><li><p>网桥能够互联两个采用不同数据链路层协议、不同传输介质与不同传输速率的网络；</p></li><li><p>网桥以接收、存储、地址过滤与转发的方式实现互联的网络之间的通信；</p></li><li><p>用网桥互联的网络要求在数据链路层以上采用相同的协议；</p></li><li><p>网桥可以分隔两个网络的广播通信量，有利于改善网络的性能和安全性。</p></li></ul><p><font color=blue>补充： 只能完成两个局域网的互联。</font></p><h4 id="2-路由器">2. 路由器</h4><ul><li><p>网络层的互联设备是<font color=red> 路由器Router</font>；</p></li><li><p>网络层互联主要解决的问题是<font color=red>路由选择</font>、拥塞控制、差错处理与分段技术；</p></li><li><p>如果网络层协议相同，互联主要解决路由选择的问题；</p></li><li><p>如果网络层协议不同，则需要使用<font color=red> 多协议路由器</font>（Multiprotocol Router);</p></li><li><p>用路由器实现网络层互联时，网络层及以下各层协议可以相同也可以不同。</p></li></ul><h4 id="3-多协议路由器">3. 多协议路由器</h4><ul><li><p>当互联局域网的高层采用不同的协议时，如一种是TCP/IP，另一种是IPX/SPX，就需要使用<font color=red>多协议路由器</font>来连接。</p></li><li><p>多协议路由器除了具有处理不同协议分组的能力，还具有对这两种类型分组的路由选择与分组转发能力。</p></li><li><p>多协议路由器同时要为不同类型的协议建立和<font color=red>维护不同的路由表</font>。</p></li></ul><h4 id=""></h4><ul><li><p>常用路由器实现LAN互联，与网桥实现LAN互联区别：</p><ul><li><p>路由器互连的LAN网络层协议可不同；</p></li><li><p>路由器将多个LAN的广播通信量相互隔离开；</p></li><li><p>路由器转发效率低于网桥转发数据的效率；</p></li><li><p>路由器可完成LAN与WAN的互联。</p></li></ul></li></ul><h3 id="5-高层互联">5. 高层互联</h3><ul><li><p>传输层及以上各层协议不同的互联属于高层互联；</p></li><li><p>高层协议互联的设备是<font color=red>网关（Gateway）</font>；</p></li><li><p>高层互联使用的网关很多是应用层网关，简称<font color=red>应用网关（Application Gateway)</font>；</p></li><li><p>如果使用应用网关来实现两个网络的高层互联，允许两个网络的应用层及以下各层的网络协议不同。</p></li></ul><h2 id="5-互联网接入技术-不考">5. 互联网接入技术(不考)</h2><h2 id="6-广域网实例-不考">6. 广域网实例(不考)</h2>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络学习笔记5：局域网</title>
      <link href="/2021/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%B1%80%E5%9F%9F%E7%BD%91/"/>
      <url>/2021/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%B1%80%E5%9F%9F%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h2 id="1-局域网的概述">1.局域网的概述</h2><ul><li>局域网是一种将<font color="red">小区域</font>内的<font color="red">各种通信设备</font>互连在一起的<font color="red">通信网络</font>。</li></ul><h3 id="1-局域网的特征">1. 局域网的特征</h3><p>与广域网相比，局域网有以下特点：</p><ol><li><font color=red>短距离</font>：一般小于25km</li><li><font color=red>高速率</font>：10~100Mbps</li><li><font color=red>低误码率</font>：10^-8~10^-10</li><li>一般采用<font color=red>基带传输</font></li><li>为一个单位所私有，自行建设，不对外提供服务</li></ol><h3 id="2-局域网的基本构成">2. 局域网的基本构成</h3><ol><li><p>局域网拓扑结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvddilfdoj311q0a4q42.jpg" alt="image-20211028215650018" style="zoom:50%;" /></li><li><p>传输介质：</p><ol><li>双绞线</li><li>基带同轴电缆</li><li>光纤</li><li>无线介质</li></ol></li></ol><h3 id="3-IEEE-802局域网体系结构">3. IEEE 802局域网体系结构</h3><ul><li>IEEE 802与OSI网络体系结构比较：</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvv9ctu4m1j30tq0fgjsk.jpg" alt="image-20211028193906961" style="zoom:50%;" /><ul><li><p>特征：</p><ol><li>IEEE 802局域网体系结构中只有<font color=red>通信子网</font>；</li><li>通信子网中没有<font color=red>网络层</font>（局域网发展早期规模小，不需要网络层做路由选择）；</li><li>将数据链路层分为<font color="red">逻辑链路控制子层</font>和<font color="red">介质访问控制子层</font>。</li></ol></li><li><p>下图为IEEE 802标准间的关系，其中每一个矩形块代表一种类型的网络，例如802.3代表以太网。不同网络的区别表现在物理层和介质访问子层，共用802.2LLC逻辑链路控制子层是为了给上层网络的操作系统提供一个<font color="red">统一的接口</font>。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvv9im4xkwj31220dg0ud.jpg" alt="image-20211028194443994" style="zoom:50%;" /><p><font color=red>不同网络的差别体现在介质访问控制子层和物理层。</font></p></li><li><p>IEEE 802中的主要标准：</p><ul><li><p>802.1A 概述和体系结构</p></li><li><p>802.1B 寻址、网络管理、网络互连及高层接口</p></li><li><p>802.2 逻辑链路控制子层LLC</p></li><li><p>802.3 以太网访问方法和物理层规范<font color=blue>（变化最多的）</font></p></li><li><p>802.4 <font color=blue>令牌总线网</font>访问方法和物理层规范</p></li><li><p>802.5 <font color=blue>令牌环网</font>访问方法和物理层规范</p></li><li><p>802.6 城域网访问方法和物理层规范（DQDB）</p></li><li><p>802.8 光纤技术相关标准</p></li><li><p>802.9 综合话音数据局域网</p></li><li><p>802.10 互操作LAN安全标准 (SILS)</p></li><li><p>802.11 无线局域网 (Wireless LAN)</p></li><li><p>802.12 100VG ANYLAN网</p></li><li><p>802.14 交互式电视网（包括 cable modem)</p></li><li><p>802.15 短距离无线网络WPAN,包括蓝牙</p></li><li><p>802.16 宽带无线接入</p></li><li><p>802.17 弹性分组环RPR</p></li></ul></li></ul><h3 id="4-IEEE802-数据链路层分层的目的">4. IEEE802 数据链路层分层的目的</h3><ul><li><p>将功能中与硬件相关的部分和与硬件无关的部分分开，降低实现的复杂度。</p></li><li><p>传统共享式局域网特点：共享信道，需要解决介质访问控制（MAC）问题。分层可以使帧的传输独立于介质和MAC方法。</p><ul><li><p>LLC： 与介质、拓扑无关</p></li><li><p>MAC：与介质、拓扑相关</p></li></ul></li></ul><h3 id="5-IEEE-802网络体系各层功能">5. IEEE 802网络体系各层功能</h3><ol><li><p>物理层的主要功能：</p><ul><li>信号的编码/译码<font color=blue>（主要为数字编码）</font></li><li>前导码的生成/去除<font color=blue>（前导码的作用：1.频率匹配2.确定有效数字起始位置）</font></li><li>比特的发送/接收</li></ul></li><li><p>数据链路层的主要功能：</p><ol><li><p>MAC子层功能：成帧/拆帧，实现、维护MAC协议，位差错检测，寻址。</p></li><li><p>LLC子层功能：管理数据链路通信，链接寻址，向高层提供SAP，排序。</p><ul><li><p>LLC帧格式  ：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhef1wbwhj30w60jgdhp.jpg" alt="image-20211218023704276" style="zoom:50%;" /></li><li><p>服务访问点（SAP）</p><ul><li><p>LLC SAP：向上层提供进程访问能力。</p></li><li><p>MAC SAP：MAC地址（即：网卡地址、物理地址）</p></li></ul></li><li><p>LLC提供的服务类型</p><ul><li><p>LLC1 不确认无连接的服务</p></li><li><p>LLC2 面向连接的服务</p></li><li><p>LLC3 带确认无连接的服务</p></li><li><p>LLC4 高速传输服务 （1991年专为城域网提出）</p></li></ul></li></ul></li></ol></li></ol><h2 id="2-广播式信道共享技术">2. 广播式信道共享技术</h2><ul><li>按信道连接方式网络可以分为两类：<ol><li>使用点到点的网络</li><li>使用广播信道（如何解决信道争用？）</li></ol></li></ul><h3 id="1-信道的静态分配">1. 信道的静态分配</h3><ul><li><p>静态分配的基本思想是将宽带等信道资源<font color="red">平均分配</font>给每个要参与通信的用户。</p><ul><li><p>优点：适合于用户较少，数目基本固定，各用户的通信量都较大的情况。</p></li><li><p>缺点：无法灵活适应站点数及其通信量的变化。</p></li></ul></li><li><p>举例：</p><ul><li><p>频分多路复用 FDM（波分复用WDM）：将频带平均分配给每个要参与通信的用户；</p></li><li><p>时分多路复用 TDM：每个用户拥有固定的信道传送时槽。</p></li></ul></li></ul><h3 id="2-信道的动态分配">2. 信道的动态分配</h3><ol><li><p>局域网都采用动态分配策略，即根据当前对<font color="red">信道请求的情况</font><font color="orange">动态协调</font>各用户对信道的使用权。</p></li><li><p>动态分配主要分为以下两类：</p><ul><li>无冲突协议  [类比举手发言]</li><li>冲突协议  [类比抢答]</li></ul></li></ol><h4 id="1-无冲突协议——令牌协议：">1. 无冲突协议——令牌协议：</h4><ul><li>在网络中流转着一个被称为<font color='red'>“令牌Token”</font>的帧，一个节点要发送数据必须首先截获令牌，由于网络中<font color='red'>只有一个令牌</font>，从而不会产生冲突。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvagpvpr2j30mm0k8wg7.jpg" alt="image-20211028201730914" style="zoom:50%;" /><ul><li><font color=blue>补充：对于一个类似于举手发言的集中式控制协议，其管理简单，但对用中间结点过于依赖，而且越靠近中间结点流量越大，容易产生网络中的瓶颈，因此我们不希望采取集中式控制。</font></li><li>一般会规定一个令牌的持有时间，来保证同步传输。</li><li>传输中的<font color=blue>数据最终由源删除</font>。</li><li>补充：FDDI网络<ul><li>采用双环机制，正常情况下只有主环在工作，备用环在主环无法工作时工作</li><li>采取多令牌协议</li><li>被淘汰原因：协议复杂，效率低下，带宽无法大幅度提高；入网时延太高。</li></ul></li></ul><h4 id="2-冲突协议：">2. 冲突协议：</h4><h5 id="1-ALOHA协议：">1. ALOHA协议：</h5><ol><li><p>目的：解决信道的动态分配，基本思想可用于任何<font color='red'>无协调关系</font>的用户争用单一共享信道使用权的系统；</p></li><li><p>分类：<font color=red>纯ALOHA协议</font>和<font color=red>时间片ALOHA协议</font></p></li><li><p>纯ALOHA协议：用户有数据要发送时，可以<font color=red>直接发至信道</font>；然后<font color=red>监听信道</font>看是否产生冲突，若产生冲突，则等待一段<font color=red>随机的时间</font>重发。</p></li><li><p>时间片ALOHA协议：把信道时间<font color=red>分成离散的时间片</font>，片长为一个帧所需的发送时间。每个站点只能在<font color=red>时间片开始时</font>才允许发送。其他过程与纯ALOHA协议相同。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvbf5zqssj30ym0cymyi.jpg" alt="image-20211028205036812" style="zoom:67%;" /></li></ol><h5 id="2-载波监听多路访问协议CSMA：">2. 载波监听多路访问协议CSMA：</h5><ol><li><p>载波监听：站点在为发送帧而访问传输信道之前，首先<font color=red>监听信道有无载波</font>，若有载波，说明已有用户在使用信道，则不发送帧以避免冲突。</p></li><li><p>1-坚持式CSMA（1-persistent CSMA）：</p><ol><li><p>原理：</p><ol><li>若站点有数据发送，先<font color='red'>监听信道</font>；</li><li>若站点发现<font color='red'>信道空闲</font>，则<font color='red'>发送</font>；</li><li>若信道忙，则<font color='red'>继续监听</font>直至发现信道空闲，然后完成发送；</li><li>若产生冲突，<font color='red'>等待一随机时间</font>，然后重新开始发送过程。</li></ol></li><li><p>性能</p><ol><li><p>优点：减少了信道空闲时间；</p></li><li><p>缺点：增加了发生冲突的概率；</p></li><li><p>广播延迟对协议性能的影响：广播延迟越大，发生冲突的可能性越大，协议性能越差；</p></li></ol></li></ol></li><li><p>非坚持型CSMA（nonpersistent CSMA）:</p><ol><li><p>原理:</p><ol><li>若站点有数据发送，先<font color='red'>监听信道</font>；</li><li>若站点发现<font color='red'>信道空闲</font>，则<font color='red'>发送</font>；</li><li>若信道忙，<font color='red'>等待一随机时间</font>，然后<font color='red'>重新开始发送</font>过程；</li><li>若产生冲突，<font color='red'>等待一随机时间</font>，然后<font color='red'>重新开始发送</font>过程。</li></ol></li><li><p>性能:</p><ol><li>优点：减少了冲突的概率；</li><li>缺点：增加了信道空闲时间，数据发送延迟增大；</li><li>信道效率比 1-坚持CSMA高，传输延迟比 1-坚持CSMA大。</li></ol></li></ol></li><li><p>p-坚持型CSMA（p-persistent CSMA）:</p><ul><li><p>适用于分槽信道</p></li><li><p>原理</p><ol><li>若站点有数据发送，先<font color='red'>监听信道</font>；</li><li>若站点发现信道空闲，则<font color='red'>以概率p发送数据</font>，<font color='red'>以概率q =1- p 延迟至下一个时槽发送</font>。若下一个时槽仍空闲，重复此过程，直至数据发出或时槽被其他站点所占用；</li><li>若信道忙，则<font color=red>等待下一个时槽</font>，重新开始发送；</li><li>若产生冲突，<font color=red>等待一随机时间</font>，然后重新开始发送。</li></ol></li></ul></li><li><p>带冲突检测的载波监听多路访问协议CSMA/CD：</p><ol><li><p>引入原因</p><p>当两个帧发生冲突时，两个<font color='red'>被损坏帧继续传送毫无意义</font>，而且信道无法被其他站点使用，对于有限的信道来讲，这是很大的浪费。如果站点<font color='red'>边发送边监听</font>，并在监听到冲突之后立即停止发送，可以提高信道的利用率，因此产生了CSMA/CD。</p></li><li><p>原理：</p><ul><li>站点使用CSMA协议进行数据发送；</li><li>在发送期间如果检测到冲突，立即终止发送，并发出一个瞬间干扰信号，使所有的站点都知道发生了冲突；</li><li>在发出干扰信号后，等待一段随机时间（称为退避） ，再重复上述过程。</li></ul></li></ol></li></ol><h2 id="3-以太网">3.以太网</h2><h3 id="1-历史">1. 历史</h3><p>IEEE 802.3 和 Ethernet：</p><ul><li><p>ALOHA系统</p></li><li><p>ALOHA + 载波监听</p></li><li><p>Xerox 设计了2.94Mbps的采用CSMA/CD协议的Ethernet</p></li><li><p>Xerox, DEC, Intel共同制定了10Mbps的CSMA/CD以太网标准</p></li><li><p>IEEE定义了采用<font color=red>1-坚持型CSMA/CD技术</font>的802.3局域网标准，速率从1M到10Mbps，802.3标准与以太网协议略有差别。 <font color=red>Ethernet和IEEE 802.3的帧格式不同</font>。</p></li></ul><h3 id="2-传统以太网">2. 传统以太网</h3><ol><li><p>10 Base 5以太网的网络结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvc31bihyj30ru0l00u6.jpg" alt="image-20211028211334231" style="zoom:50%;" /><ul><li><font color=blue>不可以通过加中继器的方式无限的拓展网络距离</font></li><li><font color=blue>10M以太网最多只能有4个中继器</font></li></ul></li><li><p>以太网物理层类型：</p><ul><li><p>10Base5 粗同轴电缆</p></li><li><p>10Base2 细同轴电缆</p></li><li><p>10BaseT 双绞线</p></li><li><p>10BaseF 光纤MMF</p></li><li><p>100BaseT 双绞线</p></li><li><p>100BaseF 光纤MMF/SMF</p></li><li><p>1000BaseX 屏蔽双绞线/MMF/SMF</p></li><li><p>1000BaseT 双绞线</p></li><li><p>10GBaseX、10BaseR（局域网，编码方式不同）</p></li><li><p>10GBaseW（广域网）</p></li><li><p>40GbaseCR4、100GBaseSR10、100GBaseCR10 …</p></li><li><p>“100GBase-abc”，字母“a、b、c”分别代表其工作波长、物理层编码方式和波长复用数。</p></li></ul></li><li><p>IEEE802.3与OSI的对应关系：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvcby48e6j30sc0k0dht.jpg" alt="image-20211028212207787" style="zoom:50%;" /><ul><li>对物理层进行了分层：<font color=red>物理介质相关子层、物理介质无关子层</font></li></ul></li><li><p>传统以太网的介质访问控制方法：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvcdppgd8j30i20fuwff.jpg" alt="image-20211028212349353" style="zoom:50%;" /><ul><li>存在帧间隙的原因：1. 帧定界  2. 保证结点获得数据的公平性</li></ul></li><li><p>二进制指数后退算法：</p><ul><li><p>将冲突发生后的时间划分为长度为<font color='red'>51.2微秒</font>的时槽</p></li><li><p>发生第一次冲突后，各个站点等待 0 或 1 个时槽再开始重传；</p></li><li><p>发生第二次冲突后，各个站点随机地选择等待0, 1, 2或3个时槽再开始重传；</p></li><li><p>第 <font color='red'>i</font> 次冲突后，在 0 至 <font color='red'>2^i-1</font> 间随机地选择一个等待的时槽数，再开始重传；</p></li><li><p>10次冲突后，选择等待的时槽数固定在<font color='red'>0至2^10-1</font>之间；</p></li><li><p><font color='red'>16</font>次冲突后，发送失败，报告上层。</p></li></ul></li><li><p>最短长帧：</p><ul><li>避免帧的第一个比特到达电缆的远端前帧已经发完，帧发送时间应该大于 2t；即：<font color=red> 传输时延 &gt; 2*传播时延</font>。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvcr5exk0j30w80byjs3.jpg" alt="image-20211028213643811" style="zoom:50%;" /><ul><li>10Mbps LAN，最大冲突检测时间为<font color=red>51.2微秒</font>，最短帧长为<font color=red>64字节</font>；</li><li>网络速度提高，最短帧长也应该增大或者站点间的距离要减小。</li></ul></li><li><p>传统以太网的帧格式</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvvcwjrii8j311k09egmp.jpg" alt="image-20211028214133595" style="zoom:50%;" /><ul><li><p>PA： <font color=blue> 前同步码</font> - 10101010序列，用于使接收方与发送方同步</p></li><li><p>SFD： <font color=blue> 帧首定界</font> – 10101011</p></li><li><p>DA： <font color=blue> 目的MAC地址</font>；</p></li><li><p>SA： <font color=blue> 源MAC地址</font></p></li><li><p>LEN：数据长度（数据部分的字节数）（0-1500B）</p></li><li><p>Type： 类型。<font color=blue> 高层协议标识</font></p></li><li><p>LLC PDU + PAD ： 最少46字节, 最多1500字节</p></li><li><p>PAD：填充字段，保证帧长不少于64字节(若Data域≥46字节，则无PAD)</p></li><li><p>FCS： 帧校验序列（CRC-32）</p></li><li><p>前导码：7个字节的<font color=red>10101010</font>，产生<font color=red>固定频率的方波信号</font>（如1000MHZ)，持续5~6微秒，收发双方的<font color=red>时钟同步</font>。</p></li><li><p>帧首定界符：1个字节的<font color=red>10101011</font>，标志着<font color=red>帧的开始</font>。</p></li><li><p>目的地址和源地址：</p><ul><li><p>共6个字节，前三个字节由IEEE802<font color=red>分配给厂商</font>，后三个字节由厂商唯一地<font color=red>分配给所生产的网卡</font>。</p></li><li><p>对目的地址，以太网只有最高位有定义，为“0”表示<font color=blue>单播</font>，为“1”表示<font color=blue>多播</font>或<font color=blue>广播</font>。若广播要求目的地址全“1”。而IEEE802.3对最高位和次高位都有定义，最高位与以太网相同。次高位为“0”表示全局管理地址，为“1”局部管理地址，一般情况下总为全局管理地址（由IEEE802分配）。</p></li></ul></li><li><p>长度或类型：</p><ul><li><p>长度字段（IEEE802.3）：表示LLC-PDU的字节数，范围46~1500。当长度小于46字节时，需要在帧填充字段中填“0”。</p></li><li><p>类型字段（以太网）：说明高层使用的协议，如IP,IPX等。</p></li><li><p>为保证以上两种帧可以兼容，类型字段的类型码需大于1536D(0600H)，如0800H表示IP,8137H为IPX等。若此字段的值小于(0600H)表示为IEEE802.3类型的帧。</p></li></ul></li><li><p>数据：此字段的值即LLC-PDU的帧，长度为46~1500字节。</p></li><li><p>帧校验序列：采用32位的循环冗余校验法。校验内容包括除PA,SFD和FCS以外的其它字段。</p></li><li><p>编码：数据传输使用<font color=red>曼彻斯特编码</font>。</p></li></ul></li></ol><h3 id="3-高速以太网">3. 高速以太网</h3><h4 id="1-快速以太网（Fast-Ethernet）">1. 快速以太网（Fast Ethernet）</h4><ul><li><p>标准：1995年，IEEE通过802.3u标准，实际上是802.3的一个补充。原有的帧格式、接口、规程不变，只是将比特时间从100ns缩短为10ns。</p></li><li><p>对10 Mbps 802.3 LAN的改进：一种方法是改进10Base-5 或 10Base-2，采用CSMA/CD，最大电缆长度减为1/10，未被采纳；</p></li><li><p>快速以太网的标准：</p><ul><li><p>100Base-TX</p></li><li><p>100Base-FX</p></li><li><p>100Base-T4</p></li></ul></li><li><p>快速以太网与传统以太网体系结构的区别</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxib0t91bhj30yw0k6wgy.jpg" alt="image-20211218212505565" style="zoom:50%;" /><ul><li>100BaseT和10BaseT比较：</li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">10BASE-T</th><th style="text-align:center">100BASE-TX</th><th style="text-align:center">100BASE-FX</th><th style="text-align:center">100BASE-T4</th></tr></thead><tbody><tr><td style="text-align:center">编码方法</td><td style="text-align:center">曼彻斯特</td><td style="text-align:center">4B/5B</td><td style="text-align:center">4B/5B</td><td style="text-align:center">8B/6T</td></tr><tr><td style="text-align:center">传输介质</td><td style="text-align:center">UTP3/4/5</td><td style="text-align:center">UTP5,STP1</td><td style="text-align:center">多模/单模光纤</td><td style="text-align:center">UTP3/4/5</td></tr><tr><td style="text-align:center">信号频率</td><td style="text-align:center">20MHz</td><td style="text-align:center">125MHz</td><td style="text-align:center">125MHz</td><td style="text-align:center">25MHz</td></tr><tr><td style="text-align:center">使用线对</td><td style="text-align:center">2对</td><td style="text-align:center">2对</td><td style="text-align:center">2对</td><td style="text-align:center">4对</td></tr><tr><td style="text-align:center">发送线对</td><td style="text-align:center">1对</td><td style="text-align:center">1对</td><td style="text-align:center">1对</td><td style="text-align:center">3对</td></tr><tr><td style="text-align:center">网段距离</td><td style="text-align:center">100m</td><td style="text-align:center">100m</td><td style="text-align:center">150/412/  2000m</td><td style="text-align:center">100m</td></tr><tr><td style="text-align:center">全双工能力</td><td style="text-align:center">有</td><td style="text-align:center">有</td><td style="text-align:center">有</td><td style="text-align:center">无</td></tr></tbody></table><ul><li>传统以太网与快速以太网的MAC参数比较：</li></ul><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">传统以太网</th><th style="text-align:center">快速以太网</th></tr></thead><tbody><tr><td style="text-align:center">冲突检测时间片</td><td style="text-align:center">512位时</td><td style="text-align:center">512位时</td></tr><tr><td style="text-align:center">帧际间隙</td><td style="text-align:center">9.6μs（最小）</td><td style="text-align:center">0.96μs（最小）</td></tr><tr><td style="text-align:center">重试上限</td><td style="text-align:center">16次</td><td style="text-align:center">16次</td></tr><tr><td style="text-align:center">后退上限</td><td style="text-align:center">10（幂指数）</td><td style="text-align:center">10（幂指数）</td></tr><tr><td style="text-align:center">拥挤规模</td><td style="text-align:center">32位</td><td style="text-align:center">32位</td></tr><tr><td style="text-align:center">最大帧字节数</td><td style="text-align:center">1518</td><td style="text-align:center">1518</td></tr><tr><td style="text-align:center">最小帧字节数</td><td style="text-align:center">64</td><td style="text-align:center">64</td></tr><tr><td style="text-align:center">地址长度</td><td style="text-align:center">48位</td><td style="text-align:center">48位</td></tr></tbody></table><h4 id="2-千兆以太网（Gigabit-Ethernet）">2. 千兆以太网（Gigabit Ethernet）</h4><ul><li><p>IEEE制定了2类千兆位以太网的物理层标准</p><ul><li><p>802.3z（1000BaseX光纤标准） ，包括以下3种介质：</p><ul><li><p>1000Base-SX 针对短波长（850nm）的多模光纤上</p></li><li><p>1000Base-LX 针对长波长(1300nm)的单模或多模光纤</p></li><li><p>1000Base-CX就是针对低成本、优质的屏蔽双绞线或同轴电缆。</p></li></ul></li><li><p>802.3ab（1000BaseT双绞线标准）制定1000Base-T千兆位以太网物理层标准。</p><ul><li>它规定使用4对5类、超5类、6类UTP双绞线，将传输距离扩展到100米，非屏蔽双绞线缆的工作方式，最长传输距离为100米。</li></ul></li></ul></li><li><p>千兆以太网的体系结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxib4mjt8jj30to0liabw.jpg" alt="image-20211218212847697" style="zoom:50%;" /></li><li><p>技术改进：(*)</p><ul><li><p>千兆以太网的MAC层虽然保留了原来的帧格式和CSMA／CD的基本内容，但引入了两项新技术：<font color=red> 载波延伸</font> (carrier extension)和<font color=red> 帧突发</font>（packet bursting)。</p></li><li><p>千兆以太网可以采用<font color=red> 半双工</font>和<font color=red> 全双工</font>两种方式，在全双工模式下，无冲突发生，不使用冲突检测。</p></li><li><p>千兆以太网的最小帧长仍保持64字节不变，但规定争用期为512字节。当发送一帧时，如果帧长小于512字节，那么物理层将发送一个特殊的“<font color=red>扩展载波</font>”符号序列进行<font color=red>填充</font>，直至帧长达到512字节。</p></li><li><p><font color=red>为了改善短帧的传送效率</font>，千兆以太网标准又增加了帧突发的功能。</p></li></ul></li><li><p>帧突发：</p><ul><li><p>发方被允许<font color=red>连续发送若干帧</font>，其中第一个帧按CSMA/CD规则发送。</p></li><li><p>第一个短帧，必须<font color=red> 进行载波扩展至一个512B时槽</font>。若该帧发送成功，发方就可<font color=red> 继续发其他帧</font>直至发完数据或达到一次帧突发的最大长度限制。</p></li><li><p>帧突发机制规定连续发送的总长度的上限为<font color=red>8KB</font>，即8192B。</p></li><li><p>发方为了连续占有信道，<font color=red>用96位载波扩展填充帧间隙IFG</font>，这样其他主机在IFG期间仍可继续监听到载波，不会启动发送。</p></li><li><p>冲突只能发生在第一个时槽之内。因此，以后连续发送的帧即使是短帧也不必再进行载波扩展。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj4sj9g31j30xq05kaan.jpg" alt="image-20211219143510632" style="zoom:50%;" /></li></ul><h4 id="3-10吉比特以太网">3. 10吉比特以太网</h4><ul><li><p>10吉比特以太网与早期以太网的主要区别：</p><ul><li><p>不再支持单工模式，只定义了<font color=red>全双工模式</font>；</p></li><li><p>由于传输速率高，只能使用<font color=red>光纤</font>作为传输介质；</p></li><li><p>不采用带冲突检测的载波监听多址访问协议（CSMA/CD）协议；</p></li><li><p>使用64B/66B和8B/10B两种编码方式；</p></li><li><p>定义了两种物理层，分别用于支持局域网和广域网。</p></li></ul></li><li><p>10吉比特以太网物理层结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj4ut8w6bj31300ckdh8.jpg" alt="image-20211219143721797" style="zoom:50%;" /></li></ul><h4 id="4-40-100G-以太网（了解）">4. 40/100G 以太网（了解）</h4><ul><li><p>2006年7月，IEEE802.3成立了高速研究小组（HSSG）来定义100G比特以太网（GbE）标准，2007年12月，HSSG正式转变为IEEE802.3ba特别工作小组，来制定在光纤和铜线上实现40 Gbps和100 Gbps数据速率的以太网标准。</p><ul><li><p>100Gbps以太网适用于聚合及核心网络应用</p></li><li><p>40 Gbps以太网则适用于服务器和存储应用</p></li></ul></li><li><p>40G/100G以太网保留了早期以太网的一些规范，例如仍采用以太网MAC帧的格式，和10GE接口一样，仅支持全双工模式，支持光纤物理承载与数据传送方式等。</p></li><li><p>40G/100G以太网仍采用802.3的MAC层，通过CGMII/XLGMII接口与物理层实体相连。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj4wfuaz7j30uo0mo0w3.jpg" alt="image-20211219143855616" style="zoom:50%;" /><h4 id="5-交换式以太网（-）">5. 交换式以太网（*）</h4><ul><li><p>定义：<font color=red>网桥</font>（bridge）是工作在<font color=red>数据链路层</font>的一种网络互连设备，它在互连的<font color=red>LAN</font>之间实现<font color=red>帧的存储和转发</font>。</p></li><li><p>网桥的特征：</p><ul><li><p>网桥在<font color=red>数据链路层</font>上实现<font color=red>局域网互连</font>；</p></li><li><p>网桥能够互连两个采用<font color=red>不同数据链路层协议</font>、<font color=red>不同传输介质</font>与<font color=red>不同传输速率的网络</font>；</p></li><li><p>网桥以<font color=red>接收、存储、地址过滤与转发</font>的方式实现互连的网络之间的通信；</p></li><li><p>网桥需要互连的网络在数据链路层以上采用相同的协议；</p></li><li><p>网桥可以分隔两个网络之间的<font color=red>广播通信量</font>，有利于改善互连网络的性能与安全性。</p></li></ul></li><li><p>网桥完成不同类型网络互联：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj5c0q831j30w20fsq4p.jpg" alt="image-20211219145354008" style="zoom:50%;" /></li><li><p>透明网桥/生成树网桥：</p><ul><li><p>工作原理：</p><ul><li><p>网桥工作在<font color=red>混杂（promiscuous）方式</font>，接收所有的帧；</p></li><li><p>网桥接收到一帧后，通过<font color=red>查询地址/端口</font>对应表来确定是丢弃还是转发；</p></li><li><p>网桥刚启动时，<font color=red>地址/端口对应表为空</font>，采用<font color=red>洪泛</font>（flooding）方法转发帧；</p></li><li><p>在转发过程中采用<font color=red>逆向学习</font>（backward learning）算法收集MAC地址。网桥通过分析帧的源MAC地址得到MAC地址与端口的对应关系，并写入地址/端口对应表；</p></li><li><p>网桥软件对地址/端口对应表进行不断的更新，并定时检查，<font color=red>删除在一段时间内没有更新的地址/端口项</font>；</p></li></ul></li><li><p>帧的路由过程：</p><ul><li><p>目的LAN与源LAN相同，则丢弃帧；</p></li><li><p>目的LAN与源LAN不同，则转发帧；</p></li><li><p>目的LAN未知，则洪泛帧;</p></li><li><p>并逆向学习。</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj5mrj2wsj30se0r6aby.jpg" alt="image-20211219150413273" style="zoom:50%;" /><ul><li><p>多个网桥（并行网桥）可能产生<font color=red>回路</font></p></li><li><p>解决多个网桥产生回路的问题</p><ul><li>思想：让网桥之间互相通信，用一棵连接每个LAN的<font color=red>生成树</font>（Spanning Tree）覆盖实际的拓扑结构。</li></ul></li><li><p>构造生成树</p><ul><li><p>每个桥广播自己的桥编号，号<font color=red>最小的桥</font>称为生成树的<font color=red> 根</font>；</p></li><li><p>每个网桥计算自己到根的最短路径，<font color=red>构造出生成树</font>，使得每个LAN和桥到根的路径最短；</p></li><li><p>当某个LAN或网桥发生故障时，要<font color=red>重新计算</font>生成树；</p></li><li><p>生成树构造完后，算法继续执行以便自动发现拓扑结构变化，更新生成树。</p></li></ul></li></ul></li><li><p>站表：</p><table><thead><tr><th style="text-align:center">端口号</th><th style="text-align:center">站点MAC地址</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">B</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">C</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">D</td></tr></tbody></table></li><li><p>交换式集线器的交换方式主要有以下三种：</p><ul><li><p>存储转发式交换</p></li><li><p>直通式交换</p></li><li><p>碎片交换方式</p></li></ul></li></ul><h4 id="6-全双工以太网">6. 全双工以太网</h4><p>全双工以太网与传统以太网的最大区别是：在全双工以太网中，以太网中的<font color=red> 介质访问控制方法CSMA/CD不再有效</font>。</p><p>为了能够以全双工方式工作，以太网必须满足以下条件：</p><p>（1）  发送和接收信道必须使用分离的网络介质；</p><p>（2）  任两个节点间须配备专门的链路；</p><p>（3）  网卡和网络交换机必须支持全双工方式。</p><p>由于以上限制，全双工以太网主要用于以下场合：</p><ul><li><p>交换机到交换机的连接，它们之间通常有较远的距离；</p></li><li><p>交换机到服务器的连接，以提高通往服务器链路的带宽；</p></li><li><p>长距离节点间的连接。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj5zba2ttj311u0j8gnp.jpg" alt="image-20211219151617450" style="zoom:50%;" /><h2 id="4-虚拟局域网">4. 虚拟局域网</h2><ul><li><p>虚拟局域网的主要应用：</p><ul><li><p>局域网内部的局域网</p></li><li><p>共享访问</p></li><li><p>交叠虚拟局域网</p></li></ul></li><li><p>虚拟局域网的优点：</p><ul><li><p>网络设备的移动、添加和修改的管理开销减少</p></li><li><p>可以控制广播风暴</p></li><li><p>可提高网络的安全性</p></li></ul></li><li><p>虚拟局域网的划分：</p><ul><li>基于端口的划分<ul><li>单交换机端口定义</li><li>多交换机端口定义</li></ul></li><li>基于MAC地址的划分</li><li>基于网络层的划分</li><li>基于IP组播的划分</li></ul></li><li><p>单交换机端口定义VLAN：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj61huhdmj30xs0g4dhr.jpg" alt="image-20211219151823628" style="zoom:50%;" /></li><li><p>多交换机端口定义VLAN：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj620yo4nj30ya0bo0uj.jpg" alt="image-20211219151851633" style="zoom:50%;" /></li><li><p>802.1Q 帧格式（了解，不考）</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj62trcnej30s40f6wga.jpg" alt="image-20211219151939934" style="zoom:50%;" /></li></ul><h2 id="5-无线局域网">5. 无线局域网</h2><ul><li><p>无线局域网的优点：</p><ul><li><p>灵活性和移动性</p></li><li><p>安装便捷</p></li><li><p>易于进行网络规划和调整</p></li><li><p>故障定位容易</p></li><li><p>易于扩展</p></li></ul></li><li><p>无线局域网的拓扑：</p><ul><li><p>无中心拓扑</p></li><li><p>有中心拓扑</p></li></ul></li></ul><h4 id="1-802-11-无线局域网">1. 802.11 无线局域网</h4><ul><li><p>802.11 无线局域网：IEEE 802.11定义了两种运作模式：<font color=red>特殊（Ad hoc）模式</font>和<font color=red>基础设施（Infrastructure）模式</font>。</p></li><li><p>802.11 无线局域网基础设施模式：</p><ul><li><p>站STA（station）：任何支持IEEE 802.11的网络设备；</p></li><li><p>基本服务集BBS（Basic Service Set）</p></li><li><p>接入点AP（Access Point）</p></li><li><p>分布式系统DS（Distribution System）</p></li><li><p>扩展服务集ESS（Extended Service Set）</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj69asdqpj30q20diq3r.jpg" alt="image-20211219152552952" style="zoom:50%;" /></li><li><p>802.11 体系结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj6ccexh3j30u20hc0un.jpg" alt="image-20211219152849010" style="zoom:50%;" /></li><li><p>隐蔽站和暴露站 ：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj6fuf3lcj310c0ecabr.jpg" alt="image-20211219153210530" style="zoom:50%;" /></li><li><p>CSMA/CA工作原理：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj6f7fr15j30ya0hygn7.jpg" alt="image-20211219153133553" style="zoom:50%;" /><ul><li>正向应答+超时重发</li><li>收到RTS和CTS帧的结点都会静默一段时间，等待源节点和目的节点进行数据传输</li></ul></li><li><p>802.11 帧格式：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj6ta1yx1j30zk09ijsx.jpg" alt="image-20211219154505023" style="zoom:50%;" /></li></ul><h4 id="2-802-16-宽带网线网络">2. 802.16 宽带网线网络</h4><p>与IEEE 802.11相比IEEE 802.16有如下特点：</p><p>1）IEEE 802.16往往会覆盖一个城市的一个部分，<font color=red>网络跨度较大</font>。因此，也被称为<font color=red>无线MAN</font>。在这种情况下，对于基站的功率，网络的安全性都有较高的要求。</p><p>2）每个单元中，<font color=red>用户的数量比IEEE 802.11多得多</font>，从而需要更高的带宽。因此，IEEE 802.16也被称为宽带无线网络标准。</p><p>3）IEEE 802.11的无线网络环境一般都在室内，而<font color=red>IEEE 802.16通常在室外</font>，因此更容易受到天气等因素的干扰。</p><p>4）虽然IEEE 802.11针对实时数据流提供了一定程度的支持，但它并不是真正为多媒体所设计。而IEEE 802.16的<font color=red>设计目标</font>就是要完全支持这些应用的服务质量要求。</p><p>IEEE 802.16 体系结构:</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj6yr4nzcj30q20geab8.jpg" alt="image-20211219155021181" style="zoom:50%;" /><h4 id="3-移动网络">3. 移动网络</h4><p>移动网络（mobile network）又被称为蜂窝网络（cellular network）是一种移动通信硬件架构，由于构成网络的各通信基站的信号覆盖呈六边形，使整个网络像一个蜂窝而得名。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj6zrds0wj30x80fg403.jpg" alt="image-20211219155118473" style="zoom:50%;" /><h4 id="4-蓝牙">4. 蓝牙</h4><p><font color=red>蓝牙</font>（Bluetooth）无线接入技术于1998年发布，最初是以<font color=red>消除各种电器设备之间的有线连接为目标</font>的；随着研究的深入及应用需求，蓝牙技术已经能把各种话音及数据设备，如PC、拨号网络、笔记本电脑、打印机、传真机、移动电话、数码相机、高品质耳机等，通过无线方式将它们连成一个微微网（Piconet），使各种设备之间实现无缝隙资源共享。</p><p>蓝牙工作于全球可用的<font color=red>2.4GHz ISM频段</font>，采用了跳频技术来克服干扰和衰落，跳频带宽79MHz，共79个射频信道，其符号传输率为1Mb/s。采用时分双工（TDD）方案进行全双工通信。在信道上以分组的形式交换信息，每个分组在不同的跳频频率上传输，占用1 至 5个时隙，每个时隙长625μs。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj70wukm9j30xk05ct96.jpg" alt="image-20211219155225892" style="zoom:50%;" /><p>蓝牙的协议栈：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj71bxv5uj30se0nktbk.jpg" alt="image-20211219155249782" style="zoom:50%;" /><h4 id="5-ZigBee-网络">5. ZigBee 网络</h4><ul><li>ZigBee网络的组成：</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj72ik8thj30tq0iawfr.jpg" alt="image-20211219155357712" style="zoom:50%;" /><ul><li>ZigBee 网络协议栈：</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxj72w5nkdj30q60f4gml.jpg" alt="image-20211219155419542" style="zoom:50%;" /><ul><li>低功耗</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络学习笔记4：数字链路控制</title>
      <link href="/2021/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E6%8E%A7%E5%88%B6/"/>
      <url>/2021/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<ul><li>为什么要设计数据链路层？<ul><li>在原始的物理传输线路上传输数据信号是有差错的，存在一定的<font color=red>误码率</font>；</li><li>设计数据链路层的目的就是如何在有差错的物理层上，进行<font color=red>无差错传输</font>。向网络层提供高质量的服务。</li><li>从网络参考来看，物理层之上的各层都有<font color=red>改善数据传输质量</font>的要求，数据链路层是重要的一层。</li></ul></li></ul><h2 id="1-数据链路层定义">1. 数据链路层定义</h2><ul><li><p>ISO关于数据链路层的定义：数据链路层的目的是为了提供功能上和规程上的方法，以便<font color=red>建立、维护和释放</font>网络实体间的<font color=red>数据链路</font>。</p></li><li><p>数据链路：从数据发送点到数据接收点（<font color=red>点到点</font> point to point）所经过的传输途径。</p></li><li><p>虚拟数据通路与实际数据通路：</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgybwowzsj30vu0jwgmm.jpg" alt="image-20211217171528662" style="zoom: 50%;" /><ul><li><p>数据链路层基本功能：</p><ul><li>数据链路控制规程：为使数据能迅速、正确、有效地从发送点到达接收点所采用的控制方式。</li><li>数据链路层协议应提供的最基本功能：<ol><li>数据在数据链路上的正常传输（建立、维护和释放）</li><li>帧定界（帧同步）</li><li>差错控制</li><li>流量控制</li><li>寻址</li></ol></li></ul></li><li><p>数据链路层协议的位置：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh0x0mqmij31040i4ta6.jpg" alt="image-20211217183232791" style="zoom:50%;" /><ul><li>补充：<font color=blue>数据链路层中的帧头存放目的结点信息，帧尾存放源节点信息。</font></li></ul></li><li><p>数据链路层提供的服务：</p><ul><li><p>无确认无连接服务：由<font color=red>上层完成差错控制</font>，适合于误码率低、实时性要求高的场合，如大部分<font color=blue>有线局域网</font>。例如：以太网。</p></li><li><p>有确认无连接服务：进行简单的差错控制。适用于不可靠的信道，如<font color=blue>无线网</font>。</p></li><li><p>面向连接确认服务：在发送前需要建立连接，保证了帧的正确按序传输，适合于可靠性要求较高的场合。适合于大多数<font color=blue>广域网</font>。</p></li><li><p>补充（三种应答方式）</p><ul><li><p>正向应答：（收到正确的帧后返回一个应答）（多用）</p><ul><li><p>正确到达</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh2qqmcpkj309w0d4jrm.jpg" alt="image-20211217195307334" style="zoom:33%;" /></li><li><p>出错到达</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh2rlgrguj30bs0ckq39.jpg" alt="image-20211217195356332" style="zoom:33%;" /></li><li><p>丢失</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh2sa2bdaj30bs0ckq39.jpg" alt="image-20211217195433098" style="zoom:33%;" /></li><li><p>应答丢失</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh2tk5iy3j30d40d0mxt.jpg" alt="image-20211217195550113" style="zoom:33%;" /></li></ul></li><li><p>负向应答：（收到错误的帧后返回一个应答）（不可以用，两个原因：不能区分正确到达和丢失；正确帧的概率更大）</p></li><li><p>双向应答：（收到正确和错误的帧后均会返回一个应答）（过于复杂，很少使用）</p></li></ul></li></ul></li></ul><h2 id="2-帧边界划分">2. 帧边界划分</h2><h3 id="1-分组和帧的关系">1. 分组和帧的关系</h3><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh1v9yj1zj310o0fkq45.jpg" alt="image-20211217183819655" style="zoom: 33%;" /><h3 id="2-成帧——将比特流分成离散的帧成帧方法">2. 成帧——将比特流分成离散的帧成帧方法</h3><h4 id="1-字符计数法">1. 字符计数法</h4><ul><li><p>在帧头中用一个域来表示整个帧的<font color=red>字符个数</font></p></li><li><p>缺点：若计数出错，对本帧和后面的帧有<font color=red>影响</font>。因此很少采用。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh0rduwlnj30ri04sdg1.jpg" alt="image-20211217184430627" style="zoom:50%;" /><h4 id="2-带字符填充的首尾字符定界法">2. 带字符填充的首尾字符定界法</h4><ul><li><p>用<code>DLE STX</code>标示帧的开始</p></li><li><p>用<code>DLE ETX</code>标示帧的结束</p></li><li><p>用<code>DLE DLE</code>标示传送数据信息中的<code>DLE</code></p><p>例如：信息<code>DLE STX A DLE B DLE ETX</code>在网络中传送时表示为：<code>DLE STX DLE DLE STX A DLE DLE B DLE DLE ETX DLE ETX</code></p></li><li><p>缺点：局限于8位字符和ASCII字符传送，也不被普遍采用。</p></li></ul><h4 id="3-带位填充的首尾标记定界法">3. 带位填充的首尾标记定界法</h4><ul><li><p>帧的起始和结束都用一个特殊的位串“01111110”，称为标记(flag)</p></li><li><p>“0”比特插入删除技术，在传送的数据信息中每遇到5个连续的1在其后加0</p><p>例如：<code>0110111111011111001</code>在网络中传送时表示为： <code>01111110 011011111 0 1011111 0 001 01111110</code></p></li></ul><h4 id="4-物理层编码违例法">4. 物理层编码违例法</h4><ul><li>只适用于物理层编码有冗余的网络，如曼彻斯特编码</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh0wv3n3xj30lw06odfw.jpg" alt="image-20211217184948825" style="zoom:50%;" /><ul><li>注意：在很多数据链路协议中，使用字符计数法和一种其它方法的组合。</li></ul><h2 id="3-差错控制">3. 差错控制</h2><h3 id="1-差错原因">1. 差错原因</h3><ul><li><p>差错特征：<font color=red>随机</font>，<font color=red>连续突发</font>（burst）</p></li><li><p>差错产生的原因：</p><ul><li><p>信道的电气特性引起信号幅度、频率、相位的畸变；</p></li><li><p>信号反射；</p></li><li><p>串扰；</p></li><li><p>闪电、大功率电机的启停等。</p></li></ul></li><li><p>出错情况：</p><ul><li><p>帧（包括发送帧和响应帧）出错</p></li><li><p>帧（包括发送帧和响应帧）丢失</p></li></ul></li></ul><h3 id="2-差错控制方法">2. 差错控制方法</h3><ul><li><p>差错控制的目的</p><p><font color=red>保证帧正确送交上层。</font>在接收方能够判断接收的数据是否正确，若错误还可能要恢复错误。</p></li><li><p>差错控制的方法</p><ul><li>自动纠错机制</li><li>检错反馈重发机制</li></ul></li></ul><h3 id="3-纠错码和检错码">3. 纠错码和检错码</h3><ul><li><p>码字 codeword</p><ul><li>一个帧包括m个数据位，r个校验位（冗余位），称为n位码字（n=m+r）。</li></ul></li><li><p>纠错码 error-correcting code</p><ul><li>加入了足够多的冗余位，使接收方不仅知道有差错发生，并知道哪些位发生差错。</li></ul></li><li><p>检错码 error-detecting code</p><ul><li><p>加入了冗余位，使接收方知道有差错发生，但不知道什么差错</p></li><li><p>若要保障正确性传输，使用请求重发机制</p></li></ul></li></ul><h3 id="4-海明定理">4. 海明定理</h3><ul><li><p>海明距离：</p><ul><li><p>两个码字的海明距离：两个码字不相同位的个数。</p><p>例：0000000010与0000011111的海明距离？  <font color=red>4</font></p></li><li><p>编码方案的海明距离：编码方案中任两个码字海明距离的最小值。</p></li></ul></li><li><p>海明定理：</p><ul><li><p>为<font color=red>检测d位错</font>，编码方案的海明距离应至少为<font color=red> d+1</font>；当发生d位错时，不会由一种合法编码变为另一种合法编码。</p></li><li><p>为<font color=red>纠正d位错</font>，编码方案的海明距离应至少为 <font color=red>2d+1</font>；当发生d位错时，出错编码仍然最接近于原始的正确编码。</p></li></ul></li></ul><h3 id="5-循环冗余码-CRC">5. 循环冗余码 (CRC)</h3><ul><li><p>循环冗余码（CRC码，多项式编码）：二进制位串的多项式表示</p><p>例程：110001 表示成多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^5 + x^4 + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p>生成多项式G(x)</p><ul><li>发方、收方<font color=red>事前约定</font>；</li><li>生成多项式的最高位和最低位必须为<font color=red>1</font>；</li><li>生成多项式必须比传输信息对应的多项式<font color=red>短</font>。</li></ul></li><li><p>CRC校验基本思想：</p><ul><li>CRC码（即校验和）加在<font color=red>帧尾</font>，使带CRC码的多项式能被G(x)<font color=red>除尽</font>；接收方接收时，用G(x)去除它，若<font color=red>有余数</font>，则传输出错。</li></ul></li><li><p>计算过程：</p><ul><li>将数据多项式左移G(x)的最高阶位</li><li>将新的数据与生成多项式G(x)做模2除法得到余数</li><li>余数即为CRC，补在数据位后面</li></ul></li><li><p>CRC码特征：</p><ul><li><p>标准化，四个多项式已成为国际标准</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>R</mi><mi>C</mi><mo>−</mo><mn>12</mn><mo>=</mo><msup><mi>x</mi><mn>12</mn></msup><mo>+</mo><msup><mi>x</mi><mn>11</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">CRC-12  = x^{12} + x^{11} + x^{3} + x^{2} + x + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">CRC</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">12</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>R</mi><mi>C</mi><mo>−</mo><mn>16</mn><mo>=</mo><msup><mi>x</mi><mn>16</mn></msup><mo>+</mo><msup><mi>x</mi><mn>15</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">CRC-16  = x^{16} + x^{15} + x^2 + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">CRC</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">16</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>R</mi><mi>C</mi><mo>−</mo><mi>C</mi><mi>C</mi><mi>I</mi><mi>T</mi><mi>T</mi><mo>=</mo><msup><mi>x</mi><mn>16</mn></msup><mo>+</mo><msup><mi>x</mi><mn>12</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">CRC-CCITT  = x^{16} + x^{12} + x^5 + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">CRC</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">CC</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">TT</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>$CRC-32=x^{32}+x^{26}+x^{23}+x^{22}+x^{16}+x^{12}+x^{11}+x^{10}+x^{8}+x^7+x^5+x^4+x^2+x+1 $</p></li><li><p>无差错接受数据帧</p><p>凡是接受的数据帧能以非常接近于1的概率认为这些帧在传输过程中没有产生差错</p></li><li><p>硬件实现CRC校验</p></li></ul></li></ul><h3 id="6-检验和-checksum-算法">6. 检验和(checksum)算法</h3><ul><li><p>检验字段初值置0；</p></li><li><p>数据拆分成与检验字段等长的分片，不足部分补0；</p></li><li><p>将所有分片执行1的补码和运算，累加结果再取反就是校验和；</p></li><li><p>计算结果置入检验字段；</p></li><li><p>接收段执行相同的过程，计算的校验和为0表示正确；</p></li><li><p>适用于高层协议，如IP、TCP、UDP等；</p></li></ul><h2 id="4-流量控制">4. 流量控制</h2><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh4edlhbkj30z00dswfu.jpg" alt="image-20211217205026126" style="zoom: 50%;" /><h3 id="1-单工停等协议">1. 单工停等协议</h3><h4 id="1-理想情况">1. 理想情况</h4><ul><li><p>假设：</p><ul><li><p><font color=red>单工</font>传输</p></li><li><p>发送方无休止工作（要发送的信息无限多）；</p></li><li><p>接收方无休止工作（缓冲区无限大）；</p></li><li><p>发送数据的速率<font color=red>低于</font>接收数据的速率；</p></li><li><p>通信线路（信道）不损坏或丢失信息帧（<font color=red>无错</font>）。</p></li></ul></li><li><p>工作过程：</p><ul><li><p><font color=red>发送程序</font>  取数据，构成帧，发送帧；</p></li><li><p><font color=red>接收程序</font>  等待，接收帧，送数据给高层。</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh4g8142yj30gc0gat9a.jpg" alt="image-20211217205212216" style="zoom:50%;" /><h4 id="2-流量控制">2. 流量控制</h4><ul><li><p>增加约束条件：</p><ul><li><p>发送能力<font color=red>大于</font>接收能力，接收方不能无休止接收。</p><p>例如：缓冲区数量有限，接收速率比发送速率低等。</p></li></ul></li><li><p>解决办法：</p><ul><li>接收方每收到一个帧，给发送方回送应答。发送方收到应答前不发送后续帧。</li></ul></li><li><p>工作过程：</p><ul><li><p><font color=red>发送程序</font> 取数据，成帧，发送帧，等待应答帧；</p></li><li><p><font color=red>接收程序</font> 等待，接收帧，数据送高层，发送应答帧。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh4ntr3bnj30dk0gcq3b.jpg" alt="image-20211217205931170" style="zoom:50%;" /></li></ul><h4 id="3-差错情况">3. 差错情况</h4><ul><li><p>增加约束条件：信道有<font color=red>差错</font>，信息帧可能<font color=red>损坏或丢失</font>。</p></li><li><p>解决方法</p><ul><li><p>常使用<font color=red> 正向应答</font> +<font color=red> 重发机制 </font>来解决差错控制。</p></li><li><p>数据序号采用<font color=red> 循环序号</font> 机制。<font color=blue>(补充：计网学习中，绝大部分协议是按照帧等数据包编号，但TCP协议是按字节编号。正常协议编号是从0开始，但TCP不一定。)</font></p></li><li><p>应答帧方式：</p><ul><li>单帧应答</li><li>成批应答</li></ul></li><li><p>通常采用<font color=red> 附载应答 </font>方式：将数据帧携带应答信息的通信方式称为附载应答。可以把应答帧的序号加在信息帧中一并发送，以提高效率。</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxh4rbfy79j313q0euq5r.jpg" alt="image-20211217210252167" style="zoom:50%;" /><ul><li><p>示意图：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhara163bj30y00kwad5.jpg" alt="image-20211218003025785" style="zoom:50%;" /></li></ul><h3 id="2-连续ARQ协议">2. 连续ARQ协议</h3><ul><li><p>工作原理</p><ul><li>连续停等协议是指<font color=red>不需要收到应答帧</font>就可连续不断的发后续的帧</li></ul></li><li><p>帧出错后处理策略</p><ul><li><p>全部重发流水线协议</p><ul><li>当一帧出错时，需重发出错帧之后的所有帧；</li><li>接收方的缓冲区数量<font color=red>只需要一个</font>。</li></ul></li><li><p>选择重发流水线协议</p><ul><li><p>当一帧出错时，只重发出错帧；</p></li><li><p>接收方的缓冲区数量<font color=red>足够多</font>。</p></li></ul></li></ul></li><li><p>全部重发流水线协议示意图</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhb4qsmofj311y0kmae9.jpg" alt="image-20211218004322185" style="zoom:50%;" /></li></ul><h3 id="3-滑动窗口协议">3. 滑动窗口协议</h3><ol><li><p>发送窗口</p><ul><li><p>滑动窗口协议是对连续停等协议的改进，它能够控制<font color=red>已发送但未确认</font>的数据帧的个数（滑动窗口的大小）。</p></li><li><p>发送窗口</p><ul><li><p>窗口大小（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">W_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ）：没有收到对方确认信息的情况下发送方最多可以发送的帧个数</p></li><li><p>窗口内的帧类型</p><ul><li><p>已发送帧</p></li><li><p>允许发送帧</p></li></ul></li></ul></li><li><p>示意图</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhbfxkvzxj30so0l2whk.jpg" alt="image-20211218005407577" style="zoom:50%;" /></li></ul></li><li><p>接收窗口</p><ul><li><p>窗口大小（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">W_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ）：允许连续接收未处理帧的个数</p></li><li><p>控制哪些帧可以接收，哪些帧不可以接收</p><ul><li>当收到的数据帧的序号与接收窗口的序号一致时才能接收该帧</li></ul></li><li><p>示意图</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhbmwkqp3j30sc0j8aca.jpg" alt="image-20211218010049595" style="zoom:50%;" /></li></ul></li><li><p>窗口大小与序号关系</p><ul><li><p>出错全部重传</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>&gt;</mo><msub><mi>W</mi><mi>R</mi></msub><mtext>，</mtext><msub><mi>W</mi><mi>R</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">W_T&gt;W_R ，W_R =1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">W_T≤ 2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> (原因：为了识别出窗口外的帧)</p></li></ul></li><li><p>选择性重传</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>=</mo><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">W_T = W_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>≤</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">W_T ≤ 2^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>(???)</li></ul></li></ul></li></ol><h2 id="5-常用数据链路层协议-了解">5. 常用数据链路层协议(了解)</h2><ul><li><p>点到点通信的两种主要情形：</p><ul><li><p>路由器到路由器（router-router leased line connection）</p></li><li><p>通过modem拨号上网，连到路由器或接入服务器（dial-up host-router connection）</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhc5btz2tj30z60d80uz.jpg" alt="image-20211218011831383" style="zoom:50%;" /></li></ul></li><li><p>SLIP协议 —— Serial Line IP</p><ul><li><p>1984年，Rick Adams提出，RFC1055，发送原始IP包，用一个<font color=red>标记字节</font>（0xC0）来定界，采用<font color=red>字符填充技术</font>；</p></li><li><p>存在的问题：</p><ul><li><p>不提供差错校验</p></li><li><p>只支持IP</p></li><li><p>IP地址不能动态分配</p></li><li><p>不提供身份认证</p></li><li><p>多种版本并存，互连困难</p></li></ul></li></ul></li><li><p>PPP协议——Point-to-Point Protocol</p><ul><li><p>RFC 1661，RFC 1662，RFC 1663</p></li><li><p>提供差错校验、支持多种协议、允许动态分配IP地址、支持认证等。</p></li><li><p>以<font color=red>帧</font>为单位发送，而不是原始IP包；</p></li><li><p><font color=red>面向字符</font></p></li><li><p>包括两部分：</p><ul><li><p><font color=red>链路控制协议LCP</font>（Link Control Protocol）</p><ul><li>建立、配置和测试多种<font color=red>物理层</font>服务：modem，HDLC串线，SDH/SONET，以太网等</li></ul></li><li><p><font color=red>网络控制协议NCP</font>（Network Control Protocol）</p><ul><li>建立、配置不同<font color=red>网络层</font>协议</li></ul></li></ul></li><li><p>PPP的帧格式：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhcj3fv50j30vo090jsb.jpg" alt="image-20211218013145369" style="zoom:50%;" /><ul><li><p>标记域：01111110，字符填充；</p></li><li><p>地址域：11111111</p></li><li><p>控制域：缺省值为00000011，表示<font color=red>无序号帧</font>，缺省情况下，PPP不提供使用序号和确认的可靠传输；但是在不可靠线路上，也可使用有序号的可靠传输。</p></li><li><p>协议域：指示净负荷中是何种包，比如IP，IPX等。缺省大小为2个字节。</p></li><li><p>净负荷域：变长，缺省为1500字节；</p></li><li><p>校验和域：2或4个字节</p></li></ul></li><li><p>PPP协议的工作过程：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhd2g3hlwj315c0le0u2.jpg" alt="image-20211218015022038" style="zoom:50%;" /></li></ul></li></ul><h2 id="6-协议工程-补充，考试不考">6. 协议工程(补充，考试不考)</h2><ul><li><p>协议工程：</p><ul><li><p>协议说明（Protocol Specification）</p></li><li><p>协议验证（Protocol Verification）</p></li><li><p>协议实现（Protocol Implementation）</p></li><li><p>协议测试（Protocol Testing）</p><ul><li><p>一致性测试（Conformance Testing）</p></li><li><p>互操作性测试（Interoperability Testing）</p></li><li><p>性能测试（Performance Testing）</p></li></ul></li></ul></li><li><p>协议说明：</p><ul><li>必须既定义一个协议实体提供给它的用户的服务，又定义该协议实体的内部操作。</li></ul></li><li><p>协议说明与验证：</p><ul><li><p>自然语言描述协议的缺点：</p><ul><li>冗余、多义性、结构性不好、不便于自动验证、测试、实现。</li></ul></li><li><p>常用的形式化方法：</p><ul><li><p>有限状态机FSM（Finite State Machine）</p></li><li><p>形式化语言模型</p><ul><li>LOTOS，Estelle，SDL</li></ul></li><li><p>Petri网</p><ul><li>扩展：时间Petri网，随机Petri网，高级Petri网</li></ul></li><li><p>过程代数（Process Algebra）</p><ul><li>扩展：随机过程代数</li></ul></li></ul></li></ul></li><li><p>有限状态机模型：</p><ul><li><p>一个有限状态机是一个四元组(S, M, I, T)，S是状态的集合，M是标号的集合，I是初始状态的集合， T是变迁的集合。</p></li><li><p>通信协议建模</p><ul><li><p>基本出发点：认为通信协议主要是由响应多个“事件”的相对简单的处理过程组成；</p></li><li><p>事件：命令（来自用户）、信息到达（来自低层）、内部超时</p></li></ul></li><li><p>优点：简单明了，比较精确；</p></li><li><p>缺点：对复杂的协议，事件数和状态数会剧增，处理困难。</p></li><li><p>信道有错的单工停等协议：</p><ul><li><p>每个状态用三个字母表示：XYZ</p><p>X：发送方正发送的帧序号，为0或1；</p><p>Y：接收方正等待的帧序号，为0或1；</p><p>Z：信道状态，为0，1，A或 -（空）。</p></li><li><p>初始状态为（000）</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhderxneqj311u0hygni.jpg" alt="image-20211218020212644" style="zoom:50%;" /></li></ul></li><li><p>Petri网：</p><ul><li><p>一个Petri网的结构元素包括：</p><ul><li><p>位置（place）：描述系统状态，用一个圆圈表示；</p></li><li><p>变迁（transition）：描述修改系统状态的事件，用一个长方形或线段表示；</p></li><li><p>弧（arc）：描述状态与事件之间的关系，包括输入弧和输出弧，用有向弧表示。</p></li></ul></li><li><p>活动元素 —— 标记（token）：</p><ul><li><p>包含在位置中，用点表示；</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhdkg1n2pj310s07s0t3.jpg" alt="image-20211218020740014" style="zoom: 50%;" /></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxhdlp3503j31180u0juj.jpg" alt="image-20211218020851319" style="zoom:50%;" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络学习笔记3：数字通信技术</title>
      <link href="/2021/12/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
      <url>/2021/12/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="1-数据通信的理论基础">1. 数据通信的理论基础</h2><ol><li>傅立叶分析结论：任何一个周期为T的有理周期性函数 g(t) 可分解为若干项（可能无限多项）正弦和余弦函数之和。</li><li>频谱特性：传送的信号脉冲频率越高（脉冲宽度越窄），要求信道的带宽就越大。</li></ol><h2 id="2-数据通信系统模型">2. 数据通信系统模型</h2><ol><li>数据通信系统基本结构 ：</li></ol><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxfy1py3uxj30x00cm0uh.jpg" alt="image-20211216202506318" style="zoom:50%;" /><ol start="2"><li><p>任务：把携带信息的数据用物理信号形式通过介质（信道）传送到目的地。</p></li><li><p>数据表示和传输方式：</p><ol><li><p>数据表示：</p><ul><li><p>模拟数据 (Analog Data) ：连续值</p></li><li><p>数字数据 (Digital Data)： 离散值</p></li></ul></li><li><p>数据传输方式：</p><ul><li><p>模拟信号 (Analog Signals)</p></li><li><p>数字信号 (Digital Signals)</p></li></ul></li><li><p>信道类型：</p><ul><li><p>模拟信道</p></li><li><p>数字信道</p></li></ul></li></ol></li><li><p>模拟信号和数字信号的发送：</p><ol><li>模拟信号发送：<ul><li>模拟数据 &lt;==&gt;电话系统&lt;==&gt;模拟信号</li><li>数字数据 &lt;==&gt;调制解调器&lt;==&gt;模拟信号</li></ul></li><li>数字信号发送：<ul><li>模拟数据&lt;==&gt;编码解码器&lt;==&gt;数字信号</li><li>数字数据&lt;==&gt;数字解码编码器&lt;==&gt;数字信号</li></ul></li></ol></li><li><p>信道的通信方式（从信息传送方向和时间的关系角度研究）</p><ol><li>单工通信方式：信息只能单向传输，监视信号可回送。</li><li>半双工通信方式：信息可以双向传输，但在某一时刻只能单向传输。<font color=blue>（大部分网络）</font></li><li>全双工通信方式：信息可以同时双向传输，一般采用四线式结构。</li></ol></li><li><p>基带传输和频带传输：</p><ol><li>基带信号：信源发出的没有<font color=red>经过调制</font>的原始电信号</li><li>将基带信号直接送到通信线路上的传输方式称为<font color=red>基带传输</font>：<ol><li>由模拟信号源变换得到的信号成为<font color=red>模拟基带信号</font>，</li><li>由计算机产生的二进制信号称为<font color=red>数字基带信号</font>。</li></ol></li><li>将基带信号经过<font color=red>调制后</font>送到通信线路上的传输方式称为<font color=red>频带传输</font>。</li></ol></li><li><p>基带传输：在传输时直接使用基带信号。</p><ol><li><p>核心内容：<font color=red>编码方式</font></p></li><li><p>数字数据的编码 ：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxfyxpw6ubj30y20qcwgl.jpg" alt="image-20211216205551988" style="zoom:50%;" /></li></ol></li><li><p>数字数据的模拟传输（频带传输）：指在一定频率范围内的线路上，进行载波传输。用基带信号对载波进行调制，使其变为适合于线路传送的信号。</p><ol><li>调制（Modulation）：用基带脉冲对载波信号的某些参量进行控制，使这些参量随基带脉冲变化。</li><li>解调（Demodulation）：调制的反变换。</li><li>调制解调器：<ul><li>调制器的主要作用就是个<font color=red>波形变换器</font>，它将基带数字信号的波形变换成适合于模拟信道传输的波形</li><li>解调器的作用就是个<font color=red>波形识别器</font>，它将经过调制器变换过的模拟信号恢复成原来的数字信号。若识别不正确，则要产生误码。</li></ul></li><li>常用的调制技术：<ul><li>幅移键控法</li><li>频移键控法</li><li>相移键控法</li></ul></li></ol></li><li><p>模拟数据数字化编码</p><ul><li>模拟数据数字传输核心是解决<font color=red>模拟信号数字化</font>问题</li><li>Nyquist采样定理：采样频率大于2倍信号最高频率</li></ul></li><li><p>补充：</p><ul><li>数字信号传播比模拟信号传播好：<ul><li>数字信号放大无失真</li><li>计算机本身产生数字信号</li><li>数字信号方便加密</li></ul></li></ul></li></ol><h2 id="3-传输介质">3. 传输介质</h2><ul><li>介质分类：<ol><li>有线介质：同轴电缆、双绞线、光纤等。（抗干扰性好）</li><li>无线介质：微波、红外线、卫星信道等。（抗干扰性差）</li></ol></li></ul><h4 id="1-有线介质">1. 有线介质</h4><ol><li><p>双绞线：</p><ul><li><p>既可以传输模拟信号，又可以传输数字信号</p></li><li><p>多采用点到点连接方式</p></li><li><p>造价最低</p></li></ul></li><li><p>同轴电缆：</p><ul><li>一般采用多点连接方式</li><li>分类：75Ω适合传输模拟信号；50Ω适合传输数字信号</li><li>多用于总线型拓扑结构</li><li>造价和抗干扰性均介于双绞线和光纤之间</li></ul></li><li><p>光纤：</p><ul><li>光纤通过<font color=red>光信号</font>的有无来表示二进制信号0和1</li><li>光纤的传送模式：单模光纤、多模光纤</li></ul></li></ol><h4 id="2-无线介质">2. 无线介质</h4><ol><li>无线电</li><li>微波</li><li>同步卫星</li></ol><h2 id="4-数据通信性能指标">4. 数据通信性能指标</h2><h3 id="1-时延">1. 时延</h3><ol><li><p>定义：<font color=red>时延</font>（delay）指一个数据块（帧、分组、报文段等）从链路或网络的一端传送到另一端所需要的时间。</p></li><li><p>时延组成 ：</p><ul><li><p>排队时延：在待发送队列的等待时间。</p></li><li><p>发送时延（transmission delay，传输时延） ：第一位离开发送结点到最后一位离开发送结点的时间。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>发送时延</mtext><mo>=</mo><mfrac><mtext>帧长</mtext><mtext>发送速率</mtext></mfrac></mrow><annotation encoding="application/x-tex">发送时延 = \frac{帧长}{发送速率}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">发送时延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">发送速率</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">帧长</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p>传播时延（propagation delay） ：第一位离开发送结点到第一位来到接受结点的时间。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>传播时延</mtext><mo>=</mo><mfrac><mtext>信道的长度</mtext><mtext>信号的传播速率</mtext></mfrac></mrow><annotation encoding="application/x-tex">传播时延 = \frac{信道的长度}{信号的传播速率}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">传播时延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">信号的传播速率</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">信道的长度</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>一般认为信号的传播速率为一常量，取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">2\times 10^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>。</p></li><li><p>转发时延（relay delay）：</p><ul><li>排队时延（queueing delay）</li><li>处理时延（processing delay）</li></ul></li></ul></li></ol><h3 id="2-时延带宽积">2. 时延带宽积</h3><ul><li><p>时延带宽积即<font color=red>传播时延</font>和<font color=red>带宽</font>的乘积：</p><p>时延带宽积＝传播时延×带宽</p></li><li><p>时延带宽积又称为<font color=red>比特长度</font>，即以比特为单位的链路长度。</p></li></ul><h3 id="3-可靠性指标-误码率">3. 可靠性指标-误码率</h3><ul><li><p><font color=red>误码率</font>是指传输的数据被传错的概率</p></li><li><p>按照衡量误码率的基本单位不同，可分为：</p><ul><li>误比特率：误比特率＝ 传错的比特数 <em>⁄</em> 传输的比特总数</li><li>误帧率</li><li>误分组率</li><li>……</li></ul></li></ul><h3 id="4-传输速率">4. 传输速率</h3><ul><li><p><font color=red>信息传输速率</font>是指每秒传输的编码前的数字数据的二进制位数，单位是比特/秒，即b/s，bps；简称<font color=red>比特率</font>。</p></li><li><p>计算机网络中，和信息传输速率具有同样含义的另一个术语称为<font color=red>带宽</font>(bandwidth)。</p></li><li><p>数字数据经线路编码后的传输信号在信道上的传输速率称为<font color=red>码元传输速率</font>，它是指每秒传输的码元数，即每秒钟传输信号波形<font color=red>变换</font>的次数，单位是<font color=red>波特</font>（Baud,symbol/s）。</p></li><li><p><font color=red>波特RB</font>  ：信号波形每秒钟变化的次数，也称调制速率。</p></li><li><p><font color=red>比特率Rb</font> ：每秒钟传送的二进制位数。</p></li><li><p>关系：一个信号往往可以携带多个二进制位，所以在固定的信息传输速率下，<font color=red>比特率往往大于波特</font>。换句话说，一个码元中可以传送多个比特（bit）。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>b</mi><mo>=</mo><mrow><mi>R</mi><mi>B</mi></mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>V</mi><mo stretchy="false">(</mo><mi>V</mi><mtext>为电平的级数</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">  Rb= {RB} \log_2 V (V为电平的级数)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">RB</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">为电平的级数</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>编码效率</mtext><mo>=</mo><mi>R</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>R</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">编码效率=Rb/RB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">编码效率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">b</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.05017em;">RB</span></span></span></span></span></p></li></ul><h3 id="5-信道的最大数据传输率">5. 信道的最大数据传输率</h3><ol><li><p>Nyquist 公式：用于理想低通信道</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><mn>2</mn><mi>H</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>V</mi></mrow><annotation encoding="application/x-tex">C=2H\log_2V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p><p>C = 最大数据传输率，单位b/s或bps</p><p>H = 带宽，单位Hz</p><p>V = 信号电平级数</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgribn8v2j30di09ugm9.jpg" alt="image-20211217132426242" style="zoom:50%;" /></li><li><p>Shannel公式：高斯噪声干扰信道</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo>=</mo><mi>H</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C = H \log_2(1+S/N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p><p>S/N信噪比（dB分贝）的定义：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mi mathvariant="normal">/</mi><msub><mi>N</mi><mrow><mi>d</mi><mi>B</mi></mrow></msub><mo>=</mo><mn>10</mn><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><mo stretchy="false">(</mo><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S/N_{dB}=10\log_{10}(S/N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">10</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></span></p><p>S：信号功率</p><p>N：噪声功率</p></li></ol><h2 id="5-信道的复用技术">5. 信道的复用技术</h2><ul><li><p>由于一条传输线路的能力<font color=red>远远超过</font>传输一个用户信号所需的能力，为了提高线路利用率，经常让多个信号<font color=red>同时共用</font>一条<font color=red>物理线路</font>。</p></li><li><p>常用复用方法：</p><ul><li>时分复用 TDM（Time Division Multiplexing）</li><li>频分复用 FDM（Frequency Division Multiplexing</li><li>波分复用 WDM（Wavelength Division Multiplexing）</li><li>码分复用 CDM（Code Division Multiplexing）</li></ul></li></ul><h3 id="1-频分多路复用技术FDM">1. 频分多路复用技术FDM</h3><ul><li><p>当传输介质的<font color=red>带宽</font>大于单个信号的要求时，为有效的利用传输系统将多个信号同时在一条传输线路上传输的技术可以采用<font color=red>频分多路复用</font>。</p></li><li><p>FDM实现过程：</p><ul><li><p>通过<font color=red>调制</font>将不同信号的频率调制到不同的频率范围；</p></li><li><p>将<font color=red>多路信号</font>合成为一路<font color=red>频率范围更大</font>的信号进行发送；</p></li><li><p>在接收方再通过<font color=red>解调</font>将信号重新还原成多路信号。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgrur6bidj30zc0m4wfw.jpg" alt="image-20211217133622992" style="zoom:50%;" /></li><li><p>补充：<font color=blue>适用于模拟信道</font></p></li></ul><h3 id="2-时分多路复用技术TDM">2. 时分多路复用技术TDM</h3><ul><li><p>当传输介质的<font color=red>位传输率</font>大于单个信号的要求时，为有效的利用传输系统将多个信号同时在一条传输线路上传输的技术叫时分多路复用。</p></li><li><p>TDM实现过程：</p><ul><li><p>传输时将时间分成等长的<font color=red>时间片</font>；</p></li><li><p>通过<font color=red>时间片轮转</font>方式将时间片依次分配给指定的信号；</p></li><li><p>在接收方也通过<font color=red>时间片轮转</font>方式在指定的时间片依次接收指定的信号。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgs0ujglkj311u0iign7.jpg" alt="image-20211217134214997" style="zoom:50%;" /></li><li><p>同步TDM：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgs6ofmgpj30se09ogme.jpg" alt="image-20211217134750347" style="zoom:50%;" /></li><li><p>异步TDM：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgs78qjf2j30sq0bit9q.jpg" alt="image-20211217134823465" style="zoom:50%;" /></li></ul><h3 id="3-波分多路复用WDM">3. 波分多路复用WDM</h3><ul><li><p>原理：整个波长频带被划分为若干个波长范围，每个用户占用一个波长范围来进行传输。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgs9jakrej30vc0hmmyx.jpg" alt="image-20211217135035765" style="zoom:50%;" /></li><li><p>补充：<font color=blue>适用于光纤传播</font></p></li></ul><h3 id="4-码分多路复用CDM">4. 码分多路复用CDM</h3><ol><li><p>说明：</p><ul><li><p>内涵等同于CDMA</p></li><li><p>允许多个用户在同一时刻使用<font color=red>相同频带</font>进行通信；</p></li><li><p>各用户使用经过特殊挑选的不同码型；</p></li><li><p>抗干扰能力强；</p></li><li><p>有效增大系统的通信容量；</p></li><li><p>最初是用于军事通信，随着CDMA设备的价格和体积大幅度下降，现己广泛使用在民用移动通信中，特别是在无线局域网中。</p></li></ul></li><li><p>CDMA工作原理：</p><ul><li><p>比特时间进一步划分为m（或64或128）个短的时间段，称为<font color=red>码片</font>(chip)。</p></li><li><p>每个站被指派一个唯一的m位码片序列：</p><ul><li><p>发送比特1，则发送m位码片序列</p></li><li><p>发送比特0，则发送码片序列的二进制反码</p></li></ul></li><li><p>任意两个码片序列（S，T）必须满足正交关系：</p><p>S·T＝0，S·S＝1 ，S·S’＝-1 ，S·T’＝0</p></li></ul></li><li><p>CMDA举例：</p></li></ol><h2 id="6-数据交换技术">6. 数据交换技术</h2><ol><li><p>交换：在多结点通信网络中，为有效利用通信设备和线路，一般希望<font color=red>动态地</font><font color=blue>设定通信双方间的线路</font>，<font color=red>动态地</font><font color=blue>接通或断开通信线路</font>，称为“交换”。</p></li><li><p>交换方式分类：</p><ul><li><p>电路交换</p></li><li><p>存储交换：</p><ul><li><p>报文交换</p></li><li><p>分组交换</p></li><li><p>信元交换</p></li></ul></li><li><p>混合交换</p></li></ul></li></ol><h3 id="1-电路交换（circuit-switching）">1.  电路交换（circuit switching）</h3><ol><li><p>直接利用<font color=red>可切换</font>的<font color=red>物理通信线路</font>，连接通信双方。<font color=blue>（补充：不一定是一条线路，也可以是线路中的一个信道。）</font></p></li><li><p>基本步骤：</p><ul><li><p>建立电路</p></li><li><p>传输数据</p></li><li><p>拆除电路</p></li></ul></li><li><p>主要特点：</p><ul><li><p>在发送数据前，必须建立起点到点的<font color=red>临时、专用的物理通路</font>；</p></li><li><p>建立物理通路<font color=red>时间较长</font>，数据传送延迟较短。</p></li></ul></li></ol><h3 id="2-报文交换（message-switching）">2. 报文交换（message switching）</h3><ul><li><p>原理：信息以报文（逻辑上完整的信息段）为单位进行存储转发。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgsyx900nj30yc078755.jpg" alt="image-20211217141459708" style="zoom:50%;" /></li><li><p>特点：</p><ul><li><p>线路利用率高</p></li><li><p>要求中间结点（网络通信设备）缓冲大</p></li><li><p>延迟时间长</p></li></ul></li><li><p>补充：</p><ul><li>实际上很少使用者中交换方式</li></ul></li></ul><h3 id="3-分组交换（packet-switching）">3. 分组交换（packet switching）</h3><ul><li><p>信息以<font color=red>分组</font>为单位进行存储转发。源结点把报文分为分组，在中间结点存储转发，目的结点把分组合成报文。</p></li><li><p>分组交换的特点:</p><ul><li>网络结点设备中不预先分配资源；</li><li>线路利用率高；</li><li>结点存储器利用率高；</li><li>易于重传，可靠性高；</li><li>易于开始新的传输，让紧急信息优先通过；</li><li>额外信息增加。</li></ul></li><li><p>分组交换类型：</p><ul><li><p>数据报（<strong>datagram</strong>）:</p><ul><li>每个分组独立路由；</li><li>适于传送少量分组，省去呼叫建立过程，速度快；</li><li>可以较好处理拥塞；</li><li>比较可靠。</li></ul></li><li><p>虚电路（<strong>virtual circuit</strong>）：</p><ul><li><p>所有分组只作一次路由；</p></li><li><p>发送分组前需要建立虚电路；</p></li><li><p>相对数据报，网络在处理拥塞时困难，不可靠。</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgtalrekvj311o0is0v3.jpg" alt="image-20211217142613520" style="zoom:50%;" /></li></ul><h3 id="4-交换方式比较">4. 交换方式比较</h3><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgte5jff9j30t00padhj.jpg" alt="image-20211217142937723" style="zoom:50%;" /><h2 id="7-物理层">7. 物理层</h2><h3 id="1-物理层规程">1. 物理层规程</h3><ul><li><p><font color=red>数据终端设备DTE (Data Terminal Equipment)</font>是指具有一定的数据处理能力以及收发能力的数据输入/输出设备、终端设备或计算机等终端装置。</p></li><li><p><font color=red>数据通信设备DCE (Data Communication Equipment)</font>，是指自动呼叫应答设备、交换机以及其它一些中间装置的集合,其作用就是在DTE和传输线路之间提供信号变换和编码的功能，并且负责建立、保持和释放数据链路连接。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxgtjn6ut8j31120cqjte.jpg" alt="image-20211217143454185" style="zoom:50%;" /><h3 id="2-物理层接口标准">2. 物理层接口标准</h3><ul><li><p><font color=red> ISO/OSI 关于物理层的定义</font>：物理层提供<font color=red>机械的、电气的、功能的和规程的特性</font>，目的是启动、维护和关闭数据链路实体之间进行<font color=red>比特传输</font>的物理连接。这种连接可能通过<font color=red>中继系统</font>，在中继系统内的传输也是在物理层的。</p></li><li><p>物理层的功能：在两个网络设备之间提供透明的<font color=red>比特流传输</font>。</p></li><li><p>研究内容：物理连接的启动和关闭，正常数据的传输，以及维护管理。</p></li></ul><h3 id="3-物理层的特性">3. 物理层的特性</h3><h4 id="1-机械特性">1. 机械特性</h4><p>主要定义物理连接的边界点，即<font color=red>接插装置</font>。规定物理连接时所采用的规格、引脚的数量和排列情况。</p><h4 id="2-电气特性">2. 电气特性</h4><p>规定传输二进制位时，线路上信号的<font color=red>电压高低、阻抗匹配、传输速率和距离限制</font>。</p><h4 id="3-功能特性">3. 功能特性</h4><p>主要定义各条物理线路的功能。线路的功能分为四大类：数据、控制、定时、地。</p><h4 id="4-规程特性">4. 规程特性</h4><p>说明了交换电路进行数据交换的一组操作序列。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习学习笔记：贝叶斯分类器</title>
      <link href="/2021/12/01/AI/MachineLearning/BayesianClassifier/"/>
      <url>/2021/12/01/AI/MachineLearning/BayesianClassifier/</url>
      
        <content type="html"><![CDATA[<h2 id="1-贝叶斯决策论">1. 贝叶斯决策论</h2><h3 id="1-条件风险">1. 条件风险</h3><p>假设有N种可能的标记，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">Y</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>c</mi><mi>N</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\mathscr{Y}=\{c_1,c_2,\dots,c_N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7em;vertical-align:0em;"></span><span class="mord mathscr" style="margin-right:0.2939em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\lambda_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是将一个真实标记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">c_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的样本错误的分类为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的损失。后验概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c_i|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是指样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>的真实标记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的概率。于是，将样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>分类为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所产生的的期望损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(c_i|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>λ</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mi>P</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(c_i|x)=\sum_{j=1}^N\lambda_{ij}P(c_j|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><h3 id="2-贝叶斯判断准则">2. 贝叶斯判断准则</h3><p>我们的任务是寻找一个判断准则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>:</mo><mrow><mi mathvariant="script">X</mi><mo>→</mo><mi mathvariant="script">Y</mi></mrow></mrow><annotation encoding="application/x-tex">h:\mathscr{X\to Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7em;vertical-align:0em;"></span><span class="mord"><span class="mord mathscr" style="margin-right:0.26006em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathscr" style="margin-right:0.2939em;">Y</span></span></span></span></span>以最小化总体风险：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mi>x</mi></msub><mo stretchy="false">[</mo><mi>R</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">R(h)= \mathbb{E}_x[R(h(x)|x)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbb">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)]</span></span></span></span></span></p><p>显然，如果我们可以最小化每一个样本产生的风险，则总体样本风险也将会被最小化。这就产生了<font color=red>贝叶斯判断准则</font>：为最小化总体风险，只需要在每个样本上选择那个能使条件风险<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>最小的类别标记，即：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>h</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>c</mi><mo>∈</mo><mi mathvariant="script">Y</mi></mrow></munder><mi>R</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h^*(x) = \arg \min_{c\in \mathscr{Y} }R(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53337em;vertical-align:-0.7833699999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.344em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">∈</span><span class="mord mathscr mtight" style="margin-right:0.2939em;">Y</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7833699999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>此时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>h</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">h^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>被称为最优分类器，与之对应的总体风险<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msup><mi>h</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(h^*)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>称为贝叶斯风险。</p><h3 id="3-分类模型">3. 分类模型</h3><p>若目标是最小化分类错误率，则误判损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\lambda_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>只有在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>相等时为0，其他情况下为1。此时的条件风险为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(c|x)=1-P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>因此最小化错误率的最优贝叶斯分类器为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>h</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>c</mi><mo>∈</mo><mi mathvariant="script">Y</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h^*(x)=\arg \max_{c\in \mathscr{Y}}P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53337em;vertical-align:-0.7833699999999999em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.344em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">∈</span><span class="mord mathscr mtight" style="margin-right:0.2939em;">Y</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7833699999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>即，对于每一个样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，使得后验概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>最大化。</p><p>为了获得后验概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，大体来说，可以采用两种策略：给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，可以直接建模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>来预测<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>，这样得到的<font color=blue>判别式模型</font>。决策树、BP神经网络、支持向量机等，都可以纳为判别式模型的范畴。另一种是先对联合概率密度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>建模，然后再由此获得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，这样得到的是<font color=blue>生成式模型</font>。对于生成式模型，必然考虑：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(c|x)=\frac{P(x,c)}{P(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>基于贝叶斯定理，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>可写为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(c|x)=\frac{P(c)P(x|c)}{P(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>是先验概率，即标签为c发生的概率，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>是标签为c的样本中中样本x出现的条件概率。而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>指样本x出现的概率，对于给定的x，其值为一个定值，因此在考虑的时候，只需对分子进行比较。</p><h2 id="2-极大似然估计">2. 极大似然估计</h2><p>假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>具有确定的形式形式并且被参数向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>唯一确定，我们的任务就是利用训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>估计参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。为了明确起见，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x|\theta_c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>概率模型的训练过程就是参数估计的过程。对于参数的估计，统计学界分别提供了两种不同的解决方案：频率学派认为参数虽然未知，但却是客观存在的固定值，因此，可以通过优化似然函数等准则来确定参数值。而贝叶斯学派认为参数是未被观察到的随机变量，其本身也可能有分布，因此，可以先假设参数服从一个先验分布，然后基于观测到的数据来计算参数的后验分布。</p><p>本节介绍源自于频率主义学派的极大似然估计(Maximum Likelihood Estimation, MLE)。</p><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">D_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>类样本组成的集合，假设这些样本是<font color=blue>独立同分布</font>的，则参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对于数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">D_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的似然是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>c</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mrow><mi>x</mi><mo>∈</mo><msub><mi>D</mi><mi>c</mi></msub></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(D_c|\theta_c)=\prod_{x\in D_c}P(x|\theta_c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4444410000000003em;vertical-align:-1.394436em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进程极大似然估计，就是去寻找能最大化似然<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>c</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(D_c|\theta_c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的的参数值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\hat{\theta}_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1078799999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。直观上看，极大似然估计就是试图在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的所有可能的取值中，找到一个能使数据出现的可能性最大的值。</p><p>上面的式子中概率连乘可能会造成下溢，通常使用对数似然：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>c</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><msub><mi>D</mi><mi>c</mi></msub></mrow></munder><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}LL(\theta_c)&amp;=\log P(D_c|\theta_c)\\&amp;= \sum_{x\in D_c}\log P(x|\theta_c)\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.244441em;vertical-align:-1.8722205em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3722205em;"><span style="top:-4.5822255em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord mathnormal">LL</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.8722205em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8722205em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3722205em;"><span style="top:-4.5822255em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.8722205em;"><span class="pstrut" style="height:3.050005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.394436em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8722205em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3722205em;"><span style="top:-4.5822255em;"><span class="pstrut" style="height:3.050005em;"></span><span class="eqn-num"></span></span><span style="top:-2.8722205em;"><span class="pstrut" style="height:3.050005em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8722205em;"><span></span></span></span></span></span></span></span></span></p><p>此时参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\theta_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的极大似然估计<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>θ</mi><mi>c</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\theta_c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1078799999999998em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mi>c</mi></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><msub><mi>θ</mi><mi>c</mi></msub></munder><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>c</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\theta}_c=\arg \max_{\theta_c} LL(\theta_c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1078799999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.602208em;vertical-align:-0.8522080000000001em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999983em;"><span style="top:-2.347892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8522080000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">LL</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>需要注意的是，这种参数化的方法虽然能使类条件概率估计变得相对简单，但估计结果的准确性严重依赖于所假设的概率分布形式是否复合潜在的真实数据分布。</p><h2 id="3-朴素贝叶斯分类器">3. 朴素贝叶斯分类器</h2><p>朴素贝叶斯的核心思想是假设<font color=red>所有属性相互独立</font>。换言之，假设每个属性独立地对分类结果发生影响。</p><p>基于属性条件独立性假设，可以得到下式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>d</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)=\frac{P(c)P(x|c)}{P(x)}=\frac{P(c)}{P(x)}\prod_{i=1}^{d}P(x_i|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p><p>式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>为属性数目，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>在第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个属性上的取值。</p><p>由于对确定的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>而言，其<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>值相同，因此基于贝叶斯判定准则：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>h</mi><mrow><mi>n</mi><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>c</mi><mo>∈</mo><mi mathvariant="script">Y</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>d</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_{nb}(x)=\arg\max_{c\in\mathscr{Y}}P(c)\prod_{i=1}^dP(x_i|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nb</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.344em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">∈</span><span class="mord mathscr mtight" style="margin-right:0.2939em;">Y</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7833699999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p><p>这就是朴素贝叶斯分类器的表达式。</p><p>显然，朴素贝叶斯分类器的训练过程是基于训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>来估计类先验概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>，并为每个属性估计条件概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x_i|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>。</p><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">D_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>类样本组成的集合，若有充足的独立同分布样本，则很容易地估计出类先验概率：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>c</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(c)=\frac{|D_c|}{|D|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>对离散属性而言，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">D_{c,x_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">D_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个属性上取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本组成的集合，则条件概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x_i|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>可以估计为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(x_i|c)=\frac{|D_{c,x_i}|}{|D|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>对连续属性可考虑概率密度函数，假定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><msub><mi>μ</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo separator="true">,</mo><msubsup><mi>σ</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow><mn>2</mn></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x_i|c)\sim\mathscr{N}(\mu_{c,i},\sigma^2_{c,i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20888em;vertical-align:-0.394772em;"></span><span class="mord mathscr" style="margin-right:0.3525em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mu_{c,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{c,i}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20888em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span>分别是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>类样本在属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>上取值的均值和方差，则有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>σ</mi><mrow><mi>c</mi><mo separator="true">,</mo><mi>i</mi></mrow><mn>2</mn></msubsup></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x_i|c)=\frac{1}{\sqrt{2\pi}}\exp (-\frac{(x_i-\mu_{c,i})^2}{2\sigma_{c,i}^2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5900799999999995em;vertical-align:-1.0989719999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911079999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.4231360000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0989719999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>为了避免其他属性携带的信息被训练集中未出现的属性值抹去，在估计概率值时通常需要进行平滑，常用拉普拉斯修正。具体来说，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>表示训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中可能的类别数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个属性可能的取值数，则有如下修正后的式子：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>P</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>c</mi></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{P}(c)=\frac{|D_c|+1}{|D|+N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>P</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>c</mi></msub><mi mathvariant="normal">∣</mi><mo>+</mo><msub><mi>N</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{P}(x_i|c)=\frac{|D_{c,x_i}|+1}{|D_c|+N_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>显然，拉普拉斯修正避免了因为训练集样本不充分而导致概率估值为0的问题，并且在训练集变大时，修正过程所引入的先验的影响也会逐渐变得可以忽略，使得估值逐渐趋向于实际的概率值。</p><h2 id="4-半朴素贝叶斯分类器">4. 半朴素贝叶斯分类器</h2><p>半朴素贝叶斯分类器的基本思想是<font color=red>适当考虑一部分属性见的相互依赖信息</font>，从而既不需要进行完全联合概率的计算，又不至于忽略了比较强的属性依赖关系。“独依赖估计”是半朴素贝叶斯分类器最常用的一种策略。“独依赖”就是假设每个属性在类别之外<font color=blue>最多仅依赖于一个其他属性</font>，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>∝</mo><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>d</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo separator="true">,</mo><mi>p</mi><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)\propto P(c)\prod_{i=1}^dP(x_i|c,pa_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">pa_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所依赖的属性，称为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的父属性。</p><p>如何确定每个属性的父属性？</p><h3 id="1-SPODE方法">1. SPODE方法</h3><p>SPODE方法，即Super Parent ODE。最直接的假设就是所有属性拥有一个相同的父属性，我们称之为“超父”，然后通过交叉验证等模型选择方法来确定超父属性。</p><img src="https://jerry-mu.oss-cn-beijing.aliyuncs.com/pic/15756588-5245cc29ed76f49c.png" alt="img"  /><h3 id="2-TAN方法">2. TAN方法</h3><p>TAN方法，即Tree Augmented Naive Bayes，是在最大带权生成树算法的基础上，通过以下步骤将属性间依赖关系约简为树形结构：</p><blockquote><ol><li><p>计算任意两个属性间的条件互信息：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo separator="true">;</mo><mi>c</mi><mo>∈</mo><mi mathvariant="script">Y</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">I(x_i,x_j|y)=\sum_{x_i,x_j;c\in\mathscr{Y}}P(x_i,x_j|c)\log\frac{P(x_i,x_j|c)}{P(x_i|c)P(x_j|c)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.930325em;vertical-align:-1.503325em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8439949999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">;</span><span class="mord mathnormal mtight">c</span><span class="mrel mtight">∈</span><span class="mord mathscr mtight" style="margin-right:0.2939em;">Y</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.503325em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p>以属性为结点构建完全图，任意两个结点之间的权重设为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x_i,x_j|y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>;</p></li><li><p>构建此完全图的最大带权生成树，挑选根变量，将边置为有向；</p></li><li><p>加入类别结点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，增加从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>到每个属性的有向边。</p></li></ol></blockquote><p>不难发现，TAN实际上保留了强相关属性之间的依赖性。</p><p><img src="https://jerry-mu.oss-cn-beijing.aliyuncs.com/pic/15756588-2cbd3c668adf2568.png" alt="img"></p><h3 id="3-AODE方法">3. AODE方法</h3><p>AODE方法，即Averaged One-Dependent Estimator，是一种基于集成学习机制、更为强大的独依赖分类器。AODE尝试将每个属性作为超父来构建SPODE，然后将那些有足够训练数据支撑的SPODE集成起来作为最终结果</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>∝</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><msub><mi>D</mi><msub><mi>x</mi><mi>i</mi></msub></msub><mi mathvariant="normal">∣</mi><mo>≥</mo><msup><mi>m</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><mi>d</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>d</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)\propto \sum^d_{i=1,|D_{x_i}|\ge m&#x27;}P(c,x_i)\prod_{j=1}^dP(x_j|c,x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.434578em;vertical-align:-1.5984649999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000006em;"><span style="top:-1.8089950000000001em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645428571428572em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.65952em;"></span><span class="mord mathnormal mtight">i</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3678em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mrel mtight">≥</span><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5984649999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><msub><mi>x</mi><mi>i</mi></msub></msub></mrow><annotation encoding="application/x-tex">D_{x_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个属性上取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>样本的集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">m&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>为阈值常数。</p><p>显然，AODE需要估计<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c,x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>−</mo><mi>j</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X-j|c,x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>P</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi>N</mi><mo>×</mo><msub><mi>N</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{P}(c,x_i)=\frac{|D_{c,x_i}|+1}{|D|+N\times N_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>P</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mrow><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></msub><mo>+</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub></mrow></msub><mi mathvariant="normal">∣</mi><mo>+</mo><msub><mi>N</mi><mi>j</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{P}({x_j|c,x_i})=\frac{D_{c,x_i,x_j}+1}{|D_{c,x_i}|+N_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.232878em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.392758em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4206500000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.73732em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中可能的类别数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个属性可能的取值数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">D_{c,x_i,x_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span></span></span>是类别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>且在第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个属性上取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>样本的集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>c</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">D_{c,x_i,x_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03065em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span></span></span>是类别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>且第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个和第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>个属性取值分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">x_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的样本的集合。</p><h2 id="5-贝叶斯网">5. 贝叶斯网</h2><h2 id="6-EM算法">6. EM算法</h2>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 贝叶斯分类器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习学习笔记：决策树</title>
      <link href="/2021/11/26/AI/MachineLearning/DecisionTree/"/>
      <url>/2021/11/26/AI/MachineLearning/DecisionTree/</url>
      
        <content type="html"><![CDATA[<h2 id="1-算法流程">1. 算法流程</h2><p>一般情况下，一棵完整的决策树由一个根结点、若干个内部结点和叶结点组成。其中，根结点包含样本的全集，在属性的划分下，生成不同的子结点，所有的叶结点就是最终划分的结果。决策树学习的目的就是为了生成一棵泛化能力强的树。</p><p>其基本算法流程如下：</p><blockquote><p><strong>输入</strong>：训练集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">D=\{(x_1,y_1),(x_2,y_2),\dots,(x_m,y_m)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span>;</p><p>​属性集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>d</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A = \{a_1,a_2,\dots,a_d\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>.</p><p><strong>过程</strong>：函数<strong>TreeGenerate(D,A)</strong></p><p>1：生成结点node；</p><p>2：<strong>if</strong> D中的样本全部属于同一类别C <strong>then</strong></p><p>3：将node标记为C类叶结点；<strong>return</strong></p><p>4：<strong>end if</strong></p><p>5：<strong>if</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">A=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span> <strong>OR</strong> D 中样本在 A 上取值相同 <strong>then</strong></p><p>6：将node标记为叶结点，其类别标记为D中样本数目最多的类；<strong>return</strong></p><p>7：<strong>end if</strong></p><p>8：从A中选择最优划分属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">a_*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</p><p>9：<strong>for</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">a_*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的每一个值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mo>∗</mo><mi>v</mi></msubsup></mrow><annotation encoding="application/x-tex">a_*^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.911392em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> <strong>do</strong></p><p>10：为node生成一个分支；令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">D_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">a_*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mo>∗</mo><mi>v</mi></msubsup></mrow><annotation encoding="application/x-tex">a_*^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.911392em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>的样本子集；</p><p>11：<strong>if</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">D_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为空 <strong>then</strong></p><p>12：将分支结点标记为叶结点，其类别标记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中样本最多的类；return</p><p>13：<strong>else</strong></p><p>14：以TreeGenerate(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">D_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,A\<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mo>∗</mo></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_*\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>)为分支结点</p><p>15：<strong>end if</strong></p><p>16：<strong>end for</strong></p><p><strong>输出</strong>：以node为根节点的决策树</p></blockquote><p><font color=red>注意三种返回结果：</font></p><ol><li>当前结点包含的样本全属于相同的类别：设定该相同类别为当前结点的值；</li><li>当前的属性集合为空，或者样本在所有属性上取值相同：设定样本所含最多类为当前结点的值；</li><li>当前结点包含的样本集合为空：设点父结点样本所含最多类为当前结点的值；</li></ol><p><font color=red>核心步骤：</font>寻找当前集合A中选择最优划分属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">a_*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><h2 id="2-划分选择">2. 划分选择</h2><p>随着决策树划分的不断进行，我们希望分支结点所含样本尽可能属于相同的类别，即结点的纯度越来越高。在此，我们以贪心的思想，选择可以使当前结点纯度最大化的属性，来进行下一次结点划分。下面介绍几种描述结点纯度（增量）的指标。</p><h3 id="1-信息增益">1. 信息增益</h3><p>假定当前集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>类样本所占比例为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi mathvariant="script">y</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_k(k=1,2,\dots,|\mathscr{y}|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>的<font color=red>信息熵定义</font>为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="script">y</mi><mi mathvariant="normal">∣</mi></mrow></munderover><msub><mi>p</mi><mi>k</mi></msub><mtext> </mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">Ent(D)=-\sum_{k=1}^{|\mathscr{y}|}p_k\ log_2p_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2631180000000004em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Ent(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>值越低，当前集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>的纯度越高。</p><p>假设离散属性a有V个可能的取值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msup><mi>a</mi><mn>1</mn></msup><mo separator="true">,</mo><msup><mi>a</mi><mn>2</mn></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>a</mi><mi>V</mi></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a^1,a^2,\dots,a^V\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，若使用a对样本集合D进行划分，则可以产生V个分支结点。记集合D在属性a上取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>v</mi></msup></mrow><annotation encoding="application/x-tex">a^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span></span></span>所产生的样本集合为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mi>v</mi></msup></mrow><annotation encoding="application/x-tex">D^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span></span></span>，<font color=red>信息增益的定义</font>为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>v</mi><mo>=</mo><mn>1</mn></mrow><mi>V</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msup><mi>D</mi><mi>v</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain(D,a) =Ent(D)-\sum^V_{v=1}\frac{|D^v|}{|D|}Ent(D^v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>一般而言，信息增益越大，意味着属性a来进行划分对决策树带来的纯度增益越大。因此，我们有理由选择当前结点拥有最大的信息增益的属性进行划分，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mo>∗</mo></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></munder><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_* = \arg \max_{a\in A}Gain(D,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.521701em;vertical-align:-0.771701em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">A</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.771701em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></p><h3 id="2-增益率">2. 增益率</h3><p>单纯的使用信息增益可能会造成一些问题。不难发现，信息增益准侧对可取值数目较多的属性有所偏好。而这种偏好可能造成不良影响，降低决策树的泛化能力，无法对新的样本进行有效的预测。因此，我们提出<font color=red>增益率</font>的概念。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><mrow><mi>I</mi><mi>V</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">Gain\_ratio(D,a)=\frac{Gain(D,a)}{IV(a)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>式中，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>V</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>v</mi><mo>=</mo><mn>1</mn></mrow><mi>V</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">IV(a)=-\sum_{v=1}^{V}\frac{|D^v|}{|D|}log_2\frac{|D^v|}{|D|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>称为属性a的固有值。属性a的可取值数目越多，固有值越大。</p><p>注意，增益率准则对可取值数目较少的属性有所偏好。因此在选择属性时，我们综合这两种概念：先从候选划分属性中选择信息增益率高于平均水平的属性，再从中选择增益率最高的。</p><h3 id="3-基尼指数">3. 基尼指数</h3><p>数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>的纯度可用基尼值来度量：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="script">y</mi><mi mathvariant="normal">∣</mi></mrow></munderover><munder><mo>∑</mo><mrow><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal">≠</mo><mi>k</mi></mrow></munder><msub><mi>p</mi><mi>k</mi></msub><msub><mi>p</mi><msup><mi>k</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="script">y</mi><mi mathvariant="normal">∣</mi></mrow></munderover><msubsup><mi>p</mi><mi>k</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Gini(D)=\sum_{k=1}^{|\mathscr{y}|}\sum_{k&#x27;\neq k}p_kp_{k&#x27;}\\=1-\sum_{k=1}^{|\mathscr{y}|}p^2_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.399226em;vertical-align:-1.438221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight"><span class="mrel mtight"><span class="mord vbox mtight"><span class="thinbox mtight"><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord mtight"><span class="mrel mtight"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.438221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2631180000000004em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961005em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gini(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>的值越小，数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>的纯度越高。</p><p>属性a的基尼指数定义为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi mathvariant="normal">_</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>V</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>D</mi><mi>v</mi></msup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><msup><mi>D</mi><mi>v</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gini\_index(D,a)=\sum_{k=1}^{V}\frac{|D^v|}{|D|}Gini(D^v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">in</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>因此我们需要选择那个使得划分后基尼指数最小的属性作为最优划分属性，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mo>∗</mo></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></munder><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi mathvariant="normal">_</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_*=\arg\min_{a\in A} Gini\_index(D,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.521701em;vertical-align:-0.771701em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">A</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.771701em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">in</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></p><h2 id="3-剪枝处理">3. 剪枝处理</h2><h3 id="1-预剪枝">1. 预剪枝</h3><ol><li>定义：在决策树生成过程中，对每个结点在划分，若当前结点的划分不能带来泛化性能的提升，则停止划分并将当前结点标记为叶结点。</li><li>方法：可以使用留出法，将已知数据集划分为两个部分，训练集和测试集。用测试集计算当前结点展开前和展开后的准确率变化。若当前结点的展开没有带来泛化性能的提升，则不进行展开。</li><li>评价：<ol><li>降低了过拟合的风险；</li><li>减小了决策树的训练时间和测试时间开销；</li><li>也给决策树带来了欠拟合的风险。</li></ol></li></ol><h3 id="2-后剪枝">2. 后剪枝</h3><ol><li>定义：先从训练集生成一棵完整的决策树，然后字底向上地对非叶结点进行考察，若将该结点对应的子树替换为叶结点能带来决策树泛化性能提升，则将该子结点替换为叶结点。</li><li>评价：<ol><li>后剪枝决策树欠拟合风险小，泛化能力往往高于预剪枝决策树；</li><li>训练时间开销比预剪枝树要大得多。</li></ol></li></ol><h2 id="4-连续值与缺失值">4. 连续值与缺失值</h2><h3 id="1-连续值处理">1. 连续值处理</h3><p>给定样本集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>和连续属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>，假定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>上出现了n个不同的取值。我们定义n-2个元素的候选划分点集合</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>a</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mfrac><mrow><msup><mi>a</mi><mi>i</mi></msup><mo>+</mo><msup><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T_a=\{\frac{a^i+a^{i+1}}{2}|1\le i\le n-1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.187664em;vertical-align:-0.686em;"></span><span class="mopen">{</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5016639999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></span></p><p>因此，信息熵增量的式子可以变形为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>t</mi><mo>∈</mo><msub><mi>T</mi><mi>α</mi></msub></mrow></munder><mtext> </mtext><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>t</mi><mo>∈</mo><msub><mi>T</mi><mi>α</mi></msub></mrow></munder><mtext> </mtext><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>λ</mi><mo>∈</mo><mo stretchy="false">{</mo><mo>−</mo><mo separator="true">,</mo><mo>+</mo><mo stretchy="false">}</mo></mrow></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msubsup><mi>D</mi><mi>t</mi><mi>λ</mi></msubsup><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><msubsup><mi>D</mi><mi>t</mi><mi>λ</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain(D,a)=\max_{t\in T_\alpha}\ Gain(D,a,t)\\=\max_{t\in T_\alpha}\ Ent(D)-\sum_{\lambda\in\{-,+\}}\frac{|D^\lambda_t|}{|D|}Ent(D^\lambda_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.594431em;vertical-align:-0.8444309999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.594431em;vertical-align:-0.8444309999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8444309999999999em;"><span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.042113em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="mrel mtight">∈</span><span class="mopen mtight">{</span><span class="mord mtight">−</span><span class="mpunct mtight">,</span><span class="mord mtight">+</span><span class="mclose mtight">}</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.526108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>于是我们就可以选择使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain(D,a,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>最大化的划分点。</p><p>需要注意的是，与离散属性不同，若当前结点划分属性为连续属性，该属性还可作为其后代结点的划分属性。</p><h3 id="2-缺失值处理">2. 缺失值处理</h3><p>给定训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>和属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>在属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>上没有缺失值得样本子集。显然，我们可以根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span>来判断属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>的优劣。假设属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>个可取值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msup><mi>a</mi><mn>1</mn></msup><mo separator="true">,</mo><msup><mi>a</mi><mn>2</mn></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>a</mi><mi>V</mi></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a^1,a^2,\dots,a^V\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msup><mi>D</mi><mi>v</mi></msup><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{D^v}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span>在属性<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>上取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>v</mi></msup></mrow><annotation encoding="application/x-tex">a^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span></span></span>的样本子集，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>D</mi><mi>k</mi></msub><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{D_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0701899999999998em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span>中属于第k类<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi mathvariant="script">y</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(k=1,2,\dots,|\mathscr{y}|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span>的样本子集。假定我们为每一个样本x赋予一个权重<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ω</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">\omega_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，并定义：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ρ</mi><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow></munder><msub><mi>ω</mi><mi>x</mi></msub></mrow><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>D</mi></mrow></munder><msub><mi>ω</mi><mi>x</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\rho=\frac{\sum_{x\in \tilde{D}}\omega_x}{\sum_{x\in D}\omega_x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.48016em;vertical-align:-1.01308em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4670800000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.71708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3444229999999998em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span><span style="top:-3.3023300000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.01308em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><msub><mi>p</mi><mi>k</mi></msub><mo>~</mo></mover><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mover accent="true"><msub><mi>D</mi><mi>k</mi></msub><mo>~</mo></mover></mrow></munder><msub><mi>ω</mi><mi>x</mi></msub></mrow><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow></munder><msub><mi>ω</mi><mi>x</mi></msub></mrow></mfrac><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi mathvariant="normal">∣</mi><mi mathvariant="script">y</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{p_k}=\frac{\sum_{x\in \tilde{D_k}}\omega_x}{\sum_{x\in \tilde{D}}\omega_x},(1\le k\le |\mathscr{y}|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8622999999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.55865em;vertical-align:-1.01308em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.54557em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3444229999999998em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span><span style="top:-3.3023300000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.79557em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3444229999999998em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span><span style="top:-3.3023300000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40557em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.01308em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><msub><mi>r</mi><mi>k</mi></msub><mo>~</mo></mover><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mover accent="true"><msup><mi>D</mi><mi>v</mi></msup><mo>~</mo></mover></mrow></munder><msub><mi>ω</mi><mi>x</mi></msub></mrow><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mover accent="true"><mi>D</mi><mo>~</mo></mover></mrow></munder><msub><mi>ω</mi><mi>x</mi></msub></mrow></mfrac><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{r_k}=\frac{\sum_{x\in \tilde{D^v}}\omega_x}{\sum_{x\in \tilde{D}}\omega_x},(1\le k\le |V|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8178599999999999em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.48016em;vertical-align:-1.01308em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4670800000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3444229999999998em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span><span style="top:-3.3023300000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.71708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3444229999999998em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span><span style="top:-3.3023300000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.01308em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span></span></p><p>直观地看，对属性a而言，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span></span></span></span>表示无缺失值样本所占的比例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>p</mi><mi>k</mi></msub><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{p_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8622999999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>表示无缺失值样本中第k类所占的比例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>r</mi><mi>v</mi></msub><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{r_v}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8178599999999999em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>表示无缺失值样本中在属性a上取值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>v</mi></msup></mrow><annotation encoding="application/x-tex">a^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span></span></span>的样本所占的比例。</p><p>综上，可以把信息熵的概念推广为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ρ</mi><mo>×</mo><mi>G</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mover accent="true"><mi>D</mi><mo>~</mo></mover><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mi>ρ</mi><mo>×</mo><mo stretchy="false">(</mo><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mover accent="true"><mi>D</mi><mo>~</mo></mover><mo stretchy="false">)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>v</mi><mo>=</mo><mn>1</mn></mrow><mi>V</mi></munderover><mover accent="true"><msub><mi>r</mi><mi>v</mi></msub><mo>~</mo></mover><mi>E</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mover accent="true"><msup><mi>D</mi><mi>v</mi></msup><mo>~</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gain(D,a)=\rho\times Gain(\tilde{D},a)\\=\rho\times(Ent(\tilde{D})-\sum_{v=1}^{V}\tilde{r_v}Ent(\tilde{D^v}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ain</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></p><p>通过上式子即可找到当前划分的最优属性。</p><p>若样本x在划分属性a上的取值已知，则将x划入与其取值相对应的子节点，且样本权值在子结点中保持<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ω</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">\omega_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。若样本x在划分属性a上的取值未知，则将x同时划入所有子结点，且样本权值与属性值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>v</mi></msup></mrow><annotation encoding="application/x-tex">a^v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span></span></span></span></span></span></span>对应的子结点中调整为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>r</mi><mi>v</mi></msub><mo>~</mo></mover><msub><mi>ω</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">\tilde{r_v}\omega_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8178599999999999em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><h2 id="5-多变量决策树">5. 多变量决策树</h2><p>如果我们把每个属性视为坐标空间中的一个坐标轴，则d个属性描述的样本就对应了d维空间的一个数据点，对样本分类则意味着在这个坐标空间中寻找不同类样本之间的分类边界。决策树所形成的分类边界有一个明显的特征：轴平行，即它的分类边界由若干个与轴平行的分段构成。</p><p>但对于更复杂的分类模型，轴平行的划分线可能会非常复杂，因此可以考虑使用斜线进行划分。为了实现这种方法，我们再决策树划分时不再使用单一属性，而是使用多个属性的线性组合进行判断。因此这种决策树生成算法的核心是生成最优的结点划分线性组合。</p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 决策树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue框架入门(一)</title>
      <link href="/2021/11/22/%E5%89%8D%E7%AB%AF/Vue/Vue_01/"/>
      <url>/2021/11/22/%E5%89%8D%E7%AB%AF/Vue/Vue_01/</url>
      
        <content type="html"><![CDATA[<h2 id="一、初识Vue">一、初识Vue</h2><h3 id="1-Vue的引入">1. Vue的引入</h3><p>想在HTML文件中使用Vue框架就必须引入相关文件，我们可以在<a href="https://cn.vuejs.org">Vue官网</a>上下载Vue文件。</p><p>注意，官网上的Vue文件分为<code>vue.js</code>和<code>vue.min.js</code>，前者用于网页的实际使用，后者用于开发者。前者内存较小，可以供网页更加快速的加载；而后者内存较大，但会在实际代码编写过程中给予错误提醒。因此我们之后都使用开发者版本，等到网页上线时替换掉即可。</p><p>引入Vue框架，就是引入相关的<code>js</code>文件，一般在代码头里面引用。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>初识Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-Vue的工作实例">2. Vue的工作实例</h3><p>想让Vue工作，就必须创建一个Vue实例，且要传入一个篇配置对象。我们一般在代码体中的<code>script</code>标签下对Vue进行实例化，实例的时候需要传入特定的配置参数。此处，我们介绍两个重要的参数。</p><ul><li><code>el</code>参数：用于指定当前Vue实例为哪个容器服务，通常值为CSS选择器字符串</li><li><code>data</code>参数：用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象</li></ul><p>之后，需要创建该Vue实例所作用的容器，其<code>id</code>值或者<code>class</code>值与容器要相互对应。假设我们需要创建的容器的id值为root。root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法。root容器里面的代码被称为Vue模板。</p><p>在容器中我们可以使用<code>&#123;&#123; &#125;&#125;</code>双大括号来调用Vue实例中的数据。其中 <code>&#123;&#123;xxx&#125;&#125;</code>中<code>xxx</code>要写javascript表达式，且<code>xxx</code>可以自动读取到data中的所有属性。一旦data中的数据发生变化，那模板中用到该数据的地方也会自动更新。</p><p>注意区分： javascript表达式和javascript代码：</p><ol><li><p>表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方，例如：</p><ol><li><code>a</code></li><li><code>a+b</code></li><li>函数调用<code>demo(1)</code></li><li>三目运算表达式<code>x===y?'a':'b'</code></li></ol></li><li><p>代码（语句），例如：</p><ol><li><code>if()&#123;&#125;</code></li><li><code>for()&#123;&#125;</code></li></ol></li></ol><p>下面是一个实例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>初识Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我叫&#123;&#123;name&#125;&#125;，今年&#123;&#123;age&#125;&#125;岁了！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,     <span class="comment">//el用于指定当前Vue实例为哪个容器服务，通常值为CSS选择器字符串</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>:&#123;          <span class="comment">//data中用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象</span></span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&quot;曹阔&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">age</span>:<span class="string">&quot;18&quot;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实际效果如下。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwo1yvg1uej31800so75g.jpg" alt="image-20211122172454982" style="zoom: 33%;" /><p>点击检查，可以看到此时有一个开发者模式提示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwo21g83btj31800sojtt.jpg" alt="image-20211122172726199" style="zoom:33%;" /><p>这是因为我们使用了开发者版本的Vue，如果不想要这个显示，可以在实例创建前加上<code>Vue.config.productionTip = false</code>。</p><p>另外，需要强调的是Vue实例和容器是一一对应的。多对一和一对多都会出现错误，读者可以自行尝试。在真实开发中，我们往往只创建一个Vue实例，并且会配合着组件一起使用。</p><h2 id="二、模板语法">二、模板语法</h2><h3 id="1-插值语法">1. 插值语法</h3><ol><li><p>功能：用于解析标签体内容</p></li><li><p>写法：, xxx是js表达式，且可以直接读取到data中的所有属性</p></li><li><p>注意：data再存储的对象可以使复杂的结构类型，调用时我们逐层去找。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">data:&#123;</span><br><span class="line">school:&#123;</span><br><span class="line">    name: &#x27;XJTU&#x27;,</span><br><span class="line">    rank: &#x27;C2&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用插值语法时这样调用:  <code>&#123;&#123;school.name&#125;&#125;</code>。</p></li></ol><h3 id="2-指令语法">2. 指令语法</h3><ol><li><p>功能：用于解析标签（包括：标签属性、标签体内容、绑定事件…）</p></li><li><p>举例：v-bind:href=“xxx” 或 简写:href=“xxx”，xxx同样要写js表达式且可以直接读取到data中的所以属性。</p></li><li><p>备注：Vue中有很多的指令，且形式都是：v-???，此处我们只拿v-bind举例子。</p></li><li><p>实例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模板语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>点我去&#123;&#123;name&#125;&#125;的主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>    <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&quot;Jerry Mu&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">url</span>:<span class="string">&quot;https://mulinjie.top&quot;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="三、数据绑定">三、数据绑定</h2><h3 id="1-单项绑定（v-bind）">1. 单项绑定（v-bind）</h3><ol><li>功能：数据只能从data流向页面。</li><li>简写：可以用<code>:</code>代替<code>v-model</code>。</li></ol><h3 id="2-双向绑定（v-model）">2. 双向绑定（v-model）</h3><ol><li><p>功能：数据不仅能从data流向页面，也可以从页面流向data。</p></li><li><p>简写：<code>v-model:value</code>可以简写为<code>v-model</code>，因为<code>v-model</code>默认收集的就是value值</p></li><li><p>备注：双向绑定一般都应用在表单类元素上</p></li><li><p>实例：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        单项数据绑定: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        双项数据绑定: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>    <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>:<span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>: <span class="string">&quot;Jerry Mu&quot;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，效果如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwo6ajpi3pj30rs0kujs6.jpg" alt="image-20211122195429742" style="zoom:33%;" /><p>当改变上面表格中的值时，下面表格中的值不会发生变化。</p></li></ol><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwo6bo5nffj30rs0kut9i.jpg" alt="image-20211122195539027" style="zoom:33%;" /><p>​ 而修改下面的值，会让上面的值改变。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwo6du9s0vj30rs0ku753.jpg" alt="image-20211122195744185" style="zoom:33%;" /><h2 id="四、el和data的两种写法">四、el和data的两种写法</h2><h3 id="1-el的两种写法：">1. el的两种写法：</h3><ul><li>方法一：<code>new Vue</code>时候配置el属性</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>el和data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>        <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,      <span class="comment">//el的第一种写法</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>: <span class="string">&quot;Jerry Mu&quot;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>方法二：先创建Vue实例，随后再通过<code>vm.$mount('#root')</code>指定el的值</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>el和data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>        <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>: <span class="string">&quot;Jerry Mu&quot;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">        vm.$mount(<span class="string">&#x27;#root&#x27;</span>)         <span class="comment">//el的第二种写法</span></span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-data的两种写法：">2. data的两种写法：</h3><ul><li>方法一：对象式</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>el和data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>        <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,     </span></span><br><span class="line"><span class="javascript">            <span class="comment">//data的对象式写法</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>: <span class="string">&quot;Jerry Mu&quot;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>方法二：函数式</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>el和data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>        <span class="comment">//阻止vue在启动时生成生产提示</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,     </span></span><br><span class="line"><span class="javascript">            <span class="comment">//data的函数式写法</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>:<span class="string">&#x27;Jerry Mu&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>如何选择：学习到组件后，data必须使用函数式，否则报错</li><li>一个重要的原则：由Vue管理的函数，一定不要写箭头函数，一旦写了箭头函数，this指针就不再指向Vue的实例。</li></ul><h2 id="五、MVVM模型">五、MVVM模型</h2><ul><li>MVVM模型：<ol><li>M: 模型（Model）：data中的数据</li><li>V: 视图（View）：模板代码</li><li>VM: 视图模型（View-Model）：Vue实例</li></ol></li><li>观察发现：<ol><li>data中所有的属性，最后都出现在了vm身上</li><li>vm身上所有的属性及Vue原型上所有的属性，在Vue模板中都可以直接使用</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Operating System：Main Memory</title>
      <link href="/2021/11/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/OperatingSystem/MainMemory/"/>
      <url>/2021/11/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/OperatingSystem/MainMemory/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Study-Objectives">1. Study Objectives</h3><ul><li><p>To provide a detailed description of various ways of <font color=red>organizing memory </font>hardware</p></li><li><p>To discuss various<font color=red> memory-management techniques</font>, including paging and segmentation</p></li><li><p>To provide a detailed description of the<font color=red> Intel Pentium</font>, which supports both pure segmentation and segmentation with paging</p></li></ul><h3 id="2-Background">2. Background</h3><ul><li><p><font color=red>Program</font> must be brought (from disk)<font color=red> into memory </font>and placed within a process for it to be run</p><ul><li><p>通常，程序以可执行文件格式保存在磁盘上</p></li><li><p>Main memory and registers are only storage CPU can access directly</p></li><li><p>Register access in one CPU clock (or less)</p></li><li><p>Main memory can take many cycles</p></li><li><p>Cache sits between main memory and CPU registers</p></li></ul></li><li><p>Storage-Device Hierarchy</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw2ttlb6wsj30sm0k0jt8.jpg" alt="image-20211104084610417" style="zoom: 50%;" /></li><li><p>多道程序设计模型：允许多个程序同时进入内存</p></li><li><p>每个进程有自己的地址空间：</p><ul><li><p>一个进程执行时不能访问另一个进程的地址空间</p></li><li><p>进程不能执行不适合的操作</p></li></ul></li></ul><h3 id="3-Binding-of-Instructions-and-Data-to-Memory">3. Binding of Instructions and Data to Memory</h3><ul><li><p>In most cases, a user program will go through several steps—some of which may be optional—before being executed.</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw2u1iyaalj30lk0mgjt3.jpg" alt="image-20211104085350822" style="zoom:50%;" /></li><li><p>Address binding of instructions and data to memory addresses can happen at <font color=red>three different stages</font></p><ul><li><p><font color=red>Compile time</font>: If memory location known a priori, <font color=blue>absolute code</font> can be generated; must recompile code if starting location changes</p></li><li><p><font color=red>Load time</font>: Must generate <font color=blue>relocatable code</font> if memory location is not known at compile time</p></li><li><p><font color=red>Execution time</font>: Binding delayed until run time if the process can be moved during its execution from one memory segment to another. Need hardware support for address maps (e.g., base and limit registers)</p></li></ul></li><li><p>Addresses may be different in these steps.</p><ul><li><p>In source program: <font color=blue>symbolic</font> address</p></li><li><p>After compiled: <font color=blue>relative</font> address</p></li><li><p>After linked or loaded: <font color=blue>absolute</font> address</p></li></ul></li><li><p>Relocation 地址重定位</p><ul><li><p>逻辑地址（相对地址，虚拟地址）</p><ul><li>用户程序经过编译、汇编后形成目标代码，目标代码通常采用相对地址的形式，其首地址为0，其余地址都相对于首地址而编址</li><li><font color=green>不能用逻辑地址在内存中读取信息</font></li></ul></li><li><p>物理地址（绝对地址，实地址）</p><ul><li>内存中存储单元的地址   <font color=green>可直接寻址</font></li></ul></li><li><p>为了保证CPU执行指令时可正确访问内存单元，需要将用户程序中的逻辑地址转换为运行时可由机器直接寻址的物理地址，这一过程称为<strong>地址重定位</strong>。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw5db724oqj310a0kmac2.jpg" alt="image-20211106133136946" style="zoom:40%;" /></li></ul></li><li><p>静态重定位与动态重定位</p><ul><li>静态重定位<ul><li>当用户程序加载到内存时，一次性实现逻辑地址到物理地址的转换</li><li>一般<font color=red>可由软件完成</font></li></ul></li><li>动态重定位<ul><li>在进程执行过程中进行地址变换</li><li>即逐条指令执行时完成地址转换</li><li>需要<font color=red>硬件部件支持</font></li></ul></li></ul></li><li><p>Base and Limit Registers</p><ul><li><p>Protection of memory required to ensure correct operation</p></li><li><p>A pair of base （基地址寄存器）and limit （界限地址寄存器） registers define the logical address space</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw5dio8hl7j30fs0he3z1.jpg" alt="image-20211106133850834" style="zoom:50%;" /></li></ul></li><li><p>Logical vs. Physical Address Space</p><ul><li><p>The concept of a <font color =blue>logical address space</font> that is bound to a separate physical address space is central to proper memory management</p></li><li><p><font color =blue>Logical address</font> – generated by the CPU; also referred to as <font color =blue>virtual address</font></p></li><li><p>Physical address – address seen by the memory unit</p></li><li><p>Logical and physical addresses are the same in compile-time and load-time address-binding schemes</p></li></ul></li><li><p>Logical (virtual) and physical addresses differ in execution-time address-binding scheme</p></li><li><p>Memory-Management Unit (MMU)</p><ul><li>地址重定位  Relocation<ul><li>又叫地址转换、地址映射、地址翻译</li></ul></li><li>The run-time mapping from virtual to physical addresses is done by a hardware called MMU</li><li>In MMU scheme, the value in the relocation register is added to every address generated by a user process at the time it is sent to memory</li><li>The user program deals with <em>logical</em> addresses; it never sees the <em>real</em> physical addresses</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw880creshj30fm0crmy0.jpg" alt="image-20211108222039407" style="zoom: 67%;" /></li><li><p>Dynamic Loading</p><ul><li>Routine is not loaded until it is called</li><li>Better memory-space utilization; unused routine is never loaded</li><li>Useful when large amounts of code are needed to handle infrequently occurring cases</li><li>No special support from the operating system is required. It is implemented through program design.</li></ul></li><li><p>Dynamic Linking</p><ul><li>Linking postponed(延缓) until execution time</li><li>Small piece of code, <em>stub</em>（存根）, used to locate the appropriate memory-resident library routine</li><li>Stub replaces itself with the address of the routine, and executes the routine</li><li>Operating system needed to check if routine is in processes’ memory address</li></ul></li></ul><h3 id="4-Memory-expansion">4. Memory expansion</h3><ul><li><p>内存“扩充”技术</p><ul><li>Compaction 内存紧缩技术</li><li>Overlaying 覆盖技术</li><li>Swapping 交换技术</li><li>Virtual memory 虚拟存储技术</li></ul></li><li><p>overlaying</p><ul><li>解决问题： 程序大小超过物理内存总和</li><li>程序执行过程中，程序的不同部分在内存中相互替换<ul><li>按照自身逻辑结构，将那些不会同时执行的程序段共享同一内存区域</li><li>要求程序各个模块之间有明确的调用结构</li></ul></li><li>程序员完成覆盖结构，操作系统完成自动覆盖</li><li>主要用于早期操作系统</li><li>缺点：对用户不透明，增加了用户负担,由程序员建立覆盖结构</li></ul></li><li><p>Swapping</p><ul><li><p>A process can be swapped temporarily<font color=red> out of memory</font> to a <font color=red>backing store</font>, and then brought back into memory for continued execution (进程在内存与磁盘之间的动态调度)</p><ul><li><strong>Backing store</strong>(备份储存) – fast disk large enough to accommodate copies of all memory images for all users; must provide direct access to these memory images</li></ul></li><li><p><strong>Roll out, roll in</strong> – swapping variant used for priority-based scheduling algorithms; lower-priority process is swapped out so higher-priority process can be loaded and executed</p></li><li><p>Major part of swap time is <font color=red>transfer time</font>; total transfer time is directly proportional(成比例的) to the amount of memory swapped</p></li><li><p>Modified versions of swapping are found on many systems (i.e., UNIX, Linux, and Windows)</p><ul><li>只交换进程的一部分</li><li>空闲内存低于某个阈值时再进行交换；空闲内存足够时，停止交换</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw8807937bj30hr0d9js2.jpg" alt="image-20211108224101159" style="zoom: 67%;" /></li><li><p>Issues:</p><ul><li><p>进程的那些内容要交换到磁盘？运行时创建或修改的内容：栈或堆</p></li><li><p>在磁盘的什么位置保存被换出的进程？交换区（swap space）</p></li><li><p>进程换入时放在什么位置？取决于地址绑定方式，如果动态链接的，可以放任意地方。</p></li><li><p>交换时机？只要不用就换出；内存空间不够时换出；</p></li><li><p>如何选择被换出的进程？考虑进程的各种属性：不应换出处于等待I/O状态的进程</p></li></ul></li></ul></li></ul><h3 id="5-Contiguous-Allocation">5. Contiguous Allocation</h3><ul><li><p>Main memory is usually divided into two partitions:</p><ul><li>Resident <font color=red>operating system</font>, usually held in <font color=blue>low memory</font> with interrupt vector</li><li><font color=red>User processes</font> then held in <font color=blue>high memory</font></li></ul></li><li><p>Relocation registers used to protect user processes from each other, and from changing operating-system code and data</p><ul><li><p><font color=red>Base register</font> contains value of smallest physical address</p></li><li><p><font color=red>Limit register</font> contains range of logical addresses – each logical address must be less than the limit register</p></li><li><p>MMU maps logical address <em>dynamically</em></p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw8804dejgj30is09c3yw.jpg" alt="image-20211108230500510" style="zoom: 67%;" /></li><li><p>基本内存管理方案—连续内存分配</p><ul><li>整个进程进入内存中的一片连续区域</li><li>装载单位：进程</li><li>Fixed Partitioning</li><li>Dynamic Partitioning</li><li>Dynamic Relocationable Partitioning</li></ul></li><li><p>Fixed Partitioning</p><ul><li><p>Divide memory into a number of <font color=red>fixed-sized</font> partitions. 每个分区大小可以相同也可以不同</p></li><li><p>Each partition may contain exactly one process.</p></li><li><p>the degree of multiprogramming is bound by the number of partitions.</p></li><li><p>The OS keeps a table indicating which parts of memory are available and which are occupied.</p></li><li><p>advantage: It is easy to implement</p></li><li><p>disadvantages：</p><ul><li>Fixed partition size: <font color=red>internal fragmentation</font>（内部碎片）</li><li>Fixed partition number: The degree of multiprogramming is bound</li></ul></li></ul></li><li><p>Dynamic-partition allocation</p><ul><li><p>Hole – block of available memory; holes of various size are scattered(散落) throughout memory 分区的划分是动态的，非预先确定</p></li><li><p>When a process arrives, it is allocated memory from a hole large enough to accommodate it</p></li><li><p>Operating system maintains information about:<br>a) allocated partitions  b) free partitions (hole)</p></li><li><p>How to satisfy a request of size <em>n</em> from a list of free holes?</p><ul><li><font color=blue>First-fit（首次适应）</font>: Allocate the <em>first</em> hole that is big enough</li><li><font color=blue>Next-fit（下次适应）</font>: Search from the last allocated hole</li><li><font color=blue>Best-fit（最佳适应）</font>: Allocate the <em>smallest</em> hole that is big enough; must search entire list, unless ordered by size<ul><li>Produces the smallest leftover hole</li></ul></li><li><font color=blue>Worst-fit（最差适应）</font>: Allocate the <em>largest</em> hole; must also search entire list<ul><li>Produces the largest leftover hole</li></ul></li><li>First-fit and best-fit better than worst-fit in terms of speed and storage utilization</li><li>First-fit is faster than best-fit</li></ul></li></ul></li><li><p>Fragmentation</p><ul><li><font color=blue>External Fragmentation</font> – total memory space exists to satisfy a request, but it is not contiguous</li><li><font color=blue>Internal Fragmentation</font> – allocated memory may be slightly larger than requested memory; this size difference is memory internal to a partition, but not being used</li><li>Reduce external fragmentation by <font color=blue>compaction</font>（紧缩）<ul><li>Shuffle(洗牌) memory contents to place all free memory together in one large block</li><li>Compaction is possible <em>only</em> if relocation is dynamic, and is done at execution time</li><li>Issues: 系统开销？移动时机？</li></ul></li></ul></li></ul><h3 id="6-Paging">6. Paging</h3><ul><li><p>还有别的办法可以解决外碎片吗？动态分区产生外碎片的原因是什么？</p><ul><li>动态分区要求把作业必须安置在连续存储区内</li><li>如果允许物理地址空间非连续，是否可以解决？</li><li>分页存储管理是解决存储碎片的一种方法，要避开连续性要求，<font color=blue>允许进程的物理地址空间不连续</font>。</li><li>One solution to external fragmentation is campaction, but it is expensive.</li><li>Another solution is to permit the logical address space of a process can be noncontiguous, thus allowing a process to be allocated physical memory whenever the latter is available.</li></ul></li><li><p>Physical address space of a process can be <font color=red>noncontiguous</font>;</p></li><li><p>Divide <font color=blue>physical memory</font> into fixed-sized blocks called <strong>frames</strong> (size is power of 2, between 512 bytes and 8,192 bytes)</p></li><li><p>Divide <font color=blue>logical memory</font> into blocks of same size called <strong>pages</strong></p></li><li><p>内存分配规则</p><ul><li><p>以页为单位进行分配，并按进程需要的页数来分配</p></li><li><p>逻辑上相邻的页，物理上不一定相邻</p></li></ul></li><li><p>Keep track of all free frames</p></li><li><p>To run a program of size <strong>n</strong> pages, need to find <em>n</em> free frames and load program</p></li><li><p>Address generated by CPU is divided into:</p><ul><li><p><font color=blue>Page number (<em>p</em>)</font>– used as an index into a <em>page</em> <em>table</em> which contains base address of each page in physical memory</p></li><li><p><font color=blue>Page offset (<em>d</em>) </font>– combined with base address to define the physical memory address that is sent to the memory unit</p></li><li><p>For given logical address space <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">2^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span> and page size <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>:</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw87zaslxuj30ek066q2z.jpg" alt="image-20211109004353212" style="zoom:50%;" /></li></ul></li><li><p>Set up a <font color=blue>page table</font> to translate logical to physical addresses</p><ul><li><p>页表项：记录了逻辑页号与帧号的对应关系</p></li><li><p>每个进程一个页表，存放在内存</p></li><li><p>页表起始地址保存在何处？</p></li></ul></li><li><p>地址转换（硬件支持）</p><ul><li><p>CPU取到逻辑地址，自动划分为页号和页内偏移。用页号查页表，得到帧号，再与页内偏移拼接成为物理地址。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw882v99itj30v40k2gme.jpg" alt="image-20211109004721142" style="zoom:50%;" /></li></ul></li><li><p>Implementation of Page Table</p><ul><li>Page table is kept in main memory</li><li><strong>Page-table base register (PTBR)</strong> points to the page table</li><li><strong>Page-table length register (PRLR)</strong> indicates size of the page table</li><li>In this scheme every data/instruction access requires two memory accesses.<ul><li>One for the page table</li><li>One for the data/instruction.</li></ul></li></ul></li><li><p>TLB</p><ul><li><p>The two memory access problem can be solved by the use of a special fast-lookup hardware cache called <font color=blue>associative memory（相联存储器）</font> or <font color=blue>translation look-aside buffers (TLBs) 转换表缓冲区</font></p></li><li><p>在CPU中引入的高速缓存（Cache）, 可以匹配CPU的处理速率和内存的访问速度</p><ul><li>一种随机存取型存储器，除连线寻址机制外，还有接线逻辑，能按特定的匹配标志在一个存储周期内对所有字同时进行比较</li><li>特点：<ul><li>Fast but expensive</li><li>按内容并行查找</li><li>保存正在运行的页表的子集</li></ul></li></ul></li><li><p>Associative Memory</p><ul><li>Associative memory – <font color=red>parallel search </font></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw88dfcyi7j30d207e0sq.jpg" alt="image-20211109005730338" style="zoom:50%;" /><ul><li>Address translation (p, d)<ul><li>If p is in associative register, get frame # out</li><li>Otherwise get frame # from page table in memory</li></ul></li></ul></li><li><p>Paging Hardware With TLB</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw88evzovrj30u20k8gmv.jpg" alt="image-20211109005854371" style="zoom:50%;" /></li><li><p>Effective Access Time</p><ul><li><p>Associative Lookup = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> time unit</p></li><li><p>Assume memory cycle time is 1 microsecond</p></li><li><p>Hit ratio – percentage of times that a page number is found in the associative registers; ratio related to number of associative registers</p></li><li><p>Hitratio = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></p></li><li><p>Effective Access Time (EAT)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>E</mi><mi>A</mi><mi>T</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mi>α</mi><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>+</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>2</mn><mo>+</mo><mi>ϵ</mi><mo>−</mo><mi>α</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}EAT &amp;= (1+\epsilon)\alpha+(2+\epsilon)(1-\alpha)\\&amp;= 2+\epsilon-\alpha\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ϵ</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ϵ</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul></li></ul></li><li><p>Memory Protection</p><ul><li><p>Memory protection implemented by associating <font color=red>protection bit </font>with each frame.</p></li><li><p><font color=blue><strong>Valid-invalid</strong></font> bit attached to each entry in the page table:</p><ul><li><p>“valid” indicates that the associated page is in the process’ logical address space, and is thus a legal page</p></li><li><p>“invalid” indicates that the page is not in the process’ logical address space</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw88tpph08j31000lqdi1.jpg" alt="image-20211109011309196" style="zoom:50%;" /></li></ul></li><li><p>Shared Pages</p><ul><li><p><font color=blue><strong>Shared code</strong></font></p><ul><li><p>One copy of read-only (reentrant) code shared among processes (i.e., text editors, compilers, window systems).</p></li><li><p>Each user’s page table maps onto the same physical copy of the shared code.</p></li></ul></li><li><p><font color=blue><strong>Private code and data</strong> </font></p><ul><li><p>Each process keeps a separate copy of the code and data</p></li><li><p>The pages for the private code and data can appear anywhere in the logical address space</p></li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw893wcbgnj30te0lqmyl.jpg" alt="image-20211109012256881" style="zoom:50%;" /></li><li><p>页式地址变换</p><ul><li><p>虚拟地址（逻辑地址、程序地址）以十六进制、八进制、二进制形式给出</p><ul><li><p>将虚地址转换为二进制数</p></li><li><p>分离出页号和位移量</p><ul><li><p>低位部分：位移量</p></li><li><p>高位部分：页号</p></li></ul></li><li><p>将<font color=red>位移量</font>直接复制到<font color=red>内存地址寄存器的低位部分</font></p></li><li><p>以页号查页表，得到对应页装入内存的块号，并将<font color=red>块号</font>转换为二进制数填入<font color=red>地址寄存器的高位部分</font>，从而形成内存地址</p></li></ul></li><li><p>虚拟地址以十进制给出</p><ul><li><p>页号 = int(虚地址/页大小)      <u>取整</u></p></li><li><p>位移量 = 虚地址 mod 页大小   <u>取余</u></p></li><li><p>以页号查页表，得到对应页装入内存的块号</p></li><li><p>内存地址 = 块号 * 页大小 + 位移量</p></li></ul></li></ul></li></ul><h3 id="7-Structure-of-the-Page-Table">7. Structure of the Page Table</h3><ul><li><p>问题引入：</p><ul><li>32位逻辑地址空间的页表规模？（假设页面大小为4KB（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>12</mn></msup><mi>B</mi></mrow><annotation encoding="application/x-tex">2^{12}B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> ）；页表项大小为4字节（4B）），则：<ul><li>一个进程地址空间有多少个页表项？<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi>M</mi><mi>B</mi><mo>=</mo><msup><mn>2</mn><mn>20</mn></msup><mo>=</mo><msup><mn>2</mn><mn>32</mn></msup><mi mathvariant="normal">/</mi><msup><mn>2</mn><mn>12</mn></msup></mrow><annotation encoding="application/x-tex">1MB=2^{20}=2^{32}/2^{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.05017em;">MB</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">20</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span></span></span></span></li><li>页表占地址空间大小为多少?<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mi>M</mi><mi>B</mi><mo>=</mo><msup><mn>2</mn><mn>22</mn></msup><mo>=</mo><msup><mn>2</mn><mn>20</mn></msup><mn>4</mn><mi>B</mi></mrow><annotation encoding="application/x-tex">4MB=2^{22}=2^{20}4B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.05017em;">MB</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">20</span></span></span></span></span></span></span></span></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li><li>页表需要占多少页（页表页）？<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1024</mn><mo>=</mo><msup><mn>2</mn><mn>22</mn></msup><mi mathvariant="normal">/</mi><msup><mn>2</mn><mn>12</mn></msup></mrow><annotation encoding="application/x-tex">1024=2^{22}/2^{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1024</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li>64位逻辑地址空间（页面大小为4K；页表项大小为8字节），则：<ul><li>页表规模：32,000TB = 264 /212 * 8B = 32000 * 240</li><li>页表在内存中若不连续存放，则需要引入页表的地址索引表<font color=red>页目录</font>（Page Directory）</li></ul></li></ul></li><li><p>Three Structures of the Page Table：</p><ul><li><p>Hierarchical Paging</p></li><li><p>Hashed Page Tables</p></li><li><p>Inverted Page Tables</p></li></ul></li><li><p>Hierarchical Page Tables</p><ul><li><p>Most modern computer systems support a large logical address space ( <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding="application/x-tex">2^{32} - 2^{64}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">64</span></span></span></span></span></span></span></span></span></span></span></span>)</p></li><li><p>The page table itself becomes excessively large.</p></li><li><p>Break up the logical address space into <font color=red>multiple page tables</font></p></li><li><p>A simple technique is a <font color=red>two-level page table</font></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw914gkxphj31060n0410.jpg" alt="image-20211109173215395" style="zoom:50%;" /><ul><li><p>A logical address (on 32-bit machine with 1K page size) is divided into:</p><ul><li><p>a page number consisting of 22 bits</p></li><li><p>a page offset consisting of 10 bits</p></li></ul></li><li><p>Since the page table is paged, the page number is further divided into:</p><ul><li><p>a 12-bit page number</p></li><li><p>a 10-bit page offset</p></li></ul></li><li><p>Thus, a logical address is as follows:</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw918ltj73j30ek072t8s.jpg" alt="image-20211109173614043" style="zoom:50%;" /></li><li><p>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">p_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is an index into the <font color=blue>outer page table</font>, and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">p_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is the <font color=blue>displacement</font> within the page of the outer page table</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw91cptmj2j30v20g00tq.jpg" alt="image-20211109174011057" style="zoom:50%;" /></li></ul></li><li><p>Three-level Paging Scheme</p><ul><li><p>On 64-bit machine:</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw91k3ss4dj30sa0cuabq.jpg" alt="image-20211109174715234" style="zoom:50%;" /></li><li><p>CORE I7 页表结构</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw91lkntiej30og03ujrg.jpg" alt="image-20211109174841941" style="zoom:50%;" /></li></ul></li></ul></li><li><p>Hashed Page Tables</p><ul><li><p>Common in address spaces &gt; 32 bits</p></li><li><p>The virtual page number is hashed into a page table</p><ul><li>This page table contains <font color=red>a chain of elements</font> hashing to the same location</li></ul></li><li><p>Virtual page numbers are compared in this chain searching for a match</p><ul><li>If a match is found, the corresponding physical frame is extracted</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw926q08cmj30u60hgdgp.jpg" alt="image-20211109180901932" style="zoom:50%;" /></li></ul></li><li><p>Inverted Page Table（倒置页表）</p><ul><li><p>地址转换</p><ul><li>从虚拟地址空间出发：虚拟地址–&gt; 查页表–&gt;得到页框号–&gt;形成物理地址</li><li>每个进程一张页表</li></ul></li><li><p>解决思路</p><ul><li>从物理地址空间出发，系统建立<font color=red>一张页表</font></li><li>页表项记录<font color=red>进程i</font>的某虚拟地址（<font color=red>虚页号</font>）与<font color=red>页框号</font>的映射关系</li></ul></li><li><p>One entry for each real page of memory</p></li><li><p>Entry consists of the virtual address of the page stored in that real memory location, with information about the process that owns that page</p><ul><li>PowerPC、UltraSPARC和IA-64等体系结构采用</li></ul></li><li><p>Decreases memory needed to store each page table, but increases time needed to search the table when a page reference occurs</p><ul><li>Use hash table to limit the search to one — or at most a few — page-table entries<ul><li>将虚拟地址的页号部分映射到一个散列值</li><li>散列值指向反转页表某项</li><li>每次虚拟地址引用需要两次内存读，一次用于读取哈希表条目，另一次用于页表</li></ul></li><li>反转页表大小与实际内存成固定比例，与进程个数无关</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwa372owwgj30sk0mggmz.jpg" alt="image-20211110152930069" style="zoom:50%;" /></li></ul></li></ul><h3 id="8-Segmentation">8. Segmentation</h3><ul><li><p>Memory-management scheme that supports user view of memory</p></li><li><p>A program is a collection of segments</p><ul><li>A segment is a logical unit such as：<ul><li>main program</li><li>procedure</li><li>function</li><li>method</li><li>object</li><li>local variables, global variables</li><li>common block</li><li>stack</li><li>symbol table</li><li>arrays</li></ul></li></ul></li><li><p>More Flexible Segmentation</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwa3bfjr03j30yk0h6q5f.jpg" alt="image-20211110153341085" style="zoom:50%;" /><ul><li><p>Logical View: multiple separate segments</p><ul><li><p>Typical: Code, Data, Stack</p></li><li><p>Others: memory sharing, etc</p></li></ul></li><li><p>Each segment is given region of contiguous memory</p><ul><li><p>Has a base and limit</p></li><li><p>Can reside anywhere in physical memory</p></li></ul></li></ul></li><li><p>Segmentation Architecture</p><ul><li><p>Logical address consists of a two tuple:</p><p><font color=blue> &lt;segment-number, offset&gt;</font></p></li><li><p><strong>Segment table</strong> – maps two-dimensional physical addresses; each table entry has:</p><ul><li><p><strong>base</strong> – contains the starting physical address where the segments reside in memory</p></li><li><p><strong>limit</strong> – specifies the length of the segment</p></li></ul></li><li><p><strong>Segment-table base register (STBR)</strong> points to the segment table’s location in memory</p></li><li><p><strong>Segment-table length register (STLR)</strong> indicates number of segments used by a program;</p><p>​          segment number <strong>s</strong> is legal if <strong>s</strong> &lt; <strong>STLR</strong></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwa3rt4gq9j30ru0jgwfa.jpg" alt="image-20211110154925357" style="zoom:50%;" /></li></ul></li><li><p>Segmentation Protection</p><ul><li><p>Protection</p><ul><li>With each entry in segment table associate:<ul><li>validation bit = 0 is illegal segment</li></ul></li><li>read/write/execute privileges</li></ul></li><li><p>Protection bits associated with segments; code sharing occurs at segment level</p></li></ul></li><li><p>Segmentation Sharing</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwa3v3g1dwj30wg0o0wgb.jpg" alt="image-20211110155234875" style="zoom:50%;" /></li></ul><h3 id="9-Summary">9.  Summary</h3><ul><li><p>分页分段对比</p><table><thead><tr><th></th><th>分页</th><th>分段</th></tr></thead><tbody><tr><td>目的</td><td>为了提高内存的利用率，实现非连续分配，解决<strong>外碎片</strong>问题</td><td>为了能更好地满足用户需求</td></tr><tr><td>页/段  单位划分</td><td>页是信息的<strong>物理单位</strong>，页的大小是<strong>固定</strong>的，由系统确定。将逻辑地址划分为页号和页内地址由机器硬件实现</td><td>段是信息的<strong>逻辑单位</strong>，它含有一组意义相对完整的信息，段的长度是<strong>不固定</strong>的，取决于用户所编写的程序，并由编译程序来划分</td></tr><tr><td>作业地址空间</td><td>单一的<strong>线性地址</strong>空间</td><td><strong>二维</strong>的，标识一个地址需给出段名和段内地址</td></tr><tr><td>内存分配</td><td>以页为单位离散分配，<strong>无外碎片</strong>，所以也无紧缩问题</td><td>以段为单位离散分配，类似可变分区，会产生许多分散的小空闲分区—<strong>外碎片</strong>，造成主存利用率低，需紧缩，但紧缩成本高</td></tr></tbody></table></li><li><p>段页式分配</p><ul><li><p>逻辑地址结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwa40vr1duj30y803maaj.jpg" alt="image-20211110155808890" style="zoom:50%;" /></li><li><p>基本原理：</p><ul><li><p>将整个主存划分为大小相等的物理块（页框，帧）</p></li><li><p>把用户程序按程序的逻辑关系分为若干个段，并为每个段赋予一个段名</p></li><li><p>把每个段划分为若干页，以页框为单位离散分配</p></li><li><p>逻辑地址结构由段号、段内页号和页内地址三部分组成</p></li></ul></li><li><p>为了实现从逻辑地址到物理地址的变换，系统中需同时配置<font color=red>段表和页表</font>。</p></li><li><p>由于将<font color=red>段中的页</font>进行离散地分配，段表中的内容不再是段的内存始址和段长，而是页表始址和页表长度</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwa49szbx5j30ye06w74s.jpg" alt="image-20211110160643266" style="zoom: 33%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1gwa4cs98w9j312e0m6n01.jpg" alt="image-20211110160934860" style="zoom:50%;" /></li></ul></li><li><p>基本内存管理方案总结</p></li></ul><table><thead><tr><th>固定分区</th><th>把可分配的内存空间分割成若干个连续区域，每一区域称为分区。每个分区的大小可以相同也可不同，<font color=red>分区大小固定不变，每个分区装一个且只能装一个进程</font></th></tr></thead><tbody><tr><td>可变分区</td><td>根据进程的需求，把可分配的内存空间分割出一个分区，分配给该进程</td></tr><tr><td>页式</td><td>把用户程序地址空间分为大小相等的部分，称为<font color=red>页</font>。内存空间按页大小划分为大小相同的区域，称为<font color=red>帧</font>（内存块，物理页面，页框）。<font color=red>以页为单位进行分配</font>，逻辑上相邻的页，物理上不一定相邻</td></tr><tr><td>段式</td><td>用户程序地址空间按进程自身的逻辑关系划分为若干段，内存空间被动态得划分为长度不相同的区域（<font color=red>可变分区</font>）。<font color=red>以段为单位分配内存</font>，每个段在内存中占据连续空间，各段之间可以不连续存放</td></tr><tr><td>段页式</td><td>用户程序地址空间：段式  内存空间：页式  分配单位：页</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Operating System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理学习笔记：存储器（续）</title>
      <link href="/2021/11/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%98%E5%82%A8%E5%99%A8%EF%BC%88%E7%BB%AD%EF%BC%89/"/>
      <url>/2021/11/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%98%E5%82%A8%E5%99%A8%EF%BC%88%E7%BB%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="3-相关联存储器">3. 相关联存储器</h2><h3 id="1-基本概念">1. 基本概念</h3><ul><li><font color="red">相联联存储器</font>（Associative Memory，AM）按照存储单元中存放的<font color=blue>全部或部分内容进行访问</font>，也称为<font color=red>按内容访问存储器</font>（Content Addressed Memory，CAM）。</li><li><font color=red>读操作</font>时，除了<font color=blue>可以按地址进行访问</font>外，还<font color=blue>可以按内容访问</font>，即将CPU给出的<font color=purple>关键字</font>（存储单元信息的全部或部分内容）和存储器中所有单元中的相应信息进行比较，定位到与关键字相匹配的存储单元后，将此单元中的所有信息读出。</li><li><font color=red>写操作</font>时，采用<font color=blue>按地址访问</font>的方式。</li></ul><h3 id="2-相联存储器的组成">2. 相联存储器的组成</h3><ul><li><p><font color=red>相联存储器</font>由存储体、检索寄存器、屏蔽寄存器、匹配寄存器、数据寄存器、比较电路和译码电路等组成。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzs3wwg2ej30vs0hi0vk.jpg" alt="image-20211101173013739" style="zoom:50%;" /></li></ul><h3 id="3-相联存储器的存储元">3. 相联存储器的存储元</h3><ul><li><p>相联存储器的存储元主要由一个<font color=red>D触发器</font>组成。</p></li><li><p>当存储元<font color=red>未被屏蔽（M=1）</font>时，检索位与存储位进行<font color=blue>同或操作</font>后经三态门<font color=blue>输出到P端</font>。当<font color=red>P=1</font>时表示检索位与存储位相同。</p></li><li><p>当<font color=red>存储元被屏蔽（M=0）</font>时，P端输出为<font color=blue>高阻</font>。</p></li><li><p><font color=red>字选线S</font>来自优先排队电路或地址译码器。<font color=blue>S=1</font>，该存储元数据经Q端输出到数据寄存器的对应位(或将寄存器对应位写入存储元)； <font color=blue>S=0</font>，不能读也不能写。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzs8aqyd6j30xy092q3f.jpg" alt="image-20211101173428411" style="zoom:50%;" /></li></ul><h3 id="4-相联存储器的存储矩阵">4. 相联存储器的存储矩阵</h3><ul><li><p><font color=blue>n×k</font> 位的相联存储矩阵</p></li><li><p><font color=red>M0~Mk-1</font> 来自<font color=blue>屏蔽寄存器</font>，<font color=red>D0~Dk-1</font>来自<font color=blue>检索寄存器</font>，  <font color=red>Q0~Qk-1</font>作为<font color=blue>数据寄存器</font>输入/输出，<font color=red>S0~Sn-1</font>来自<font color=blue>排队电路</font>。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzsanjkzrj30s00g8dgs.jpg" alt="image-20211101173644293" style="zoom:50%;" /><h3 id="5-相联存储器的优先排队电路">5. 相联存储器的优先排队电路</h3><ul><li><p>由于与检索字匹配的存储字可能有<font color = red>多个</font>，即<font color = red>匹配寄存器</font>中<font color = blue>多位‘1’</font>，因此，需要使用<font color = blue>优先排队电路</font>对匹配寄存器的输出进行排队。</p></li><li><p>一种方法：只<font color = blue>保留匹配寄存器中位置最靠前的‘1’</font>，后面的全部清0。</p></li><li><p>匹配标志位<font color = red>PF=1</font>，表示检索到匹配内容。</p></li><li><p>当屏蔽寄存器中<font color = red>屏蔽码的值为全‘0’时</font>，表示<font color = blue>检索寄存器被屏蔽</font>，输出信号<font color = blue>AE为低电平</font>，表示<font color = red>按地址访问</font>。</p></li></ul><h2 id="4-高速缓冲存储器Cache">4. 高速缓冲存储器Cache</h2><h3 id="1-Cache的工作原理">1. Cache的工作原理</h3><h4 id="1-基本概念-2">1. 基本概念</h4><ul><li><p>Cache的<font color=blue>存取速度快、容量小、位价格高</font>。</p></li><li><p>Cache位于<font color=blue>CPU与主存之间</font>，能高速地向CPU提供指令和数据（读写），以加快程序的执行速度。</p></li><li><p>Cache中保存的是<font color=red>主存内容的一个子集</font>。cache的命中率越高，CPU的访存速度越接近于cache的存取速度。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzsok2zrlj30xg0ci3z9.jpg" alt="image-20211101174116864" style="zoom:50%;" /></li><li><p><font color =red>基于程序运行的局部性原理</font>，cache和主存都<font color =blue>按块</font>进行逻辑组织，它们之间<font color =blue>以块为单位进行交换</font>。</p></li><li><p>一个块由<font color =blue>若干个字组成</font>，一般是<font color =red>定长的</font>，并且<font color =red>主存和cache块的大小相同</font>。</p></li></ul><h4 id="2-增加cache后CPU的访存流程">2. 增加cache后CPU的访存流程</h4><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzshra00dj30se0n4jsy.jpg" alt="image-20211101174330944" style="zoom:50%;" /><ul><li>CPU发出的<font color = red>主存地址</font><font color =blue>同时</font>送给了cache和主存。首先进行<font color = red>地址变换</font>，将主存地址变换成cache地址。同时，通过地址变换机制还能<font color =blue>判断出是否命中</font>。</li></ul><h4 id="3-评价Cache的性能指标">3. 评价Cache的性能指标</h4><ul><li><p>命中率：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzsr3b9dxj30j8026glk.jpg" alt="image-20211101175232303" style="zoom:33%;" /></li><li><p>失效率：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>H</mi></mrow><annotation encoding="application/x-tex">F = 1 - H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></span></p></li><li><p>平均访存时间：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>a</mi></msub><mo>=</mo><mi>H</mi><mo separator="true">⋅</mo><msub><mi>T</mi><mi>c</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>H</mi><mo stretchy="false">)</mo><mo separator="true">⋅</mo><msub><mi>T</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">T_a = H·T_c+(1-H)·T_m </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>加速比：（注意其值大于1）</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzsu6qr9kj30rm04yq34.jpg" alt="image-20211101175530692" style="zoom:33%;" /></li><li><p>访问效率：（注意其值小于1）</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzsv8rapnj30ts05iweq.jpg" alt="image-20211101175631302" style="zoom:33%;" /></li></ul><h3 id="2-cache的设计要素">2. cache的设计要素</h3><h4 id="1-地址的映射与变换">1. 地址的映射与变换</h4><ul><li><font color=red>地址映射机制</font>就是解决如何将<font color=blue>主存的地址空间</font>映射到<font color=blue>cache的地址空间</font></li><li>在执行程序时，应<font color=red>首先将主存地址变换成cache地址</font>，即执行地址变换。</li><li><font color=red>地址映射</font>和<font color=red>地址变换</font>是密切相关的两个过程，采用什么样的地址映射方法，就必然采用与这种映射方法相对应的地址变换方法。</li></ul><h4 id="2-主存与cache间的映射关系">2. 主存与cache间的映射关系</h4><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzx8ew7h2j30ne0iiaas.jpg" alt="image-20211101202734572" style="zoom:50%;" /><ul><li>主存与cache都分成若干<font color=red>块（ 行）</font></li><li>每块由若干字组成且大小相同</li><li>主存地址分为两个部分：块地址和块内地址</li><li>Cache的地址也分为块地址和块内地址两部分</li><li>主存和cache之间以块为单位进行调入、调出</li></ul><h4 id="3-主存与cache间的三种映射关系">3. 主存与cache间的三种映射关系</h4><ul><li><font color=red>全相联映射</font>：主存的每一块可映象到缓存的任一块中。</li><li><font color=red>直接映射</font>：主存的每一块只与一个缓存块有对应关系。</li><li><font color=red>组相联映射</font>：Cache先分成Q组，组再进一步分成R块。主存块与缓存组间采用直接映象，主存块在对应的缓存组内采用全相联映象。</li></ul><h4 id="4-全相联映射方式">4. 全相联映射方式</h4><p><font color=red>全相联地址映射</font>指主存中的每一块都可以映射到cache中的<font color=blue>任意块</font>。<font color=lightpurple>这种映射方法是最灵活的，也是cache利用率最高的一种方式，但同时也是成本最高的一种方式</font>。</p> <img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzxil0j4ij30ju0fk757.jpg" alt="image-20211101203721269" style="zoom:50%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzxjis43vj30y80gw75i.jpg" alt="image-20211101203814996" style="zoom:50%;" /> <h4 id="5-直接相联映射">5. 直接相联映射</h4><ul><li><p><font color=red>直接地址映射</font>指主存中的块<font color=blue>只能</font>映射到cache中<font color=bluegreen>某个固定的块</font>中。</p></li><li><p>主存和cache块的对应关系：  j = i mod 2c</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzxsdqgmgj30ju0kujsg.jpg" alt="image-20211101204645829" style="zoom:50%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzxsngjtbj30w20dk3zn.jpg" alt="image-20211101204701383" style="zoom:50%;" /></li><li><p><font color=red>主存地址</font>分为：区号（<em>t</em>位）、区内块号（<em>c</em>位）和块内地址（<em>b</em>位），其中，<em>m</em>= <em>t</em> + <em>c</em>。</p></li><li><p><font color=red>Cache的地址</font>分为：块号C和块内地址B</p></li><li><p>通常，用<font color=blue>区表</font>来保存主存块与cache块的映射关系</p></li></ul><h4 id="6-组相联映射">6. 组相联映射</h4><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzy44wi8wj30mu0loaba.jpg" alt="image-20211101205803974" style="zoom:50%;" /><ul><li><font color=red>组相联地址映射</font>主存和cache的块都先进行分组，并且主存和cache每组包含的块数相同 。</li><li>在地址映射时，<font color=red>组间</font>采用<font color=blue>直接相联映射</font>，<font color=red>组内</font>采用<font color=blue>全相联映射</font>。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzyeo4bxhj310s0cyq49.jpg" alt="image-20211101210811296" style="zoom:50%;" /><ul><li><font color=red>主存地址</font>分为：区号S，组号U，组内块号V’和块内地址B</li><li><font color=red>Cache的地址</font>分为：组号U，组内块号V和块内地址B</li><li>通常，用<font color=red>块表</font>来保存主存块与cache块的映射关系</li></ul><h3 id="3-替换算法">3. 替换算法</h3><ul><li><p><font color=red>随机算法（RAND）</font>：不考虑cache中各块的使用情况，<font color=blue>随机地</font>选择一个块作为替换对象。</p></li><li><p><font color=red>先进先出算法（FIFO）</font>：不考虑各块的使用情况，根据每块调入cache的时间，将<font color=blue>最先调入</font>cache的主存块替换出去。</p></li><li><p><font color=red>近期最少使用算法（LRU）</font>：以cache中每块的历史使用情况为依据，将<font color=blue>近期最少使用</font>的块替换出去。</p></li><li><p><font color=red>最不经常使用算法（LFU）</font>：以cache中每块的历史使用情况为依据，将<font color=blue>访问次数最少</font>的块替换出去。</p></li></ul><h3 id="4-Cache的写操作及一致性">4. Cache的写操作及一致性</h3><ul><li><p><font color=red>写直达法（write through）</font>：CPU在执行写操作时，将数据<font color=blue>同时</font>写入主存和cache 。</p></li><li><p><font color=red>写回法（write back）</font> ：</p><ul><li>CPU在执行写操作时，数据<font color=blue>只写入cache</font>。只有当cache中的某个字块需要替换出cache时，才把修改过的cache块写回主存。</li><li>写回法又可细分为以下两种方法：<ul><li><font color=blue>简单写回法</font>：不管字块是否被更新，都进行写回操作。</li><li><font color=blue>采用标志位写回法</font>：只在块被更新过时，才进行写回操作。</li></ul></li></ul></li></ul><h3 id="5-Cache的写操作的实现">5. Cache的写操作的实现</h3><ul><li><font color=red>若命中</font>：可直接对cache块进行写操作，然后根据所采用的更新主存的算法，决定何时对主存块的内容进行更新。</li><li><font color=red>若不命中</font>：<ul><li>无论是写回法还是写直达法都存在“<font color=blue>写时是否取</font>”的问题。主要有以下两种方法：<ul><li><font color=blue>不按写分配法</font>：当cache写不命中时，只执行对主存的写入操作。</li><li><font color=blue>按写分配法</font>：当cache写不命中时，首先执行写主存操作，然后将该主存中的块从主存调入cache。</li></ul></li><li><font color=red>写回法</font>一般采用<font color=blue>按写分配法</font>，<font color=red>写直达法</font>一般采用<font color=blue>不按写分配法</font>。</li></ul></li></ul><h3 id="6-多级cache">6. 多级cache</h3><ul><li><p><font color=red>片内和片外cache</font></p><ul><li>随着大规模集成电路技术的发展，cache通常被集成在CPU芯片中，称为<font color=blue>片内cache</font>。</li><li>由于成本和制造工艺等的限制，片内cache的容量通常不会很大。为了增加系统中cache的容量，通常在CPU芯片外再增加一个容量较大的cache，<font color=blue>称为片外cache</font>。</li></ul></li><li><p><font color=red>数据和指令cache </font></p><ul><li>根据程序的局部性原理，<font color=red>指令</font>存放呈现较强的<font color=blue>局部性特性</font>，而<font color=red>数据</font>的访问则呈现较强的<font color=blue>随机性</font>。</li><li>为提高cache的命中率，很多计算机系统在cache设计时采用了数据和指令相分离的策略，即同时设置<font color=red>指令cache和数据cache </font>。</li></ul></li></ul><h2 id="5-辅助存储器">5. 辅助存储器</h2><h3 id="1-概述">1. 概述</h3><p>大多采用<font color=blue>磁表面存储器</font>，具有非电易失性、低速大容量、信息沿磁道分布等特点，常见的有磁盘、磁带等。</p><h4 id="1-磁表面存储器工作原理">1. 磁表面存储器工作原理</h4><ul><li><p><font color=red>磁表面存储器的存储介质</font></p><ul><li>某种<font color=blue>涂有磁性材料</font>的载体，载体形状各异。例如，<font color=red>磁盘</font>采用圆盘状载体，<font color=red>磁带</font>则采用带状载体。</li><li>通过<font color=red>磁头</font>进行数据读写。<font color=red>磁头</font>由一个带间隙的磁环绕上线圈组成，间隙中加磁绝缘物质，磁头能实现<font color=blue>电磁信号的转换</font>。按照读写时磁头是否与磁记录介质接触，可将磁头分为：<ul><li>接触式磁头</li><li>浮动式磁头</li></ul></li></ul></li><li><p><font color=red>浮动式磁头工作原理</font></p><ul><li><p><font color=blue>磁头</font>：<font color=red>软磁材料制成</font>，导磁率高，饱和磁感应强度大，矫顽力小，<font color=red>剩余磁感应强度小</font>。</p></li><li><p><font color=blue>磁记录介质</font>：<font color=red>硬磁材料</font>；记录密度高，记录信息时间长，输出信号幅度大，噪声低；表面组织紧密、光滑、无麻点、薄厚均匀；温度、湿度影响小。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzznl184wj30ns0ieq51.jpg" alt="image-20211101215121304" style="zoom:50%;" /></li></ul></li><li><p><font color=red>1个二进制位的写入过程</font></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzzoi3hhyj30xk0fyjtl.jpg" alt="image-20211101215214508" style="zoom:50%;" /></li><li><p><font color=red>1串二进制位写入过程</font></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzzpb61raj30xo0dyt9x.jpg" alt="image-20211101215301087" style="zoom:50%;" /></li><li><p><font color=red>读出过程 </font></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzzqiuhqmj30yk0i60v0.jpg" alt="image-20211101215410200" style="zoom:50%;" /></li></ul><h4 id="2-font-color-red-磁表面存储器的记录方式-font">2. <font color=red>磁表面存储器的记录方式</font></h4><ul><li>磁记录方式是指磁表面存储器在写入一串二进制信息时，<font color=red>磁头线圈所通电脉冲串的编码方法</font>，不同的电脉冲编码将导致磁层介质中不同的磁化翻转序列。</li><li>不同的编码方式其性能好坏不同。好的编码方法应该有：<font color=red>更高的编码效率，更高的自同步能力，更高的读写可靠性等</font>。</li></ul><h5 id="1-归零制（RZ）">1. 归零制（RZ）</h5><ul><li><p><font color=red>磁写入前</font>，磁表面处于<font color=blue>未磁化</font>状态；</p></li><li><p><font color=red>写1</font>：磁头线圈通<font color=blue>正</font>脉冲；</p></li><li><p><font color=red>写0</font>：磁头线圈通<font color=blue>负</font>脉冲；</p></li><li><p><font color=red>每写一位</font>，<font color=blue>电流回0</font>一次。</p></li><li><p><font color=red>特点</font>：各个位单元间有未磁化区，影响记录密度且易叠加干扰， 不常用。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvzzz9mndnj30wo07mq3i.jpg" alt="image-20211101220235293" style="zoom:50%;" /><h5 id="2-不归零制（NRZ）">2. 不归零制（NRZ）</h5><ul><li><p><font color=red>写1</font>：磁头线圈通<font color=blue>正</font>脉冲；</p></li><li><p><font color=red>写0</font>：磁头线圈通<font color=blue>负</font>脉冲；</p></li><li><p>特点：</p><ul><li>写入代码变化时，电流才反向，也称<font color=red>“见变就翻”</font>；</li><li>线圈中始终有电流，抗干扰能力比RZ制强；</li><li>无多余磁变化，有利于提高记录密度；</li><li>当代码长期不变化时，<font color=red>电流近似直流</font>。</li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw003soea4j30ws07m3yw.jpg" alt="image-20211101220656413" style="zoom:50%;" /><h5 id="3-不归零1制（NRZ1）">3. 不归零1制（NRZ1）</h5><ul><li><p><font color=red>写1</font>：<font color=red>电流反向</font>一次；</p></li><li><p><font color=red>写0</font>：<font color=red>电流方向</font>不变</p></li><li><p><font color=red>特点</font>：</p><ul><li>每写一次1，电流变化一次，故也称<font color=red>“见 1 就翻”</font>；</li><li>可靠性比NRZ高。</li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw005zu6jpj30wm07m0t3.jpg" alt="image-20211101220902840" style="zoom:50%;" /><h5 id="4-调相制（PM）">4. 调相制（PM）</h5><ul><li><p><font color=red>写1</font>：在位周期的中心点（1/2T）<font color=red>电流由负变正</font>；</p></li><li><p><font color=red>写0</font>：在位周期的中心点（1/2T）<font color=red>电流由正变负</font>；</p></li><li><p><font color=red>连续写1（0）</font>：<font color=red>位周期交界处</font>电流翻转一次；</p></li><li><p><font color=red>特点</font>：</p><ul><li>可靠性高，出错只限于本位；</li><li>写入电流无直流分量，抗干扰能力强，<font color=red>对读写放大器频带要求低</font>；</li><li>常用于磁带机。</li></ul></li><li><p>调相制（PM）写入波形：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw00acb7rtj31320nygoe.jpg" alt="image-20211101221313265" style="zoom:50%;" /></li></ul><h5 id="5-调频制（FM）">5. 调频制（FM）</h5><ul><li><p>在每个位周期的交界处，<font color=red>电流反转一次</font>；</p></li><li><p><font color=red>写1</font>：在位周期的中心点（1/2T）<font color=red>电流反转一次（正变负，或负变正）</font>；</p></li><li><p><font color=red>写0</font>：在位周期的中心点（1/2T）<font color=red>电流不变化</font>；</p></li><li><p>特点：</p><ul><li>写1电流频率是写0电流频率的2倍，又称<font color=red>“倍频制”</font>；</li><li>其它特点与PM制类似；</li><li>常用于单密度磁盘机。</li></ul></li><li><p>调频制（FM）写入波形：</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gw00lahikkj311e0oqdj5.jpg" alt="image-20211101222345152" style="zoom:50%;" /><h5 id="6-改进调频制（MFM）">6. 改进调频制（MFM）</h5><ul><li><p>写1、写0<font color=red>规则同FM，但位周期交界处电流不变化</font>;</p></li><li><p>当连续写0时，为避免出现直流，<font color=red>两个0周期交界处电流变化一次</font>。</p></li><li><p>特点：</p><ul><li><font color=blue>记录密度可比FM提高一倍</font>；</li><li>常用于双密度磁盘机。</li></ul></li><li><p>改进调频制（MFM）写入波形</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理学习笔记：存储器</title>
      <link href="/2021/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%98%E5%82%A8%E5%99%A8/"/>
      <url>/2021/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%98%E5%82%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-存储器概述">1.  存储器概述</h2><h3 id="1-存储器的分类">1. 存储器的分类</h3><ol><li>按在计算机系统中的作用分类：<ol><li>内部存储器（ 简称内存）：位于主机内，包括cache和主存，可直接与CPU交换信息。</li><li>外部存储器（简称外存或辅存）：位于主机外，与主机的连接和管理方式类似于I/O设备。</li><li>控制存储器（ 简称控存）：位于CPU内，是控制单元CU的核心，用于存储微程序。</li></ol></li><li>按存储介质分类：<ol><li>半导体存储器： 用半导体器件来存取数据， 体积小，功耗低， 速度快，常用作内存。</li><li>磁表面存储器： 用磁层来存取信息，常根据磁层依附的基体形状来为磁表面存储器取名。例：磁盘、磁带、磁鼓等。 非电易失， 容量大，位价低， 速度慢。常用作外存。</li><li>光盘存储器： 用磁光材料作为存储介质，用光学原理进行读/写，基体为塑料圆盘，除读/写机制外，外观、工作原理与磁盘存储器类似。 非电易<br>失， 容量大，耐用性好，可靠性高， 互换性强，慢。常用作离线存储器。</li></ol></li><li>按存取方式分类：<ol><li>随机存取存储器（Random Access Memory， RAM）：可读可写，任一存储单元的内容都可随机存取，且存取时间与存储单元的物理位置无关。广泛用于主存。目前广泛采用半导体芯片实现。</li><li>只读存储器（Read Only Memory， ROM）：正常工作时， 只读不写，写入操作需通过特殊手段完成，其它特点同RAM。 非电易失，可靠性高，常用于主存的系统程序区和各种固件。</li><li>顺序存取存储器（Sequential Access Memory， SAM）：存取时间与信息所在物理位置有关，读/写操作时只能顺序地对数据所在物理地址进行查找。平均存取速度较慢，典型设备为磁带。</li><li>直接存取存储器——Direct Access Memory（DAM）：存取特性及速度介于RAM和SAM之间，也称为半顺序存取存储器，典型设备如磁盘存储器等读/写操作时，其寻址操作分两步进行：<ol><li>快速定位到信息所在位置的一个小区域，这一操作可看<br>成是随机寻址或直接寻址过程。</li><li>在此小区域内通过顺序寻址对信息的确切地址进行定位。</li></ol></li><li>相联存储器——Associative Memory（AM）：按照存储单元中存放的全部或部分内容进行访问的存储器，也称为按内容存取存储器（CAM——Content Addressed Memory），主要应用于快速检索的场合。</li></ol></li><li>半导体存储器的分类：<ol><li>按制造工艺分类：<ol><li>双极型存储器：速度高，功耗大， 集成度低， 容量小，价格贵。适于作高速小容量存储器。</li><li>MOS型存储器：与双极型比速度低，功耗小，集成度高，容量大，价格低。</li></ol></li><li>按信息的可保存性分类：<ol><li>电易失型半导体存储器：断电后数据会丢失。</li><li>非电易失型半导体存储器：断电后数据不会丢失。</li></ol></li></ol></li><li>RAM存储器的分类：<ol><li>静态随机存取存储器（Static Random Access Memory， SRAM）：速度快， 信息稳定，不需要刷新电路，使用方便灵活。 集成度低、功耗较大、成本也高。常用做小容量主存及高速<br>缓冲存储器Cache。</li><li>动态随机存取存储器（Dynamic Random Access Memory， DRAM）：集成度高， 功耗低，价格便宜，但必须定时进行刷新。常用作大容量主存储器。</li><li>非易失性随机存取存储器（ Non-Volatile Random Access Memory ， NVRAM）：由SRAM和EEPROM共同构成，正常工作时与SRAM功能相同，但在掉电的瞬间，它可以立即自动把信息保存到EEPROM中，多用于系统中重要信息的掉电保护。</li></ol></li></ol><h3 id="2-存储系统的层次结构">2. 存储系统的层次结构</h3><ul><li><p>存储器的重要性：在存储程序计算机中，存储器处于一个重要的核心地位，随着软、硬件技术的飞速发展，其重要性越来越突出。因此，对存储器的性能要求也越来越高。</p></li><li><p>系统对存储器的要求：尽可能快的读写速度， 尽可能大的存储容量， 尽可能低的成本费用。</p></li><li><p>实际情况：速度、容量、价格三种指标是相互矛盾的，没有任何一种存储器能满足上述要求。</p></li><li><p>为了解决容量、 速度和价格三者之间的矛盾，通常把各种不同存储容量、不同存取速度和位价格的存储器，按一定的结构组织起来，形成一个多层次的存储系统。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5lpakz0sj60k205yt8y02.jpg" alt="image-20211006150125328" style="zoom:50%;" /></li><li><p>这些存储器越靠近CPU速度越快、容量越小、位价格越高。存储系统管理的目标：这n个存储器对CPU呈现一个逻辑整体，整个存储系统在速度上接近M1， 容量上接近Mn， 位价格上也接近Mn。</p></li><li><p>层次间应满足的原则：</p><ul><li>包含性原则：处在内层的信息一定被包含在其外层的存储器中，反之则不成立。即内层存储器中的全部信息，是其相邻外层存储器中一部分信息的副本。</li><li>一致性原则：在不同层次存储器中的同一个信息应保持相同的值。</li></ul></li><li><p>现代存储系统的层次结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5pudd5irj60eu0g0gn202.jpg" alt="image-20211006151144139" style="zoom:50%;" /><ul><li>通用寄存器组：在CPU内部</li><li>主存：存储系统核心部件</li><li>高速缓冲存储器cache：平滑主存与CPU之间的速度差异</li><li>虚拟存储器（联机辅助存储器）：提高存储器的容量</li><li>离线辅助存储器：备份</li></ul></li><li><p>存储系统的工作主要体现在两个层间：</p><ul><li>Cache—主存层间（硬件实现，对所有程序员透明）：<ul><li>计算机在运行程序访存时，有一段时间内集中访问一小片区域的倾向，即具有“程序运行的局部性”；<ul><li>指令顺序执行比转移执行的可能性大 (大约 5:1 )；</li><li>最近被访问过的程序和数据很可能再次被访问；</li><li>这些被访问的程序和数据往往集中在一小片存储区。</li></ul></li><li>运行程序时，通过合理地调度将当前使用最多的一小段程序和数据放在cache中，使 CPU大部分时间访问 cache，只有个别的指令或数据从cache中读不到时， 才访问主存；</li><li>整体运行效果上，CPU访存速度接近于cache速度，寻址空间仍为主存空间，位价却接近于主存。</li></ul></li><li>主存—辅存层间：<ul><li>为了更好地对主存、辅存统一调度，目前广泛采用虚拟存储技术， 即将主存与辅存的一部份通过软硬结合的技术组成虚拟存储器。</li><li>程序员可使用比主存实际空间大得多的虚拟地址空间编程，当程序运行时， 再由软、硬件自动完成虚拟地址空间与主存实际物理空间的转换。这个转换操作对应用程序员透明。</li><li>从应用程序员的角度看， 所使用的存储器容量和位价接近于辅存，而速度接近于主存。</li></ul></li></ul></li><li><p>多层存储系统需要解决的问题：</p><ul><li>外层存储器中的哪些信息（指令和数据）的副本需要保存在内层存储器？放在内层存储器的位置？即地址映射。</li><li>如何保证不同层次存储器中存放数据的一致性？</li><li>CPU访存时给出的是主存单元的地址，这个地址如何转换为在不同层次存储器中的地址？即地址变换问题。</li><li>当某层存储器已经存满信息，又有新信息要装入时，应将哪些信息替换出去？即替换策略问题。</li></ul></li></ul><h2 id="2-主存储器">2. 主存储器</h2><h3 id="1-主存储器的基本组成">1. 主存储器的基本组成</h3><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5pujsvekj60l20g4gnj02.jpg" alt="image-20211006153024014" style="zoom:50%;" /><ul><li><p>主存储器的读写过程：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5mm194trj60cu0h2jsf02.jpg" alt="image-20211006153304609" style="zoom:50%;" /><ul><li>读过程：<ul><li>CPU首先在地址总线上给出要访问的存储单元的地址</li><li>主存的寻址系统对该地址进行译码，并通过驱动器选中特定的存储单元</li><li>CPU在控制总线上发出“读”指令</li><li>主存的读/写电路将存储单元中存放的数据发到数据总线上，并通过数据总线传给CPU</li></ul></li><li>写过程<ul><li>CPU首先在地址总线上给出要访问的存储单元的地址</li><li>主存的寻址系统对该地址进行译码，并通过驱动器选中特定的存储单元</li><li>CPU在控制总线上发出“写”指令，这样通过读写电路可以将数据总线上的数据写入特定的存储单元中</li></ul></li></ul></li><li><p>主存储器与CPU的连接：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5ndwyu5sj60g00bwq3q02.jpg" alt="image-20211006155740298" style="zoom:50%;" /><ul><li>存储器地址寄存器（ MAR）：用来暂存CPU正在访问的存储单元的地</li><li>存储器数据寄存器（MDR）：用来暂存CPU和主存间交互的数据</li></ul></li><li><p>半导体芯片内部的基本结构：</p><p>与主存框图相比，除MAR、 MDR外，其它部分基本一样。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5ndudnd6j60ss0cuwfm02.jpg" alt="image-20211006155949732" style="zoom:50%;" /></li><li><p>半导体芯片的地址译码方式：</p><ul><li><p>线选法：（单译码结构）地址译码后直接选中一个存储单元的所有位。</p><ul><li><p>特点： N根译码线需N套驱动器，译码结构简单、速度快，但器材用量大，当容量较大时，导致成本太高，仅适合于高速小容量存储器。<br>例： n位地址，采用线选法译码，需：地址译码线数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>根 — <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>套驱动器；当 n = 16位时，需64K根译码线，64K套驱动器。</p></li><li><p>示意图：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5nkv2odvj60oy0femz002.jpg" alt="image-20211006160632978" style="zoom:50%;" /></li></ul></li><li><p>重合法：（双译码结构）将地址分成行、列两组（x， y），分别用两套译码器译码，行、列译码的重合点即为所选存储元。</p><ul><li><p>特点： 与线选法相比大大减少了译码输出线根数，则器材用量也大大减少，有效地降低了存储器的成本，得到了广泛采用。<br>例： n位地址，采用重合法译码，需：地址译码线数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><msup><mn>2</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{n/2} +2^{n/2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span></span></span></span>根<br>当 n = 16位时，重合法需 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>+</mo><msup><mn>2</mn><mn>8</mn></msup><mo>=</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">2^8 + 2^8 = 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">512</span></span></span></span>根译码线， 512套驱动器。</p></li><li><p>示意图：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5pupvd3vj60r80gqjta02.jpg" alt="image-20211006161304755" style="zoom:50%;" /></li></ul></li></ul></li></ul><h3 id="2-主存的性能指标">2. 主存的性能指标</h3><ul><li><p>存储容量 = 存储单元个数 × 存储字长（按字）= 字节数（按字节编址）<br>某机可达存储容量上限由地址总线位数界定。</p></li><li><p>存取速度</p><ul><li>存取时间（Memory Access Time）：指启动一次存储器操作到操作完成所需时间。</li><li>存取周期（Memory Cycle Time）：指存储器连续两次独立操作所需最小时间间隔。</li><li>通常， 存取周期 &gt; 存取时间；即存取周期 = 存取时间 + 恢复时间</li></ul></li><li><p>存储器带宽：指单位时间内存储器存取的信息量，单位为字／秒、字节／秒或位／秒。</p><p>此指标决定了一台计算机可以获得的最快信息传输速度。<br>存储器带宽 = 存取周期的倒数</p></li></ul><h3 id="3-SRAM存储器">3. SRAM存储器</h3><ul><li><p>存储元结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5nyyrgolj60sg0fedi002.jpg" alt="image-20211006162001158" style="zoom:50%;" /><ul><li><p>信息保持：未访问时，行、列地址选择线上无信号（或者仅其一有信号）， T5～T8断开， 存储元与外界隔离，保持现存状态不变（0或1）</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5o2yczowj60j80de0tj02.jpg" alt="image-20211006162355263" style="zoom:50%;" /></li><li><p>信息读出：行、列地址选择信号有效（高）， T5~T8导通，存储元所<br>存信息经T6、位线A、 T8、读放大器输出（0低1高）。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5puu1nf3j60ig0dcjsh02.jpg" alt="image-20211006162523238" style="zoom:50%;" /></li><li><p>信息写入：行、列地址选择信号有效（高）， T5~T8导通，写入信息经DIN、写放大器、 T7/T8、位线、 T5/T6到达A’/A点，迫使T1/T2状态按输入信息变化。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5o5w3dzsj60ia0cu0u002.jpg" alt="image-20211006162641865" style="zoom:50%;" /></li></ul></li></ul><h3 id="4-DRAM存储器">4. DRAM存储器</h3><ul><li><p>两种存储元结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5puy4hm4j60re0b2aar02.jpg" alt="image-20211006162844473" style="zoom:50%;" /></li><li><p>单管DRAM存储信息的原理：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5pv0zffaj60no0eu75702.jpg" alt="image-20211006162940426" style="zoom:50%;" /></li><li><p>单管DRAM存储元的写“1”：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5o9q6rjvj60h409kglv02.jpg" alt="image-20211006163023549" style="zoom:50%;" /><p>当字线来高电平后， T导通； 使位线为高电平。若CS 上无电荷，则 CS 通过 T 充电；把 1 信号写入了电容 CS 中。若CS 上有电荷，则 CS 无充放电动作，<br>保持原记忆的 1 信号不变</p></li><li><p>单管DRAM存储元的写“0”：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5ob4rrf1j60i409g3yr02.jpg" alt="image-20211006163142465" style="zoom:50%;" /><p>当字线来高电平后，T导通；使位线为低电平，若CS 上有电荷，则 CS 通过T放电；把 0 信号写入了电容 CS 中。若CS 上无电荷，则 CS 无放电动作，保持原记忆的 0 信号不变。</p></li><li><p>单管DRAM存储元的读</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5ofyxey3j60hg0akq3602.jpg" alt="image-20211006163622381" style="zoom:50%;" /><p>读操作： 当字线加高电平后， T导通；<br>① 若 CS 上无电荷，则位线上无电流，读出为0 ；<br>② 若 CS 上有电荷，则会放电，位线上有电流， 接在位线上的读出放大器会感知这种变化，读出为1。</p></li><li><p>DRAM的再生</p><ul><li>再生： 读放大器同时又是再生放大器，利用双稳态结构，在读出过程中建立起稳态，然后该稳态再自动写回存储元。</li><li>保持： 当存储元未选中时， CS电容与外界隔离，功耗近似为0，保持原电荷状态不变。</li><li>破坏性读出： 读操作后，被读单元的内容一定被清为零，必须把刚读出的内容立即写回去，通常称其为再生。它影响存储器的工作频率，在再生结束前不能开始下一次读。</li></ul></li><li><p>DRAM的定期刷新</p><p>在不进行读/写操作时， DRAM 存储器的各单元虽然处于断路状态，但由于漏电的存在，保存在电容CS 上的电荷会慢慢地泄漏掉，为此必须定时予以补充，通常称其为刷新操作。刷新最大时间间隔一般为2 ~ 8ms。</p><p>常用的刷新方式：（1）集中式刷新（2）分散式刷新（3）异步式刷新</p><ul><li><p>集中式刷新</p><p>在最大刷新时间间隔内， 集中安排一段时间对芯片内全部存储元逐行刷新一遍， 刷新期间停止内存正常读/写操作。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5p426uroj60r807waav02.jpg" alt="image-20211006165935601" style="zoom:50%;" /></li><li><p>分散式刷新</p><p>每一个主存读/写周期后，紧接着一个刷新周期，对存储矩阵中的一行进行刷新。各行轮流进行刷新。仍以1K×1芯片为例，时间分配图如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5pvd9a5jj60ra08wwfc02.jpg" alt="image-20211006170036644" style="zoom:50%;" /></li><li><p>异步式刷新</p><p>在最大刷新时间间隔内， 对芯片内的全部存储元逐行轮流刷新一遍。刷新周期平均分散在最大刷新间隔中。时间分配图如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gv5pvg02bjj60rc08agmo02.jpg" alt="image-20211006170214600" style="zoom:50%;" /></li></ul><p>三种刷新方式比较：</p><ul><li>集中式刷新： 正常工作期间DRAM可达全效率，但刷新期间CPU不能访存（上例中为16µs）， 形成访存“死时间”。</li><li>分散式刷新： 消除了访存死时间，但使CPU访存周期延长一倍（上例中为1µs）。另外， 存在多余的刷新操作（上例中2ms时间中平均每行多刷了61.5次）。</li><li>异步式刷新： 结合集中、分散式的优点， 既克服了死时间，又没有多余的刷新操作， DRAM工作效率达到最高，是一种理想的刷新方式，得到广泛应用。但这种方式控制较复杂，需要较多的存储器外围电路支持（刷新地址计数器、刷新定时器、访存仲裁逻辑等）。</li></ul></li><li><p>DRAM存储器结构特点</p><ul><li><p>由于DRAM芯片容量较大， 导致地址引脚数大幅度增加，造成制作困难。 为此将地址分为行、列地址两部分，分时使用同一组地址引脚输入（输入时间分别由 RAS、 CAS 信号控制）， 因此DRAM芯片地址引脚数将减少一半。</p><p>这同样意味着： DRAM芯片每增加一根地址引脚，相当于行、列地址各增加一位（共增加了两位地址），将允许片容量扩大4倍。</p></li><li><p>为节省引脚， DRAM芯片通常无 CS 引脚，此时片选功能由 RAS 引脚兼任（即 RAS 信号与片选译码信号复用）。</p></li></ul></li></ul><h3 id="5-新型DRAM存储器">5. 新型DRAM存储器</h3><ul><li>FPM DRAM<ul><li>FAST PAGE MODE DRAM，快速页面模式DRAM</li></ul></li><li>EDO DRAM<ul><li>Extended Data Out DRAM，扩展数据输出DRAM</li></ul></li><li>SDRAM<ul><li>Synchronous DRAM，同步DRAM</li><li>DDR SDRAM（Double Data Rate SDRAM，双数据<br>传输率同步DRAM，简称为DDR）</li><li>DDR2（Double Data Rate 2）</li><li>DDR3（Double Data Rate 3）</li><li>DDR4（Double Data Rate 4）</li></ul></li></ul><h3 id="6-只读存储器和闪速存储器">6. 只读存储器和闪速存储器</h3><ol><li><p>只读存储器</p><ol><li>MROM，掩膜式ROM</li><li>PROM，可编程ROM</li><li>EPROM，擦除可编程ROM</li><li>EEPROM，电擦除可编程ROM</li></ol></li><li><p>闪存存储器</p><ol><li>结构：与EEPROM类似，但浮栅的绝缘层更薄。因此，操作速度更快，但耐损耗性稍差。</li><li>特点：擦除和写入速度快。成本低、容量大、功耗低、可在联机状态下进行电擦除和改写。被广泛应用于U盘、存储卡等移动存储设备中。</li></ol></li><li><p>半导体存储器的典型应用</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdp9ghum2j60ts0h877602.jpg" alt="image-20211013150915801" style="zoom:67%;" /></li></ol><h3 id="7-存储容量扩展及与CPU连接">7. 存储容量扩展及与CPU连接</h3><ol><li><p>存储器容量扩展技术：</p><ol><li><p>位扩展：</p><ol><li><p>特点：总字数=片字数</p></li><li><p>适用场合： 在设计存储器时，所用芯片字数够，位数不够，需位向多片组成。</p></li><li><p>芯片用量：片数 = 总容量/片容量 =（总字数 *总字长）/（片字数 *片字长）= 总字长 / 片字长</p></li><li><p>芯片排列：为清楚起见，一般采用平面构图。既芯片沿行向、列向排列成方阵，无重叠部分。位扩展时，芯片按水平方向一维排列。</p></li><li><p>片间连线：以SRAM为例，需要对四种引脚线进行连接。位扩展时，Ai（地址）、WE（读/写控制）、CS（片选控制）线同名端并连；Di（数据）线各片按位引出。</p></li><li><p>连线图：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdpf73uhoj60xg0g8n0702.jpg" alt="image-20211013151452004" style="zoom:67%;" /></li></ol></li><li><p>字扩展：</p><ol><li><p>特点：总字长=片字长</p></li><li><p>适用场合：在设计存储器时，所用芯片位数够，字数不够，需字向多片组成。</p></li><li><p>芯片用量：片数 = 总容量 / 片容量 = 总字数 / 片字数</p></li><li><p>芯片排列：平面构图，无重叠部分。字扩展时，芯片按水平（垂直）方向一维排列。</p></li><li><p>片间连线：以SRAM为例，对四种引脚线进行连接。字扩展时，WE（读/写控制线）、 Di（数据）线同名端并连；</p><ol><li>Ai（地址）线分两部分：<ul><li>低位地址部分与各芯片同名端并连；</li><li>设片选地址译码器；</li><li>高位地址部分接片选地址译码器输入端；</li></ul></li><li>片间连线CS（片选控制）线：各片的片选线分别接片选地址译码器的各输出端。</li></ol></li><li><p>连线图</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdpm09br9j60x60f6acy02.jpg" alt="image-20211013152115944" style="zoom:67%;" /></li></ol></li><li><p>字位扩展</p><ol><li>适用场合：在设计存储器时，所用芯片字、位数都不够，需字、位向同时多片组成。</li><li>芯片用量:片数 = 总容量 / 片容量</li><li>芯片排列：平面构图，无重叠部分。字、位扩展时，芯片为二维矩阵排列。</li></ol></li></ol></li><li><p>DRAM存储容量扩展</p><ol><li><p>DRAM存储器的字、位扩展基本思想与SRAM一样，但地址线和片选信号的连接需要作特殊处理。</p><ol><li>Ai（地址）线需分行、列两组经地址多路选择器<br>分时送到各芯片地址端；</li><li>为节省刷新时间，片选译码器输入还需加刷新定<br>时信号（REF），以便在刷新时，强制使译码输<br>出全部有效（即同时对所有芯片内部存储矩阵的<br>同一行进行刷新）；</li><li>片选译码器输入需加 RAS信号，以使片选译码<br>输出的时间与 RAS一致；</li><li>采用唯 RAS有效刷新时，CAS可简单地按片并<br>联。</li></ol></li><li><p>例：用 1K×4 DRAM芯片组成4K×16位存储器，设芯片内部为64×64存储矩阵。</p><ul><li><p>解：片数 = 4K×16 / 1K×4 = 4×4 = 16片</p></li><li><p>注：该芯片内部为64×64存储矩阵，意味着行、列址位数不相等，即行地址6位，列地址4位。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdpwjwihvj60ys0jgq8s02.jpg" alt="image-20211013153132975" style="zoom:67%;" /></li></ul></li></ol></li><li><p>ROM容量扩展：</p><ol><li><p>ROM的逻辑引脚大部分和SRAM一样，只是少一根-WE引脚，因此扩展方法也基本和SRAM一样，只要少连一根线即可，很容易与SRAM一起组成主存储器。</p></li><li><p>例：用 1K×4 ROM芯片组成 4K×16位存储器</p><ul><li><p>解：片数 = 4K×16 / 1K×4 = 4×4 = 16片</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdpyajz5xj60to0jidjz02.jpg" alt="image-20211013153312981" style="zoom:67%;" /></li></ul></li></ol></li><li><p>存储器与CPU连接</p><ol><li><p>SRAM连接方法：</p><ul><li>地址线：CPU通过地址总线向存储器发送地址，理论上地址总线的低位可直接与各存储芯片的地址引脚相连，高位与片选译码器输入端相连。</li><li>数据线：CPU通过数据总线与存储器交换数据，因此存储器的数据引出线与数据总线按位连通即可；</li><li>读/写控制线：CPU通过控制总线中的相应信号线向存储器发读/写令，则存储器的 WE线与控制总线中的读/写命令线连通即可。</li><li>片选时间控制：CPU控制总线中的 MREQ（访存请求）信号与片选译码器使能输入端相连即可。</li></ul></li><li><p>ROM连接方法：</p><ul><li><p>与SRAM基本相同，但读/写控制线不连。</p> <img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdq3ugs8ej60q80d2wfc02.jpg" alt="image-20211013153833865" style="zoom:67%;" /></li></ul></li><li><p>DRAM连接方法：</p><ul><li><p>DRAM芯片通常不直接和CPU总线相连，而是通过DRAM控制器芯片（DRAMC）与CPU总线连接。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdq5gkng4j60q808cjsk02.jpg" alt="image-20211013154006728" style="zoom:67%;" /></li><li><p>基本的DRAMC内部由五大部分组成：</p><ol><li>刷新地址计数器：刷新时向 DRAM提供刷新行地址，并自动顺序计数到下一行地址；</li><li>地址多路选择器：在行、列、刷新地址三者间选一路送给DRAM；</li><li>刷新定时器：根据所选用的刷新定时方式控制刷新时间，当需要刷新时及时发出刷新请求信号；</li><li>仲裁电路：在 CPU（I/O）访存请求、刷新请求中裁决出一种执行访存操作；</li><li>定时发生器：产生一系列 DRAM工作时所需的时间控制信号（ RAS、CAS、WE等）。</li></ol></li><li><p>DRAMC内部结构：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gvdqaud0xbj60qi0higmw02.jpg" alt="image-20211013154517066" style="zoom:80%;" /></li></ul></li></ol></li></ol><h3 id=""></h3>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理学习笔记：指令系统</title>
      <link href="/2021/09/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/09/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/Composition/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-指令系统概述">1. 指令系统概述</h2><ul><li>指令系统是指一台计算机所具有的全部<strong>机器指令的集合</strong>，它反映了该机所拥有的<strong>基本功能</strong>。</li><li>指令系统是<strong>计算机硬件</strong>的语言系统，也被称为机器语言。</li><li>指令系统是软件和硬件的主要<strong>交界面</strong>，也是计算机软件设计者和硬件设计者间的沟通<strong>桥梁</strong>。</li><li>指令系统决定了机器<strong>硬件</strong>所具有的<strong>能力</strong>，也决定了<strong>指令的格式</strong>和机器的<strong>硬件结构</strong>。</li><li>指令系统也直接影响到<strong>软件</strong>的结构、复杂度和性能。</li><li>指令系统的<strong>设计</strong>由体系结构设计者完成；指令系统的<strong>逻辑实现</strong>是计算机组成的研究范畴。</li></ul><h2 id="2-指令系统的发展">2. 指令系统的发展</h2><p>指令系统经历了从简单到复杂，然后又从复杂到简单的<strong>螺旋式演变过程。</strong></p><ul><li>从简单到复杂<ul><li><strong>50~60年代</strong>：电子管或晶体管计算机<ul><li>硬件结构比较简单</li><li>仅有十几至几十条基本指令，且寻址方式简单</li></ul></li><li><strong>60年代中期</strong>：集成电路计算机<ul><li>硬件功耗、体积、价格下降，功能增强</li><li>指令数达100～200条，寻址方式多样化</li></ul></li><li><strong>60年代后期到70年代中期</strong>：半导体存储器出现<ul><li><strong>系列计算机</strong>诞生</li><li>新推出的机种指令系统包含旧机种的全部指令，旧机种上运行的各种软件可以不加修改便可在新机种上运行，即<strong>软件向后兼容</strong></li></ul></li><li><strong>70年代末期</strong>：超大规模集成电路计算机<ul><li>硬件成本下降，软件成本提高</li><li>指令系统更加<strong>复杂和完备</strong>，指令数目可达300～500条，寻址方式也<strong>多样化</strong></li></ul></li></ul></li><li>从复杂到简单<ul><li>庞大的指令系统不但使计算机的研制<strong>周期变长</strong>，而且增加了<strong>调试和维护</strong>的难度，其结果还可能<strong>降低</strong>计算机系统的<strong>性能</strong>。</li><li>1979年，美国加州大学伯克利分校Patterson教授领导的研究组，首次提出了RISC（Reduced Instruction Set Computer，精简指令系统计算机）的思想。</li></ul></li></ul><p>下面分别介绍CISC指令系统和RISC指令系统的特征：</p><ul><li>CISC指令系统的特征：<ul><li><strong>软件硬化</strong>：用一条功能复杂的新指令来取代原先需一串指令完成的功能</li><li><strong>支持高级语言程序</strong>：增加新的复杂指令以及复杂的寻址方式</li><li><strong>软件兼容</strong>：系列机软件要求向上兼容和向后兼容，指令系统不断扩大</li></ul></li><li>CISC计算机存在的主要问题：<ul><li>仅有约20%的指令使用频度比较高，这些指令占据了80%的CPU时间</li><li>大量不经常使用的指令导致计算机硬件非常复杂，使得计算机研制周期变长，难以调试、维护且可靠性差。</li></ul></li><li>RISC计算机的特点：<ul><li>优先选取使用<strong>频率较高的简单指令</strong></li><li>指令<strong>长度</strong>固定，指令<strong>格式</strong>种类少，<strong>寻址方式</strong>种类少</li><li>只有取数／存数指令<strong>访问存储器</strong></li><li>CPU中<strong>通用寄存器</strong>数量相当多</li><li>CPU采用<strong>流水线结构</strong>，大部分指令可以在一个时钟周期内完成</li><li>控制单元设计以<strong>硬布线控制</strong>逻辑为主</li><li>采用<strong>编译优化</strong>技术，以减少程序执行时间</li></ul></li></ul><h2 id="3-指令系统的功能">3. 指令系统的功能</h2><h3 id="1-指令系统的设计原则">1. 指令系统的设计原则</h3><ul><li><strong>完备性</strong>——功能需求<ul><li>CISC指令系统的主要特点</li><li>RISC指令系统不强调完整性</li></ul></li><li><strong>规整性</strong>——硬、软件设计需求<ul><li><strong>对称性</strong>：寻址方式</li><li><strong>匀齐性</strong>：数据类型</li><li><strong>一致性</strong>：指令格式和数据格式</li></ul></li><li><strong>高效性</strong>——性能需求<ul><li><strong>CISC</strong>：完善指令系统功能，减小程序中指令的条数</li><li><strong>RISC</strong>：降低每条指令的执行时间</li></ul></li><li><strong>兼容性</strong>——性能需求</li></ul><h3 id="2-数据类型">2. 数据类型</h3><ul><li><strong>数据类型</strong>指面向应用或者软件系统所处理的各种数据结构<ul><li><strong>基本数据类型</strong>：整数、实数、布尔数、字符等</li><li><strong>复杂数据类型</strong>：文件、图、表、树、阵列、队列、链表、栈、向量等</li></ul></li><li><strong>数据表示</strong>指机器硬件能够直接识别、指令能够直接操作的数据结构<ul><li>例如定点数（整数）、逻辑数（布尔数）、浮点数（实数）、十进制数、字符、字符串等。</li></ul></li><li><strong>操作数</strong>指机器指令中的数据，即硬件可以直接识别和处理的数据。</li></ul><h3 id="3-操作数类型">3. 操作数类型</h3><ul><li><p>确定操作数类型的<strong>原则</strong></p><ul><li>有利于缩短程序的运行时间</li><li>有利于减少CPU与主存储器之间的通信量</li><li>数据表示应具有通用性和较高利用率</li></ul></li><li><p><strong>地址</strong></p><ul><li><p>操作数或指令被存放在数据存储设备的位置编码</p></li><li><p>主要数据存储设备有通用寄存器、主存储器和I/O设备</p></li><li><p>地址可以被认为是一个无符号整数</p></li></ul></li><li><p><strong>数字</strong></p><ul><li><p>计算机处理的最基本操作数类型</p></li><li><p>计算机中常用的数字类型有定点数、浮点数等</p></li></ul></li><li><p><strong>字符</strong></p><ul><li>在非数值计算领域表示和处理文本信息</li><li>将字符数字化表示，比如ASCII码</li></ul></li><li><p><strong>逻辑数</strong></p><ul><li>n位二进制数的组合，但各位之间可以没有任何关系</li><li>用于逻辑运算</li></ul></li></ul><h3 id="4-地址空间">4. 地址空间</h3><p>计算机中主要的数据存储设备有<strong>通用寄存器</strong>、<strong>主存储器</strong>和 <strong>I/O 设备</strong>，它们各自都包含多个可编址的数据访问单元。对这些单元可以统一编址或者单独编址。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqpe99yzkj60ye0d6dhf02.jpg" alt="image-20210923174551602" style="zoom: 40%;" /><h3 id="5-主存编址方式">5. 主存编址方式</h3><p>编址方式是指主存单元的<strong>地址编排方式</strong>。编址方式决定了主存<strong>最小访问单位</strong>。</p><ul><li><p>按字编址方式</p><ul><li>主存的<strong>最小编址单位</strong>是一个存储字，通常，<strong>存储字长=机器字长</strong></li><li>对主存数据的访问<strong>以字为单位</strong></li><li><strong>主存容量</strong>=存储字数×存储字长，单位为字（Word）或位（bit）</li><li>按字编址方式对应用来说不够灵活和方便，特别是在非数值计算应用领域。</li></ul></li><li><p>按字节编址方式</p><ul><li><p>主存的<strong>最小编址单位</strong>是一个字节，描述主存储容量时，以字节（Byte，B）为单位</p></li><li><p>对主存数据既能<strong>以字节为单位</strong>访问，也能<strong>以字为单位</strong>访问</p></li><li><p>当按字节访问主存时，使用<strong>字节地址</strong>；当按字访问主存时，使用<strong>字地址</strong></p></li><li><p>通常，存储字长是字节整数倍，字节地址是<strong>连续</strong>的，字地址是<strong>不连续</strong>的</p></li><li><p>多个字节数据存放在一个字单元，有两种编址顺序：低字节低地址（<strong>小端方式</strong>）、高字节低地址（<strong>大端方式</strong>）；也有存放边界问题：<strong>边界对齐、边界不对齐</strong>。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqq52c13pj60ws0jwq6p02.jpg" alt="image-20210923181134621" style="zoom:50%;" /><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqqfrzlp9j60xu0j242f02.jpg" alt="image-20210923181650553"></p><ul><li>通常，按字节编址的机器硬件都支持边界不对齐方式，为了保证程序执行速度，软件可以选择采用对齐或不对齐方式。</li></ul></li></ul><h3 id="6-操作类型">6. 操作类型</h3><p>所谓操作类型就是把指令系统按功能进行分类。一般指令系统包含 5 大类指令。</p><ul><li><p><strong>数据传送指令</strong></p></li><li><p><strong>数据运算指令</strong></p><ul><li><p>算术运算指令</p></li><li><p>逻辑运算指令</p></li><li><p>移位指令</p></li><li><p>位操作指令</p></li></ul></li><li><p><strong>程序控制指令</strong></p><ul><li><p>无条件转移指令</p></li><li><p>条件转移指令</p></li><li><p>调用与返回指令</p></li><li><p>陷阱指令</p></li></ul></li><li><p><strong>输人/输出（I/O）指令</strong></p></li><li><p><strong>其它指令</strong></p></li></ul><h2 id="4-指令格式">4. 指令格式</h2><h3 id="1-指令格式">1. 指令格式</h3><ul><li><p>指令由<strong>操作码</strong>和<strong>地址码</strong>组成</p></li><li><p>操作码字段指出指令的<strong>操作性质</strong>，即指令要完成的功能</p></li><li><p>地址码字段指出操作数的<strong>地址</strong>，即指令操作对象所在的<strong>位置</strong>，或者下一条指令在主存储器中的地址。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzezc56wj60u6036dg602.jpg" alt="image-20210923200518776" style="zoom: 40%;" /></li></ul><h3 id="2-指令字长">2. 指令字长</h3><p>指令字长指一条指令中包含的<strong>二进制码位数</strong>。它取决于操作码的长度、地址码的长度和地址码的个数。</p><ul><li><p>指令字长选取的基本原则</p><ul><li><p>指令<strong>字长尽可能短</strong>，以节省存储空间和提高处理速度</p></li><li><p>指令中各信息位<strong>利用率尽可能高</strong>，以有效压缩指令字长</p></li></ul></li><li><p>常见指令结构</p><ul><li><strong>等长</strong>指令字结构：所有指令字长均相等，通常，指令字长=机器字长</li><li><strong>变长</strong>指令字结构：各种指令长度不等</li></ul></li></ul><h3 id="3-地址码字段">3. 地址码字段</h3><ul><li><p>地址码个数</p><ul><li>三地址指令</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqu1tyaaxj60rm02ejri02.jpg" alt="image-20210923202616608" style="zoom:50%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqu1vkdrej60qi02yt8s02.jpg" alt="image-20210923202629734" style="zoom:50%;" /><ul><li>二地址指令</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqu2dfmopj60kq02eaa302.jpg" alt="image-20210923202729384" style="zoom:55%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqu2o9hvcj60qi02yt8s02.jpg" alt="image-20210923202743297" style="zoom:50%;" /><ul><li>一地址指令</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqu3z7ht3j60du02ejrb02.jpg" alt="image-20210923202904427" style="zoom:50%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzd8qu29j60qi02wjrg02.jpg" alt="image-20210923202919498" style="zoom:50%;" /><ul><li>零地址指令</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqu4lec0fj606y02e0sl02.jpg" alt="image-20210923202940302" style="zoom:50%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqu5mmsfsj60qi02waab02.jpg" alt="image-20210923203032987" style="zoom:50%;" /></li></ul><p>为了表示不同功能的指令，每一条指令安排一个<strong>唯一</strong>的操作码。操作码字段位数选取原则是能够表示指令系统中的<strong>全部指令</strong>。</p><ul><li>操作码长度<ul><li>定长操作码：所有指令的操作码位数相同，并将操作码集中安排在指令字的一个固定的字段中</li><li>变长操作码：各种指令的操作码位数不一致，并且操作码可以分散在指令字的不同字段中</li></ul></li></ul><h3 id="4-操作码扩展技术">4. 操作码扩展技术</h3><p>当采用<strong>定长指令字</strong>格式，且<strong>多种地址码</strong>结构混合使用时，可利用地址码个数较少的指令<strong>空出的</strong>地址码字段，来<strong>增加</strong>操作码的位数。</p><ul><li><p>操作码扩展方法</p><ul><li>等长扩展法<ul><li>4-8-12扩展法</li><li>3-6-9扩展法</li></ul></li></ul></li><li><p>不等长扩展法</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guquczfuoyj60ro0mkjvc02.jpg" alt="image-20210923203734999" style="zoom:50%;" /><h3 id="5-指令格式举例">5. 指令格式举例</h3><ul><li>IA-32指令格式：指令字长度可变，从1字节到16字节，还可以带前缀。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqug1bp6wj30s805s3z5.jpg" alt="image-20210923204035863" style="zoom:50%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqug8hy5mj60x806mwfj02.jpg" alt="image-20210923204048229" style="zoom:50%;" /><ul><li>MIPS 32指令格式：32位定长指令格式，操作码字段也是固定长度，没有专门的寻址方式字段，由指令格式确定寻址方式。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqujb1nirj60o40fwmz302.jpg" alt="image-20210923204343032" style="zoom:50%;" /><h2 id="5-寻址方式">5. 寻址方式</h2><p>计算<strong>源操作数</strong>、<strong>目的操作数</strong>以及<strong>下一条指令所在存储设备具体位置</strong>的方法称为寻址方式。</p><ul><li>与地址相关的概念<ul><li><strong>形式地址</strong>：也称符号地址，通常指由指令中显式给出的地址。</li><li><strong>有效地址</strong>：也称逻辑地址，它通常可以根据形式地址通过某种变换得到，变换规则由具体的寻址方式来确定。</li><li>有效地址EA由寻址方式和形式地址<strong>共同来确定</strong>的。通过形式地址求有效地址所采用的算法就是寻址方式。</li></ul></li><li>寻址方式分为<strong>指令寻址方式</strong>和<strong>数据寻址方式</strong>两类。</li></ul><h3 id="1-指令寻址方式">1. 指令寻址方式</h3><p>确定下一条<strong>将要执行的指令</strong>所在主存单元地址的方法。其目的是为PC设置新值。按照程序运行轨迹可分为：</p><ul><li><strong>顺序指令寻址</strong><ul><li>下一条指令地址由当前指令地址<strong>自增产</strong>生，即PC =（PC）+ 1</li></ul></li><li><strong>跳跃指令寻址</strong><ul><li>由<strong>转移类指令</strong>给出下一条指令的地址信息。 即PC内容按转移地址重新设置，而不是由PC顺序计数提供。</li></ul></li></ul><h3 id="2-数据寻址方式">2. 数据寻址方式</h3><ul><li><p>确定当前指令<strong>所涉及的操作数</strong>在数据存储设备中的地址的方法。</p></li><li><p>现代计算机中，寻址方式较多，为了正确、有效地获得操作数，通常在指令中安排几位<strong>标志位</strong>表示所用的寻址方式，称为“<strong>寻址方式码</strong>”或“<strong>寻址特征码</strong>”。</p></li><li><p>指令格式如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzcynyfgj60v802wjs402.jpg" alt="image-20210923210324469" style="zoom:40%;" /></li><li><p>数据寻址方式可分为<strong>基本寻址方式</strong>和<strong>复合寻址方式</strong>。</p></li><li><p>基本寻址方式根据数据所在的位置不同可分为<strong>四大类</strong>：立即寻址、寄存器寻址、存储器寻址和堆栈寻址。</p></li></ul><h4 id="1-立即寻址方式">1. 立即寻址方式</h4><ul><li>所需的操作数在指令的地址码部分<strong>直接给出</strong></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqv97f6bwj60o206gaao02.jpg" alt="image-20210923210836256" style="zoom: 50%;" /><ul><li>立即寻址通常只适用于<strong>源操作数</strong></li><li>Operand = Imme. Data</li></ul><h4 id="2-寄存器寻址方式">2. 寄存器寻址方式</h4><ul><li>操作数在寄存器中，指令执行速度快。</li><li>地址码字段的形式地址部分给出<strong>通用寄存器</strong>编号 Ri，地址码字段短。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqvhpr9vsj60yc0e8q3k02.jpg" alt="image-20210923211627410" style="zoom: 40%;" /><ul><li>EA = Ri, Operand = (Ri)</li></ul><h4 id="3-存储器寻址方式">3. 存储器寻址方式</h4><ul><li><p>根据有效地址的不同形成方法，又分为</p><ul><li>直接寻址</li><li>存储器间接寻址</li><li>寄存器间接寻址</li><li>偏移寻址以及段寻址</li></ul></li><li><p>这些寻址方式也可以用于跳跃执行的指令寻址</p></li><li><p><strong>直接寻址方式</strong></p><ul><li>指令地址字段直接给出操作数在存储器中的地址</li><li>寻址速度快，但寻址范围小</li><li>EA = A, Operand = (A)</li></ul></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzcu0ap2j60yi0d874t02.jpg" alt="image-20210923213339116" style="zoom:50%;" /><ul><li><p><strong>间接寻址方式</strong></p><ul><li>地址码字段给出的内容既不是操作数，也不是操作数的地址，而是操作数<strong>地址的地址</strong>。</li><li>分为一次间接和多次间接寻址。</li><li>可扩大指令<strong>寻址范围</strong>，但指令执行<strong>速度慢</strong>。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzcscqpfj60wo0d6q3p02.jpg" alt="image-20210923213611184" style="zoom:50%;" /><ul><li>多次间接寻址时，将A2的最高位设置为间址标志位I，I=0时，间址结束</li><li>EA = (A1), Operand = ((A1))</li></ul></li><li><p><strong>寄存器间接寻址方式</strong></p><ul><li>地址码字段给出某一<strong>通用寄存器的编号</strong></li><li>该寄存器中存放的是操作数在<strong>主存单元的地址</strong>。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqwcg5bcvj60wg0bugmc02.jpg" alt="image-20210923214622323" style="zoom:50%;" /><ul><li>EA = (Ri), Operand = ((Ri))</li></ul></li><li><p>偏移寻址方式</p><ul><li>形式上可认为是<strong>直接寻址</strong>和<strong>寄存器间接寻址</strong>的结合</li><li>地址码字段既要给出形式地址（<strong>偏移量</strong>），也要指出引用<strong>哪一个寄存器 Ri内容实现</strong>偏移。</li><li>EA=（ Ri ）+ A</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzcptl9lj60xy0dgdgw02.jpg" alt="image-20210923214845134" style="zoom:50%;" /><ul><li>常用的偏移寻址方式：<ul><li>相对寻址：<ul><li>引用专门的<strong>程序计数器 PC</strong>，即 <strong>EA =（PC）+A</strong></li><li>指令中只需要给出<strong>偏移量 A</strong></li><li>有利于程序在内存中浮动</li></ul></li><li>变址寻址<ul><li>引用一个<strong>变址寄存器 Rx</strong>,  <strong>EA =（Rx）+ A</strong></li><li>变址寄存器 Rx 可以是<strong>专用寄存器</strong>或<strong>通用寄存器</strong></li><li>若变址寄存器 Rx 是<strong>专用寄存器</strong>，地址字段中就<strong>不需要指出</strong>该寄存器（默认）</li><li>若变址寄存器 Rx是通用寄存器，地址字段要<strong>给出</strong>寄存器的编号 Ri</li></ul></li><li>基址寻址<ul><li>引用一个<strong>基址寄存器 Rb</strong>,  <strong>EA =（Rb）+ A</strong></li><li>基址寄存器 Rb 可以是<strong>专用寄存器</strong>或<strong>通用寄存器</strong></li><li>若基址寄存器 Rb 是<strong>专用寄存器</strong>，地址字段中就<strong>不需要指出</strong>该寄存器（默认）</li><li>若基址寄存器 Rb 是<strong>通用寄存器</strong>，地址字段要<strong>给出</strong>寄存器的编号 Ri</li></ul></li></ul></li><li>变址寻址与基址寻址的区别：<ul><li>基址寄存器中存放<strong>基地址</strong>，一旦<strong>由系统设定</strong>一般用户不能改变，程序中指令或数据的改变由不同的位移量完成；</li><li>变址寄存器存放<strong>地址修改量</strong>（变址值），而形式地址给出基本地址值，操作数地址的变化由变址值增、减量完成（典型的变址寻址其变址值的增、减量由硬件自动完成）；</li><li>基址寄存器的内容通常由<strong>系统程序设定</strong>，而变址寄存器的内容通常<strong>由用户设定</strong>；</li><li>基址寻址常用来实现<strong>对用户程序的动态定位</strong>，而变址寻址常用于<strong>数组处理及串操作</strong>。</li></ul></li></ul></li><li><p>段寻址方式</p><ul><li>用于<strong>地址长度超过机器字长</strong>的场合</li><li>将与机器字长相等的段地址和段内位移量错位相加，以获得更长的主存地址。</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzcl54xoj60zu0deq4h02.jpg" alt="image-20210923220428978" style="zoom:50%;" /></li></ul><h4 id="4-堆栈寻址">4. 堆栈寻址</h4><ul><li><p>堆栈</p><ul><li>堆栈是一种<strong>后进先出</strong>（LIFO）的存储装置</li><li>有<strong>寄存器堆栈</strong>（硬堆栈）和<strong>存储器堆栈</strong>（软堆栈）</li><li><strong>存储器堆栈</strong>是在主存中开辟一块区域，该区域一端固定，称为<strong>栈底</strong>；另一端是浮动的，称为<strong>栈顶</strong></li><li>栈顶是数据唯一的出入口。堆栈指针（SP）始终指向栈顶。</li><li>栈底与栈顶的地址设定方法：<ul><li>栈底设在栈区的低址端，栈顶设在高址端，堆栈向上生长</li><li>栈底设在栈区的高址端，栈顶设在低址端，堆栈向下生长</li></ul></li></ul></li><li><p>堆栈的实现</p><ul><li>SP指向栈顶空单元</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzciuwmhj60zw0gy0uz02.jpg" alt="image-20210923222137004" style="zoom:50%;" /><ul><li>SP指向栈顶非空单元</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqxcqujr0j60zc0gy76l02.jpg" alt="image-20210923222104125" style="zoom:50%;" /></li></ul><h4 id="5-复合寻址方式">5. 复合寻址方式</h4><ul><li>两种以上寻址方式联合使用，称为<strong>复合寻址</strong></li><li>关键是地址<strong>计算的顺序</strong>，习惯从名称上加以反映</li><li>变址间接寻址：<strong>先变址，后间接</strong>。即 EA=[(Rx)+A]， Rx ← (Rx)+△</li><li>间接变址寻址：<strong>先间接，后变址</strong>。即EA= (Rx)+(A)， Rx ← (Rx)+△</li></ul><h4 id="6-程序定位方式">6. 程序定位方式</h4><p><strong>定位方式</strong>是指程序中指令和数据的<strong>逻辑地址</strong>到<strong>物理地址</strong>的变换时间和实现方式。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqxlhzuj0j30p40a63zm.jpg" alt="image-20210923222939706" style="zoom:50%;" /><ul><li><p>直接定位方式</p><ul><li>直接使用<strong>主存物理地址</strong>来编写或编译程序，即无需地址变换。</li><li>将主存物理空间划分为若干个固定且大小相同的分区，为每个任务分配相应的分区。</li><li>若程序比较大超出了分配给它的主存物理空间，把它分割成若干个程序段，在程序运行过程中逐段调入主存物理空间，称为“覆盖”。</li></ul></li><li><p>静态定位方式</p><ul><li>在程序加载到主存时，一次性为指令和数据分配主存物理地址。</li><li>由加载程序（操作系统程序）完成定位功能。</li><li>若程序比较大超出了分配给它的主存物理空间，采用“覆盖”技术。</li><li>程序多次运行时可以装入到不同的主存物理空间，一旦装入，执行期间不能在主存中移动。</li></ul></li><li><p>动态定位方式</p><ul><li>在程序执行过程中，进行逻辑地址到物理地址的转换。</li><li>需要硬件支持，采用基址寻址方式实现。</li><li>一个程序可以被分配在多个不连续的主存物理空间内。</li><li>多个程序可以<strong>共享</strong>存放在主存中的同一个程序段</li><li>支持虚拟存储器，为用户提供一个比实际主存储器的物理空间大得多的逻辑地址空间。</li></ul></li></ul><h2 id="6-思考题">6. 思考题</h2><ul><li><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqxq32u9wj61380k643h02.jpg" alt="image-20210923223355750" style="zoom: 33%;" /><p>解答：首先题中给出关键信息：双字长、直接寻址。在CALL指令被读取前，所有值仍保持原来，即PC=2000H，SP=0100H，栈顶内容为2746H。读取后，PC=（PC）+1=2001H，SP=SP-△=00FEH，栈顶内容（5000H）处所存的值。</p></li><li><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqyv9upi5j612q0oen0j02.jpg" alt="image-20210923230933994" style="zoom: 33%;" /><p>解答：取指令完成后PC自动增加1，即PC=（PC）+1存储字，题中1存储字=2字节，故PC=2002H。由于采取相对寻址，故再执行转移指令，即PC=（PC）+D，故PC=2042H。选C。</p></li><li><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzcbfdhnj60ya0bymz902.jpg" alt="image-20210923231348390" style="zoom: 40%;" /><p>解答： 一种可行的解法如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guqzb1ilpnj60kg0hvt9l02.jpg" alt="image-20210923232843335" style="zoom:50%;" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络学习笔记2：网络体系结构</title>
      <link href="/2021/09/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/"/>
      <url>/2021/09/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="1-网络分层">1. 网络分层</h2><h3 id="1-分层优点">1. 分层优点</h3><ul><li><p><strong>各层独立</strong>。每一层不需要知道下层是如何实现的，只需要知道层间的<font color=red>接口</font>和所提供的<font color=red>服务</font>。</p></li><li><p><strong>灵活性好</strong>。当任意层发生变化时，只要接口不变，上下层均不受影响。</p></li><li><p><strong>结构上分开</strong>。各层可采用最适合的技术。</p></li><li><p><strong>易于实现和维护</strong>。</p></li><li><p><strong>促进标准化</strong>。由于每一层及其提供的服务都有明确的定义。</p></li></ul><h3 id="2-分层原则">2. 分层原则</h3><ul><li>根据功能需要分层</li><li>明确每层的功能、接口和服务</li><li>每层的功能的选择有利于制定国际标准</li><li>每层的接口信息量尽可能少</li><li>层数足够多：避免不同的功能混于同一层</li><li>层数不能太多：避免体系结构过于庞大<font color=blue>（补充：目前普遍接受的是一个五层模型）</font></li></ul><h2 id="2-网络体系结构要素">2. 网络体系结构要素</h2><h3 id="1-网络体系结构">1. 网络体系结构</h3><ul><li>计算机网络研究方法：<ul><li>按<font color=red>功能</font>抽象分层</li><li>定义每一层的功能和相邻层间<font color=red>接口</font></li><li>定义相同层间通信的规则——<font color=red>协议</font></li></ul></li><li>完整的网络体系结构包括：层、服务、协议</li></ul><h3 id="2-层、协议和接口">2. 层、协议和接口</h3><img src="https://tva1.sinaimg.cn/large/008i3skNly1gureno87nfj60x40ii40802.jpg" alt="image-20210924081948432" style="zoom: 50%;" /><ol><li>每个结点要加载<font color=red>完整的体系结构层次</font></li><li>直接相邻的两个结点<font color=red>相同层必须选择相同的协议</font></li><li>只有最底层有收发二进制位的功能，计算机网络中采用<font color=red>串行</font>的方式接发收据。<ul><li>解释：串行传输一次性只能传输一位2进制数据。</li></ul></li><li>其他概念（补充）：<ul><li>服务和功能：服务就是上层能看到的服务</li><li>每一层对它的相邻的上层提供服务</li></ul></li></ol><h3 id="3-层次设计主题">3. 层次设计主题</h3><ul><li><p>编址机制（addressing）</p></li><li><p>数据传输（data transferring）</p></li><li><p>差错控制（error controlling）</p></li><li><p>顺序控制（sequence controlling）</p></li><li><p>流量控制（flow controlling）</p></li><li><p>拥塞控制（congest controlling）</p></li><li><p>拆分与重组（disassembling and reassembling）</p></li><li><p>复用与解复用（multiplexing &amp; demultiplexing）</p></li><li><p>路由机制（routing policy）</p></li></ul><h3 id="4-实体和对等实体">4. 实体和对等实体</h3><ul><li>实体（entity）<ul><li>层中的活动元素</li><li>可以是软件（如进程），也可以是硬件（如网卡、智能输入/输出芯片），不同网络层次中的实体实现的功能可以相同。</li></ul></li><li>对等实体/同等实体（peer entity）<ul><li>位于不同系统的同一层的实体间的互称。</li></ul></li></ul><h3 id="5-层和相邻层">5. 层和相邻层</h3><ul><li>层 （layer）<ul><li><font color=red>(n)层</font>：指在网络体系结构中的某特定层</li><li><font color=red>(n+1)层</font>：指(n)层的相邻上层</li><li><font color=red>(n-1)层</font>：指(n)层的相邻下层</li><li>每层实体与同一系统的相邻层实体交互</li><li>每层实体与不同系统的对等实体交互</li></ul></li></ul><h3 id="6-协议">6. 协议</h3><ul><li><font color=red>协议（protocol）：计算机网络同等层次中，通信双方进行信息交换时必须遵守的规则。</font></li><li>协议组成<ul><li>语法（syntax)：以二进制形式表示的命令和相应的结构</li><li>语义（semantics)：由发出的命令请求，完成的动作和回送的响应组成的集合</li><li>同步/定时关系（timing)：有关通信操作执行的顺序</li></ul></li></ul><h3 id="7-接口和服务">7. 接口和服务</h3><ul><li><p>在计算机网络分层结构中，每一层功能的本质都是为它的上层<font color=red>提供服务</font>。</p></li><li><p>服务：(n)实体向(n+1)实体提供的通信能力，(n+1)实体<font color=red>能看见</font>的(n)实体提供的<font color=red>功能集合</font>。</p><ul><li><p>(n)实体自己提供的某些功能</p></li><li><p>从(n-1)层得到的功能</p></li><li><p>本地系统得到的功能</p></li><li><p>通过与其它系统对等实体通信而得到的功能</p></li></ul></li></ul><h3 id="8-服务提供者和服务用户">8. 服务提供者和服务用户</h3><ul><li><p>(n)服务提供者：提供(n)服务的下一层实体</p><ul><li>直接(n)服务提供者：(n)层实体</li><li>间接(n)服务提供者：(n)层及其以下各层的实体</li></ul></li><li><p>(n)服务用户：接受(n)服务的上一层实体</p><ul><li><p>直接(n)服务用户：(n+1)层实体</p></li><li><p>间接(n)服务用户：(n+1)层及其以上各层的实体</p></li></ul></li></ul><h3 id="9-服务访问点SAP">9. 服务访问点SAP</h3><ul><li><p>SAP（Service Access Point）是邻层实体之间的<font color=red>逻辑接口</font>，层间服务必须在SAP上进行</p></li><li><p>从物理层开始，每一层都向上层提供服务访问点</p></li><li><p>SAP例程：</p><ul><li><p>物理层的服务访问点是网卡接口(RJ45接口或BNC接口)</p></li><li><p>数据链路层的服务访问点是MAC地址</p></li><li><p>网络层的服务访问点是IP地址</p></li><li><p>传输层的服务访问点是端口号</p></li><li><p>应用层提供的服务访问点是用户界面</p></li></ul></li></ul><h3 id="10-数据单元-Data-Unit">10. 数据单元 Data Unit</h3><ul><li><p>在网络中信息传送的单位，称为<font color=red>数据单元</font>。</p><ul><li><p><font color=red>对等实体</font>在<font color=red>协议</font>的控制下交换信息</p></li><li><p><font color=red>相邻层实体</font>按<font color=red>服务</font>交换信息</p></li></ul></li><li><p>数据单元种类：</p><ul><li><p>协议数据单元 PDU</p></li><li><p>接口数据单元 IDU</p></li><li><p>服务数据单元 SDU</p></li></ul></li></ul><h4 id="1-协议数据单元-PDU">1. 协议数据单元 PDU</h4><ol><li><p>概念：不同系统的<font color=red>对等实体</font>为实现该层<font color=red>协议</font>所交换的信息单位</p></li><li><p>PDU基本格式：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxenk0djwxj30oy044weh.jpg" alt="image-20211215173632290" style="zoom:50%;" /><ul><li>PCI（协议控制信息）是为实现协议而在传送的数据的首部或尾部加的控制信息，如：地址、差错控制信息、序号信息等。</li><li>用户数据为提供服务而传送的信息。</li><li>考虑到协议的要求，如时延、效率等因素，PDU的大小一般都有一定的长度要求。</li></ul></li><li><p>(n)PDU与(n+1)PDU的关系：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxenlucq1jj30qm08idgd.jpg" alt="image-20211215173817533" style="zoom:50%;" /><ul><li>数据由上层到下层逐层封装</li><li>每一层的协议数据单元不一定等于用户数据。（例如以太网的最短帧填充）（数据分段在目的结点进行组装）</li></ul></li></ol><h4 id="2-服务数据单元-SDU">2. 服务数据单元 SDU</h4><ol><li><p>概念：<font color=red>上层服务用户</font>所要求传递的数据单元</p></li><li><p>由于PDU的大小一般都有一定的长度要求。因此，PDU的用户数据部分可能是<font color=red>经过分段或合并</font>的SDU。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxeo22pbxhj30mg07at8y.jpg" alt="image-20211215175353674" style="zoom:50%;" /></li><li><p>(n)SDU和(n)PDU的关系：（n层的协服务数据单元与n+1层的协议数据单元相同）</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxeo87q3e8j31400g2ac9.jpg" alt="image-20211215175945735" style="zoom:50%;" /></li></ol><h4 id="3-接口数据单元-IDU">3. 接口数据单元 IDU</h4><ol><li><p>概念：同一系统的<font color=red>相邻层实体</font>的一次交互中，经过<font color=red>层间接口</font>的信息单元</p></li><li><p>基本格式：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxeoazdrprj30nk03igll.jpg" alt="image-20211215180227706" style="zoom:50%;" /><ul><li><p>ICI（接口控制信息）是协议在通过层间接口时，添加的一些控制信息，如通过多少字节、或要求的服务质量等。</p></li><li><p>ICI只对IDU通过接口时有作用。</p></li><li><p>接口数据为通过接口进行传送的信息内容。</p></li></ul></li></ol><h3 id="11-连接（了解）">11. 连接（了解）</h3><ul><li><p>(n)连接</p><ul><li><p>(n+1)实体利用(n)实体而建立的联系。</p></li><li><p>(n+1)层对等实体要进行通信必须<font color=red>通过相邻下层以及下面各层</font>通信来完成。</p></li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxep4aa2f8j30z60i4abh.jpg" alt="image-20211215183037101" style="zoom:50%;" /></li></ul><h3 id="12-服务分类">12. 服务分类</h3><ul><li><p>面向（基于）连接的服务</p><ul><li><p>传送数据时，首先<font color=red>建立</font>连接，然后<font color=red>使用</font>该连接传送数据。使用完后，<font color=red>关闭</font>连接。</p></li><li><p>特点：容易控制，顺序性好。</p></li></ul></li><li><p>无连接服务</p><ul><li><p>直接使用服务传送数据，每个包独立进行路由选择。</p></li><li><p>特点：不好控制，顺序性差。</p></li></ul></li><li><p>补充：</p><ol><li>不能简单的认为面向连接就比无连接服务好</li><li>低层使用无连接服务不影响高层使用面向连接服务</li></ol></li></ul><h3 id="13-服务原语">13. 服务原语</h3><ul><li><p>服务在形式上是由一组<font color=red>接口原语</font>（或操作）来描述的。</p><ul><li>当(n+1)实体向(n)实体请求(n)服务时，服务提供者和服务用户间需要交流一些必要信息，以说明要求的服务的一些情况，这些信息即服务原语。</li></ul></li><li><p>服务原语类型</p></li></ul><table><thead><tr><th style="text-align:center">服务原语</th><th style="text-align:center">内容</th></tr></thead><tbody><tr><td style="text-align:center">请求(request)</td><td style="text-align:center">（N+1）实体请求（N）实体提供服务</td></tr><tr><td style="text-align:center">指示(indication)</td><td style="text-align:center">（N）实体通知（N+1）实体发生了某一事件</td></tr><tr><td style="text-align:center">响应(response)</td><td style="text-align:center">（N+1）实体对（N）实体指示的响应</td></tr><tr><td style="text-align:center">证实(confirm)</td><td style="text-align:center">（N）实体向（N+1）实体确认，（N+1）实体请求的服务已完成</td></tr></tbody></table><ul><li>面向连接服务的原语执行过程</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxfvscndfij312s0da401.jpg" alt="image-20211216190652380" style="zoom:50%;" /><h3 id="14-协议与服务">14. 协议与服务</h3><ol><li><font color=red>服务</font>是各层向上层提供的一组<font color=red>原语</font>（操作），只定义<font color=red>接口</font>不涉及具体实现；</li><li><font color=red>协议</font>定义同层<font color=red>对等实体</font>的具体<font color=red>规则</font>；</li><li>服务与协议的关系：实体利用<font color=red>协议</font>实现<font color=red>服务</font>定义的<font color=red>接口</font>；只要服务不变，可以任意改变协议。</li></ol><h2 id="3-网络参考模型">3. 网络参考模型</h2><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxfvyvldr9j30yo0m6wik.jpg" alt="image-20211216191310723" style="zoom:50%;" /><ul><li><p>各层的功能：</p><ul><li>物理层（比特流）：实现在<font color=red>物理媒介</font>上透明地传送原始<font color=red>比特流</font>；</li><li>数据链路层（帧）：在<font color=red>物理线路</font>上提供<font color=red>可靠</font>的数据传输，使之对网络层呈现为一条<font color=red>无错</font>的线路。<ol><li>寻址。</li><li>差错控制。</li></ol></li><li>网络层（分组或包）： 在<font color=red>源结点与目的结点</font>之间建立、维护、终止<font color=red>网络连接</font>。</li><li>传输层（段）：为<font color=red>源端主机到目的端主机</font>提供<font color=red>可靠的、满足服务质量要求</font>的数据传输服务。<font color=blue>（一般认为传输层是实现端到端传输的最底层）</font></li><li>会话层（报文）：建立、管理和中止不同机器上的应用程序之间的会话。</li><li>表示层（报文）：处理被传送数据的表示问题，即信息的语法和语义。</li><li>应用层（报文）：为用户的应用程序提供<font color=red>网络通信服务</font> 。</li></ul></li><li><p>补充：</p><ul><li>数据在发送过程中，IP地址不变，但MAC地址会改变；</li><li>只有在数据链路层中，目的结点的信息在前，源结点的信息在后，其他层则相反。</li></ul></li></ul><h3 id="1-TCP-IP参考模型">1. TCP/IP参考模型</h3><ul><li><p>网络接口层：TCP/IP 协议集把物理层和数据链路层合起来称为网络接口层。</p><ul><li>没有具体协议</li></ul></li><li><p>Internet层（网际层）：控制通信子网提供源点到目的点的 IP 包传送。</p><ul><li>IP、ICMP、IGMP、ARP</li></ul></li><li><p>传输层：提供端到端的数据传送服务。</p><ul><li>TCP 和 UDP</li></ul></li><li><p>应用层：提供各种 Internet 管理和应用服务。</p><ul><li>FTP、SMTP、…</li></ul></li></ul><h3 id="2-OSI与TCP-IP模型对比">2. OSI与TCP/IP模型对比</h3><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gxfxh22s1pj307a07674k.jpg" alt="image-20211216200515253"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学学习笔记：几何变换</title>
      <link href="/2021/09/16/CG/CG%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%87%A0%E4%BD%95%E5%8F%98%E6%8D%A2/"/>
      <url>/2021/09/16/CG/CG%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%87%A0%E4%BD%95%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="1-渲染">1. 渲染</h3><ol><li>定义：将3D场景投影为2D图像</li><li>阶段：<ol><li>几何阶段<ul><li>将3D模型投影变换到图像平面</li><li>决定可见的图元（图形元素）</li></ul></li><li>光栅阶段<ul><li>决定可见的片元 (fragment)</li><li>决定片元的颜色成为彩色像素</li></ul></li></ol></li><li>图元：点、线、三角形等基本几何元素</li></ol><h2 id="2-渲染管线">2. 渲染管线</h2><ol><li><p>定义：渲染计算的流水线</p><ol><li>三维顶点</li><li>顶点处理器（几何阶段）</li><li>裁剪器与元素装配（几何阶段）</li><li>光栅化（光栅阶段）</li><li>片元处理（光栅阶段）</li><li>彩色像素</li></ol></li><li><p>两个主要过程：几何+像素</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujf9ohip2j60yi0ay75h02.jpg" alt="image-20210917103631006" style="zoom: 33%;" /></li><li><p>成像模型：3D场景在虚拟相机（眼睛）下的投影</p></li><li><p>各种坐标系</p><ol><li>对象坐标系：对象自身所处的坐标系</li><li>世界坐标系：多个对象共处的坐标系</li><li>视点坐标系：观察者视角为原点的坐标系</li><li>裁剪坐标系</li><li>规范化的设备坐标系</li><li>窗口坐标系</li></ol></li><li><p>顶点处理：</p><ol><li>流水线中大部分工作是把对象在一个坐标系中的表示转化为另一个坐标系中的表示</li><li>坐标的每一次变换相当于一次<strong>矩阵乘法</strong></li></ol></li><li><p>投影变换：正交投影、透视投影</p></li><li><p>裁剪：超出可视范围的几何元素需要裁剪掉，不参加后面的<br>计算。分为：视景体裁剪、窗口裁剪</p></li><li><p>消隐：消除隐藏面</p></li><li><p>屏幕映射变换</p></li><li><p>光栅化</p></li><li><p>着色：让3D物体更有空间感</p></li></ol><h2 id="3-几何变换（重点）">3. 几何变换（重点）</h2><h3 id="1-二维变换">1. 二维变换</h3><ul><li><p>平移变换</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujfdv949vj60ea0b274902.jpg" alt="image-20210917104035672" style="zoom:50%;" /></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>+</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>d</mi><mi>y</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[                  \begin{array}{c}       x&#x27;\\      y&#x27;\\    \end{array}\right]=\left[                  \begin{array}{c}       x\\      y\\    \end{array}\right]+\left[                  \begin{array}{c}       dx\\      dy\\    \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p>转化为矩阵乘法：增加一个维度</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[                  \begin{array}{c}       x&#x27;\\      y&#x27;\\      1\\  \end{array}\right]=\left[                  \begin{array}{cc}       1&amp;0&amp;d_x\\    0&amp;1&amp;d_y\\    0&amp;0&amp;1\\  \end{array}\right]\left[                  \begin{array}{c}       x\\      y\\     1\\  \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.3970000000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span style="height:0.016em;width:0.667em;"><svg width='0.667em' height='0.016em' style='width:0.667em' viewBox='0 0 667 16' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V16 H319z M319 0 H403 V16 H319z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.3970000000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span style="height:0.016em;width:0.667em;"><svg width='0.667em' height='0.016em' style='width:0.667em' viewBox='0 0 667 16' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V16 H263z M263 0 H347 V16 H263z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.3970000000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span style="height:0.016em;width:0.667em;"><svg width='0.667em' height='0.016em' style='width:0.667em' viewBox='0 0 667 16' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V16 H319z M319 0 H403 V16 H319z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.3970000000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span style="height:0.016em;width:0.667em;"><svg width='0.667em' height='0.016em' style='width:0.667em' viewBox='0 0 667 16' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V16 H263z M263 0 H347 V16 H263z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.3970000000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span style="height:0.016em;width:0.667em;"><svg width='0.667em' height='0.016em' style='width:0.667em' viewBox='0 0 667 16' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V16 H319z M319 0 H403 V16 H319z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.3970000000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span style="height:0.016em;width:0.667em;"><svg width='0.667em' height='0.016em' style='width:0.667em' viewBox='0 0 667 16' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V16 H263z M263 0 H347 V16 H263z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><p>旋转变换</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujfektud0j60hi0as0sw02.jpg" alt="image-20210917104117732" style="zoom:50%;" /></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[                  \begin{array}{c}       x&#x27;\\      y&#x27;\\    \end{array}\right]=\left[                  \begin{array}{cc}       cos\theta&amp;-sin\theta\\      sin\theta&amp;cos\theta\\    \end{array}\right]\left[                  \begin{array}{c}       x\\      y\\    \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><ul><li><p>缩放变换</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujff20vssj60fc0a8dft02.jpg" alt="image-20210917104140976" style="zoom:50%;" /></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>S</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>S</mi><mi>y</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[                  \begin{array}{c}       x&#x27;\\      y&#x27;\\    \end{array}\right]=\left[                  \begin{array}{cc}       S_x&amp;0\\      0&amp;S_y\\    \end{array}\right]\left[                  \begin{array}{c}       x\\      y\\    \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><ul><li>错切变换（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>为垂直于x轴直线的旋转角度）</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujypa435aj60ae04qdfp02.jpg" alt="image-20210917105302293" style="zoom: 67%;" /><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>α</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[                  \begin{array}{c}       x&#x27;\\      y&#x27;\\    \end{array}\right]=\left[                  \begin{array}{cc}       1&amp;-tan\alpha\\      0&amp;1\\    \end{array}\right]\left[                  \begin{array}{c}       x\\      y\\    \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><ul><li>注意：变换的先后顺序会对最终结果产生影响</li></ul><h3 id="2-三维变换">2. 三维变换</h3><ul><li>平移变换</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">T(d) =\left[                  \begin{array}{cccc}       1&amp;0&amp;0&amp;d_x\\    0&amp;1&amp;0&amp;d_y\\    0&amp;0&amp;1&amp;d_z\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>缩放变换</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>s</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>s</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>s</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">S(s) =\left[                  \begin{array}{cccc}       s_x&amp;0&amp;0&amp;0\\    0&amp;s_y&amp;0&amp;0\\    0&amp;0&amp;s_z&amp;0\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>旋转变换：（绕三个不同轴分别旋转）</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>z</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext> </mtext><mi>C</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>C</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>C</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext> </mtext><mi>C</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><msub><mi>R</mi><mi>x</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext> </mtext><mi>A</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>A</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>A</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext> </mtext><mi>A</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mspace linebreak="newline"></mspace><msub><mi>R</mi><mi>y</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext> </mtext><mi>B</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>B</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>B</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext> </mtext><mi>B</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">R_z =\left[                  \begin{array}{cccc}       cos\ C&amp;-sin\ C&amp;0&amp;0\\   sin\ C&amp;cos\ C&amp;0&amp;0\\    0&amp;0&amp;1&amp;0\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]\\R_x =\left[                  \begin{array}{cccc}       1&amp;0&amp;0&amp;0\\   0&amp;cos\ A&amp;- sin\ A&amp;0\\    0&amp;sin\ A&amp;cos\ A&amp;0\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]\\R_y =\left[                  \begin{array}{cccc}       cos\ B&amp;0&amp;sin\ B&amp;0\\    0&amp;1&amp;0&amp;0\\    -sin\ B&amp;0&amp;cos\ B&amp;0\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mspace"> </span><span class="mord mathnormal">A</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mspace"> </span><span class="mord mathnormal">A</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mspace"> </span><span class="mord mathnormal">A</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mspace"> </span><span class="mord mathnormal">A</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="3-逆变换推导">3. 逆变换推导</h3><ul><li>平移变换的逆变换</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mo>−</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>d</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>d</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>d</mi><mi>z</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">T^{-1}(d) = T(-d) = \left[                  \begin{array}{cccc}       1&amp;0&amp;0&amp;-d_x\\    0&amp;1&amp;0&amp;-d_y\\    0&amp;0&amp;1&amp;-d_z\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>缩放变换的逆变换</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>S</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mo stretchy="false">(</mo><mfrac><mn>1</mn><mi>s</mi></mfrac><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msub><mi>s</mi><mi>x</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msub><mi>s</mi><mi>y</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msub><mi>s</mi><mi>z</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">S^{-1}(s)=S(\frac 1 s) = T(d) =\left[                  \begin{array}{cccc}       1/s_x&amp;0&amp;0&amp;0\\    0&amp;1/s_y&amp;0&amp;0\\    0&amp;0&amp;1/s_z&amp;0\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>旋转变换的逆变换（以绕z轴旋转为例）</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>R</mi><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>R</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mo>−</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mo>−</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mo>−</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mo>−</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mo>−</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">R_z^{-1}(\theta) = R_z(-\theta) =\left[                  \begin{array}{cccc}       cos(-\theta)&amp;-sin(-\theta)&amp;0&amp;d_x\\    sin(-\theta)&amp;cos(-\theta)&amp;0&amp;d_y\\    0&amp;0&amp;1&amp;d_z\\    0&amp;0&amp;0&amp;1\\  \end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="4-连续变换及应用">4. 连续变换及应用</h3><ul><li>连续的变换可以表示为多个矩阵相乘（后面进行的变换在原基础上左乘）</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>v</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>T</mi><mi>S</mi><msub><mi>R</mi><mi>z</mi></msub><msub><mi>R</mi><mi>x</mi></msub><mi>T</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">v&#x27; = TSR_zR_xTv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></span></p><ul><li>逆变换：遵守矩阵求逆的法则</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>v</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>T</mi><mi>S</mi><msub><mi>R</mi><mi>z</mi></msub><msub><mi>R</mi><mi>x</mi></msub><mi>T</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>v</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msubsup><mi>R</mi><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><msubsup><mi>R</mi><mi>z</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><msup><mi>S</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>v</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}v &amp;= (TSR_zR_xT)^{-1}v&#x27;\\&amp;= T^{-1}R_x^{-1}R_z^{-1}S^{-1}T^{-1}v&#x27;\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.048216em;vertical-align:-1.274108em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.774108em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span><span style="top:-2.385892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.274108em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.774108em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.385892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.274108em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.774108em;"><span style="top:-3.774108em;"><span class="pstrut" style="height:2.864108em;"></span><span class="eqn-num"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.864108em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.274108em;"><span></span></span></span></span></span></span></span></span></p><ul><li>坐标系间的连续变换</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gungol9v0kj30iw0cumx7.jpg" alt="image-20210920212313129" style="zoom:50%;" /><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>v</mi><mi>c</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>M</mi><mrow><mi>c</mi><mo>←</mo><mi>d</mi></mrow></msub><msub><mi>v</mi><mi>d</mi></msub></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>v</mi><mi>b</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>M</mi><mrow><mi>b</mi><mo>←</mo><mi>c</mi></mrow></msub><msub><mi>v</mi><mi>c</mi></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>b</mi><mo>←</mo><mi>c</mi></mrow></msub><msub><mi>M</mi><mrow><mi>c</mi><mo>←</mo><mi>d</mi></mrow></msub><msub><mi>v</mi><mi>d</mi></msub></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>v</mi><mi>a</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>M</mi><mrow><mi>a</mi><mo>←</mo><mi>b</mi></mrow></msub><msub><mi>v</mi><mi>b</mi></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>a</mi><mo>←</mo><mi>b</mi></mrow></msub><msub><mi>M</mi><mrow><mi>b</mi><mo>←</mo><mi>c</mi></mrow></msub><msub><mi>M</mi><mrow><mi>c</mi><mo>←</mo><mi>d</mi></mrow></msub><msub><mi>v</mi><mi>d</mi></msub></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}v_c&amp;=M_{c\leftarrow d}v_d\\v_b&amp;=M_{b\leftarrow c}v_c=M_{b\leftarrow c}M_{c\leftarrow d}v_d\\v_a &amp;= M_{a\leftarrow b}v_b=M_{a\leftarrow b}M_{b\leftarrow c}M_{c\leftarrow d}v_d\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.500000000000002em;vertical-align:-2.000000000000001em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mrel mtight">←</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.4999999999999991em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span></span></span></span></p><ul><li>变换的顺序</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gunf5svy7aj60qu09oq3j02.jpg" alt="image-20210920213506118" style="zoom:50%;" /><p>以花盆上的某以固定点为例子，说明在不同顺序的变换之后，花盆的局部坐标系相对于全局坐标系的变换“变化了”，所以变换后在世界坐标系中的最终位置必然不同。</p><ul><li>视点变换</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gunfehm5xpj30ck0aoq32.jpg" alt="image-20210920214330086" style="zoom:50%;" /><p><strong>摄像机参数：</strong></p><p>眼睛位置：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>e</mi><mi>y</mi><mi>e</mi><mo>=</mo><mo stretchy="false">[</mo><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>y</mi></msub><mo separator="true">,</mo><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>z</mi></msub><msup><mo stretchy="false">]</mo><mi mathvariant="normal">⊤</mi></msup></mrow><annotation encoding="application/x-tex">eye = [eye_x,eye_y,eye_z]^\top</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">eye</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1852159999999998em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span></span></span></span></span></p><p>参考中心位置：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mo>=</mo><mo stretchy="false">[</mo><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><msub><mi>r</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><msub><mi>r</mi><mi>y</mi></msub><mo separator="true">,</mo><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><msub><mi>r</mi><mi>z</mi></msub><msup><mo stretchy="false">]</mo><mi mathvariant="normal">⊤</mi></msup></mrow><annotation encoding="application/x-tex">center = [center_x,center_y,center_z]^\top</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">ce</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1852159999999998em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord mathnormal">ce</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ce</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ce</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span></span></span></span></span></p><p>正上方向量：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>u</mi><mi>p</mi><mo>=</mo><mo stretchy="false">[</mo><mi>u</mi><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>u</mi><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><mi>u</mi><msub><mi>p</mi><mi>z</mi></msub><msup><mo stretchy="false">]</mo><mi mathvariant="normal">⊤</mi></msup></mrow><annotation encoding="application/x-tex">up=[up_x,up_y,up_z]^\top</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1852159999999998em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>计算原坐标系中变换后坐标轴的方向向量：</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>z</mi><mi>c</mi></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>e</mi><mi>y</mi><mi>e</mi><mo>−</mo><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>e</mi><mi>y</mi><mi>e</mi><mo>−</mo><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>x</mi><mi>c</mi></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>u</mi><mi>p</mi><mo>×</mo><msup><mi>z</mi><mi>c</mi></msup></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>u</mi><mi>p</mi><mo>×</mo><msup><mi>z</mi><mi>c</mi></msup><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>y</mi><mi>c</mi></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mi>z</mi><mi>c</mi></msup><mo>×</mo><msup><mi>x</mi><mi>c</mi></msup></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}z^c&amp;=\frac{eye-center}{||eye-center||}\\x^c&amp;=\frac{up\times z^c}{||up\times z^c||}\\y^c&amp;=z^c\times x^c\\\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.605472000000001em;vertical-align:-3.052736000000001em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5527360000000003em;"><span style="top:-5.602048em;"><span class="pstrut" style="height:3.341392em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span><span style="top:-3.024656em;"><span class="pstrut" style="height:3.341392em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span><span style="top:-0.9486559999999993em;"><span class="pstrut" style="height:3.341392em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.052736000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5527360000000003em;"><span style="top:-5.602048em;"><span class="pstrut" style="height:3.341392em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal">eye</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ce</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">eye</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ce</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.024656em;"><span class="pstrut" style="height:3.341392em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.341392em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.590392em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.9486559999999993em;"><span class="pstrut" style="height:3.341392em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.052736000000001em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5527360000000003em;"><span style="top:-5.602048em;"><span class="pstrut" style="height:3.341392em;"></span><span class="eqn-num"></span></span><span style="top:-3.024656em;"><span class="pstrut" style="height:3.341392em;"></span><span class="eqn-num"></span></span><span style="top:-0.9486559999999993em;"><span class="pstrut" style="height:3.341392em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.052736000000001em;"><span></span></span></span></span></span></span></span></span></p><p><strong>变换矩阵计算：</strong></p><p>先平移：(平移坐标轴的变换相当于原点平移的逆变换)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mo>−</mo><mi>e</mi><mi>y</mi><mi>e</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>z</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mtext> </mtext></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">T(-eye) =\left[\begin{array}{cccc}1&amp;0&amp;0&amp;-eye_x\\0&amp;1&amp;0&amp;-eye_y\\0&amp;0&amp;1&amp;-eye_z\\0&amp;0&amp;0&amp;1\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">eye</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace"> </span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>再旋转：（利用原坐标系下坐标轴的方向向量经过坐标轴变换后的向量求解变换矩阵）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">R\left[\begin{array}{cccc}x_x^c&amp;y_x^c&amp;z_x^c&amp;0\\x_y^c&amp;y_y^c&amp;z_y^c&amp;0\\x_z^c&amp;y_z^c&amp;z_z^c&amp;0\\0&amp;0&amp;0&amp;1\\\end{array}\right]=\left[\begin{array}{cccc}1&amp;0&amp;0&amp;0\\0&amp;1&amp;0&amp;0\\0&amp;0&amp;1&amp;0\\0&amp;0&amp;0&amp;1\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8231079999999995em;vertical-align:-2.1615539999999998em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.661554em;"><span style="top:-4.821554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1615539999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.661554em;"><span style="top:-4.821554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1615539999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.661554em;"><span style="top:-4.821554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1615539999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.661554em;"><span style="top:-4.821554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.3984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1984460000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1615539999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>解得矩阵R为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">R = \left[\begin{array}{cccc}x_x^c&amp;x_y^c&amp;x_z^c&amp;0\\y_x^c&amp;y_y^c&amp;y_z^c&amp;0\\z_x^c&amp;z_y^c&amp;z_z^c&amp;0\\0&amp;0&amp;0&amp;1\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.869324000000001em;vertical-align:-2.1846620000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>最终的变换矩阵M为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mo>−</mo><mi>e</mi><mi>y</mi><mi>e</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>x</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>x</mi></msub><mo>+</mo><msubsup><mi>x</mi><mi>y</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>y</mi></msub><mo>+</mo><msubsup><mi>x</mi><mi>z</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>y</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><msubsup><mi>y</mi><mi>x</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>x</mi></msub><mo>+</mo><msubsup><mi>y</mi><mi>y</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>y</mi></msub><mo>+</mo><msubsup><mi>y</mi><mi>z</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>x</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>y</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>z</mi><mi>z</mi><mi>c</mi></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><msubsup><mi>z</mi><mi>x</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>x</mi></msub><mo>+</mo><msubsup><mi>z</mi><mi>y</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>y</mi></msub><mo>+</mo><msubsup><mi>z</mi><mi>z</mi><mi>c</mi></msubsup><mi>e</mi><mi>y</mi><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M=RT(-eye)=\left[\begin{array}{cccc}x_x^c&amp;x_y^c&amp;x_z^c&amp;-(x^c_xeye_x+x^c_yeye_y+x_z^ceye_z)\\y_x^c&amp;y_y^c&amp;y_z^c&amp;-(y^c_xeye_x+y^c_yeye_y+y_z^ceye_z)\\z_x^c&amp;z_y^c&amp;z_z^c&amp;-(z^c_xeye_x+z^c_yeye_y+z_z^ceye_z)\\0&amp;0&amp;0&amp;1\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">eye</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.869324000000001em;vertical-align:-2.1846620000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6846620000000003em;"><span style="top:-4.8446620000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.621554em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.398446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ey</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.1753379999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1846620000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><p>投影变换（将眼睛坐标系中的物体模型投影到成像平面，形成二维图像。）</p><ul><li>透视投影</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gungodwvt6j60l40b4ab202.jpg" alt="image-20210920222448132" style="zoom:50%;" /><ul><li>正视投影：投影中心到图像平面的距离是无穷远</li></ul><p>例如投影到xoy平面上：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gunhon4u78j30du0acglo.jpg" alt="image-20210920230223759" style="zoom: 50%;" /><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>M</mi><mrow><mi>o</mi><mi>r</mi><mi>t</mi><mi>h</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_{orth}=\left[\begin{array}{cccc}1&amp;0&amp;0&amp;0\\0&amp;1&amp;0&amp;0\\0&amp;0&amp;0&amp;0\\0&amp;0&amp;0&amp;1\\\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">or</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h3 id="5-向量与法向量的变换">5. 向量与法向量的变换</h3><p>平移、旋转、均匀缩放能保持法向量的正确性，而错切不行。我们可以通过下面的公式计算法向量的变换矩阵：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gunjlcdabzj60tm06ewer02.jpg" alt="image-20210920231220882" style="zoom: 50%;" /><p>切向量满足变换矩阵关系：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>v</mi><mrow><mi>W</mi><mi>S</mi></mrow></msub><mo>=</mo><mi>M</mi><mtext> </mtext><msub><mi>v</mi><mrow><mi>O</mi><mi>S</mi></mrow></msub></mrow><annotation encoding="application/x-tex">v_{WS}=M\ v_{OS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>如图可知，由垂直关系可知：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>n</mi><mrow><mi>O</mi><mi>S</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><msub><mi>v</mi><mrow><mi>O</mi><mi>S</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n_{OS}^\top v_{OS} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>等价变换可得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>n</mi><mrow><mi>O</mi><mi>S</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><mo stretchy="false">(</mo><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>M</mi><mo stretchy="false">)</mo><msub><mi>v</mi><mrow><mi>O</mi><mi>S</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n_{OS}^\top(M^{-1}M) v_{OS} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>由矩阵乘法的结合律可得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msubsup><mi>n</mi><mrow><mi>O</mi><mi>S</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>M</mi><msub><mi>v</mi><mrow><mi>O</mi><mi>S</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">(n_{OS}^\top M^{-1})(Mv_{OS}) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>化简得</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msubsup><mi>n</mi><mrow><mi>O</mi><mi>S</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><msub><mi>v</mi><mrow><mi>W</mi><mi>S</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">(n^\top_{OS}M^{-1})v_{WS} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>由此可得</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>n</mi><mrow><mi>W</mi><mi>S</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><mo>=</mo><msubsup><mi>n</mi><mrow><mi>O</mi><mi>S</mi></mrow><mi mathvariant="normal">⊤</mi></msubsup><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">n^\top_{WS} = n^\top_{OS}M^{-1} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>故</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mrow><mi>W</mi><mi>S</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mi mathvariant="normal">⊤</mi></msup><msub><mi>n</mi><mrow><mi>O</mi><mi>S</mi></mrow></msub></mrow><annotation encoding="application/x-tex">n_{WS}=(M^{-1})^\top n_{OS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">OS</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络学习笔记1：概述</title>
      <link href="/2021/09/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%A6%82%E8%BF%B0/"/>
      <url>/2021/09/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/NetWork/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>红色字体为PPT上强调的重点</li><li>蓝色字体为老师上课口头说得，部分也会是重点</li><li>标题带*的为该章核心知识</li></ul></blockquote><h2 id="1-计算机网络的定义与特征">1. 计算机网络的定义与特征</h2><ol><li>定义：以能够互相<font color=red>共享资源</font>的方式互联起来的<font color=red>自治计算机系统</font>的集合</li><li>主要特征：<ol><li>资源共享。<font color=blue>计算机网络中共享三类资源：软件、硬件和数据。（早期主要共享硬件资源、目前数据资源共享最多、云计算属于共享硬件资源）</font></li><li>分布在<font color=red>不同地理位置</font>的<font color=red>自治系统</font>。<font color=blue>（独立自主的确定、完成自己工作的系统）</font></li><li>遵循一定的规则——“<font color=red>协议</font>”</li></ol></li></ol><h2 id="2-计算机网络的发展历程（-）">2. 计算机网络的发展历程（*）</h2><h3 id="1-以单处理机为中心的多终端联机系统">1. 以单处理机为中心的多终端联机系统</h3><ol><li><p>样式图：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guheqfyvuwj60ge0g4mxo02.jpg" alt="image-20210915164653556" style="zoom: 50%;" /></li><li><p>特征：</p><ul><li><p>以单处理机为中心的联机网络。<font color=blue>各个终端最大限度的共享中央主机的处理能力</font></p></li><li><p>集中式控制。<font color=blue>集中式控制便于管理、安全</font></p></li></ul></li><li><p>缺点：</p><ul><li><p>可靠性差，单点故障导致网络瘫痪。<font color=red>(核心)</font></p></li><li><p>主机负荷重。<font color=blue>（体现在两个方面：1. 所有来自终端的计算都需要在主机处理。2. 所有终端间的通信都需要主机处理。）</font></p></li><li><p>线路利用率低</p></li></ul></li><li><p>改进：多点通信线路、集中器（前端处理机）</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guhf4i64igj60zu0au75902.jpg" alt="image-20210915164734548" style="zoom: 33%;" /></li></ol><h3 id="2-分组交换网络">2. 分组交换网络</h3><ol><li><p>样式图：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guhf4ji8awj60lg0ikabb02.jpg" alt="image-20210915164918826" style="zoom:50%;" /></li><li><p>特征：</p><ul><li>网络由集中式转变为分布式，以多主机为中心，网络结构从“主机-终端”转变为“主机-主机”，可靠性提高</li><li>采用了网络分层的思想，产生<font color=red>通信子网</font>（负责传输数据）和<font color=red>资源子网</font>（负责信息处理）</li><li>数据以<font color=red>分组</font>为单位进行存储、处理、转发</li></ul></li><li><p>缺点：</p><ul><li>分布式控制管理起来相对复杂</li><li>随着主机数量增加，网络结构变得复杂，需要解决更复杂的数据通信问题</li></ul></li><li><p>补充知识：</p><ul><li><p>有关分组的几个概念：</p><ol><li><p>报文：传输数据的原始内容</p></li><li><p>分组：将数据分为有长度上限的多个组进行传输</p></li><li><p>信元：将数据分为等长的信元发送信息</p></li></ol></li><li><p>数据分组传输的原因：</p><ol><li><p>保证给用户传输数据的公平性；</p></li><li><p>防止超出用户的内存；</p></li><li><p>传输出错后只需要重发错误段等。</p></li></ol></li><li><p>中间结点对数据先存储的原因：</p><ol><li><p>方便路由给多个后序结点</p></li><li><p>网络传输上限变低时可以采取多次传输</p></li><li><p>方便传输出错后再次传输</p></li></ol></li></ul></li></ol><h3 id="3-体系结构标准化网络">3. 体系结构标准化网络</h3><ol><li>厂商标准：IBM-SNA、DEC-DNA</li><li>国际标准：ISO-OSI/RM（未被广泛使用）</li><li>事实标准：TCP/IP协议集</li></ol><h3 id="4-计算机网络蓬勃发展">4. 计算机网络蓬勃发展</h3><ol><li>主要推力：<font color=red>局域网</font>、<font color=red>因特网</font>的发展<ul><li><font color=blue>3W服务是因特网发展的主要推力</font></li></ul></li><li>“三网”合一：<font color=red>电信网</font>、<font color=red>计算机互联网</font>和<font color=red>有线电视网</font>将趋于相互渗透和相互融合。</li><li>全光网络：骨干网和接入网采用<font color=red>光纤</font>作为传输介质</li><li>物联网：物物相连的互联网</li></ol><h2 id="3-计算机网络的分类">3. 计算机网络的分类</h2><ol><li>按覆盖范围：<ol><li>局域网(Local Area Network, LAN)：早期使用广播方式，现在采用点到点</li><li>城域网(Metropolitan Area Network, MAN)</li><li>广域网(Wide Area Network, WAN)：使用点到点方式</li></ol></li><li>按其他标准：<ol><li>传输技术：广播式网络、点到点式网络</li><li>通信介质：有线网、无线网</li><li>按通信速率：高、中、低速（宽带网络与窄带网络）</li><li>按使用用户：公网、专网</li><li>按网络控制：分布式、集中式</li><li>网络应用环境 ：部门、企业、校园</li></ol></li></ol><h2 id="4-计算机网络的结构（-）">4. 计算机网络的结构（*）</h2><ol><li><p>理解：<font color=blue>传输信道不等于传输介质，前者强调逻辑结构，后者强调物理结构。</font></p></li><li><p>物理结构：</p><ol><li><p>拓扑结构的定义：采用拓扑学的方法抽象的网络结构，研究计算机网络中“点”和“线”构成的几何图形。</p></li><li><p>拓扑结构的种类：总线型、星型、环型、树型、网状型等</p><ul><li><p>总线型拓扑<font color=blue>（曾经常见，目前少见）（只能用广播）</font></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujcdtpnouj60oa0caq3r02.jpg" alt="image-20210917084041626" style="zoom: 50%;" /><ol><li>特征：所有结点都连接到一条共享总线上</li><li>优点：线路长度短、布线容易</li><li>缺点：故障扩散性、故障定位困难</li></ol></li><li><p>星型拓扑<font color=blue>（目前主要）（可以用广播，也可以用点到点）</font></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujc08vum9j60fq0esjrz02.jpg" alt="image-20210917084342441" style="zoom:50%;" /><ol><li><p>特征：中央节点通过点到点链路连接各节点</p></li><li><p>优点：</p><ul><li><p>建网灵活</p></li><li><p>便于集中式控制</p></li><li><p>除中央节点外其它节点故障不扩散</p></li></ul></li><li><p>缺点：</p><ul><li>线路长度长，布线难</li><li>依赖于中央节点</li></ul></li></ol></li><li><p>环型拓扑</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujc7bidvcj60hy0fet9002.jpg" alt="image-20210917085031906" style="zoom:50%;" /><ol><li>特征：首尾相连的总线型结构</li><li>优点：最适合采用<font color=red>光纤</font></li><li>缺点：对环路可靠性的依赖性强</li></ol></li><li><p>树型拓扑</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujeuwnuj9j60iu0d8mxj02.jpg" alt="image-20210917090219112" style="zoom:50%;" /><ol><li>特征：由根和叶节点组成</li><li>优点：属于分层网络，具有一定容错能力</li><li>缺点：属于集中式控制，对上层节点依赖性强</li></ol></li><li><p>网状型拓扑：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gujeuvo9hoj60ji0fiwf102.jpg" alt="image-20210917090349445" style="zoom:50%;" /><ol><li><p>特征：没有明晰特征的结构</p></li><li><p>优点：可靠性高（两个结点间有多条网络）</p></li><li><p>缺点：</p><ul><li>通信线路冗余大</li><li>传输效率低</li></ul></li></ol></li></ul></li><li><p>网络拓扑结构的选择（可略过）：</p><ol><li>传输介质</li><li>介质访问控制方法</li><li>费用、灵活性、可靠性</li></ol></li></ol></li><li><p>逻辑结构：逻辑连接方式、数据传输方式</p><ul><li><p>广播式网络(broadcast networks)</p><ol><li><p>基本特点：</p><ul><li>所有计算机<font color=red>共享</font>一条通信信道</li><li>任一台计算机发出的信息可以<font color=red>直接</font>被其他<font color=red>所有</font>计算机接收</li><li>两台以上计算机同时发送会产生<font color=red>冲突</font></li></ul></li><li><p>关键技术 ：</p><ul><li><p>介质访问控制方法</p></li><li><p>冲突型方法：发现冲突、避免冲突、解决冲突</p></li></ul></li></ol></li><li><p>点到点式传输网络</p><ol><li>基本特点：<ul><li>一条线路连接两个网络互连设备<font color=red>（点到点）</font></li><li>一般情况下，两台计算机间的传输要经过<font color=red>多台</font>网络互连设备</li><li>一般情况下，两台计算机间的传输有<font color=red>多条路径</font>可供选择</li></ul></li><li>关键技术：路由选择</li></ol></li></ul></li><li><p>举例（补充）：</p><ol><li>集线器：只能以广播形式传输<ul><li>缺点：所有结点共享带宽、安全性不足、所有端口的带宽必须一致</li><li>网卡的两种工作模式：普通模式、混合模式</li></ul></li><li>交换机：主要以点到点形式传播<ul><li>缺点：转发时延增加</li><li>优点：结点带宽和交换机带宽一致、安全性好、有缓存可以连接不同带宽网口</li></ul></li><li>路由器：只能以点到点形式传播<ul><li>不能直接使用，必须先配好路由表</li></ul></li></ol></li></ol><h2 id="5-标准化组织（了解）">5. 标准化组织（了解）</h2><ol><li>国际标准化组织—— ISO<ul><li>义务非条约组织</li></ul></li><li>国际电信联盟——ITU</li><li>Internet标准组织<ul><li>因特网工程任务部(IETF)</li><li>因特网研究任务部(IRTF)</li><li>Internet编号管理局(IANA)</li><li>lRFC（Request For Comments)：Internet的标准几乎都是以RFC的形式提出。</li></ul></li><li>其它标准化组织<ul><li>NIST：美国国家标准和技术研究所，美国商业部的标准化机构</li><li>ANSI：美国国家标准研究所，ISO 的美国代表</li><li>IEEE：电器电子工程师协会，发表行业标准。例如IEEE 802，后成为ISO 8002。</li><li>ATM Forum：ATM论坛</li><li>OIF（Optical Internetworking Forum）：光纤互连网络论坛</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习学习笔记：模型评估与选择</title>
      <link href="/2021/09/13/AI/MachineLearning/ModelEvaluationAndSelection/"/>
      <url>/2021/09/13/AI/MachineLearning/ModelEvaluationAndSelection/</url>
      
        <content type="html"><![CDATA[<h2 id="1-经验误差与过拟合">1. 经验误差与过拟合</h2><ol><li>错误率：分类错误的样本数占样本总数的比例</li><li>精度  = 1 - 错误率</li><li>误差：学习器的实际预测输出与样本的真实输出之间的差异</li><li>训练误差或经验误差：学习器在训练集上的误差</li><li>泛化误差：学习器在新样本上的误差</li><li>过拟合：由于学习能力过于强大，以至于把训练样本所包含的不太一般的特征都学到了。过拟合无法彻底避免，我们所能做的只是缓解，或者去减少其风险。</li><li>机器学习中的模型选择问题，最理想的解决方案就是评估模型的泛化误差，并选择泛化误差最小的模型。</li></ol><h2 id="2-评估方法">2. 评估方法</h2><p>通常，我们可通过实验测试来对学习器的<strong>泛化误差</strong>进行评估并进而做出选择。为此，需使用一个“测试集”来测试学习器对新样本的判别能力，然后以测试集上的“测试误差&quot; 作为泛化误差的近似。通常我们假设测试样本也是从样本真实分布中<strong>独立同分布</strong>采样而得。但需注意的是，测试集应该尽可能与训练集互斥，即测试样本尽量不在训练集中出现、未在训练过程中使用过。</p><h3 id="1-留出法">1. 留出法</h3><p>“留出法”直接将数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>划分为两个互斥的集合，其中一个集合作为训练集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，另一个作为测试集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mi>S</mi><mo>∪</mo><mi>T</mi><mo separator="true">,</mo><mi>S</mi><mo>∩</mo><mi>T</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">D= S\cup T,S\cap T=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>。在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>上训练出模型后,用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>来评估其测试误差，作为对泛化误差的估计。</p><p>分类的注意事项：</p><ol><li>划分时要保持各类别比例相似</li><li>一般要采用若干随机划分、重复进行实验评估后取平均值作为留出法的评估结果</li><li>常见做法是将大约<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi mathvariant="normal">/</mi><mn>3</mn><mo>∼</mo><mn>4</mn><mi mathvariant="normal">/</mi><mn>5</mn></mrow><annotation encoding="application/x-tex">2/3\sim4/5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2/3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4/5</span></span></span></span>的样本用于训练，剩余样本用于测试。</li></ol><h3 id="2-交叉验证法">2. 交叉验证法</h3><p>“交叉验证法”先将数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>划分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>个大小相似的互斥子集，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><msub><mi>D</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>D</mi><mn>2</mn></msub><mo>∪</mo><mo>⋯</mo><mo>∪</mo><msub><mi>D</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>D</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>D</mi><mi>j</mi></msub><mo>=</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">(</mo><mi>i</mi><mo mathvariant="normal">≠</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D= D_1\cup D_2\cup\dots\cup D_k, D_i∩D_j=\emptyset (i\neq j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∅</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>。每个子集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都尽可能保持数据分布的一致性，即从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中通过分层采样得到。然后，每次用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个子集的并集作为训练集，余下的那个子集作为测试集；这样就可获得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>组训练/测试集，从而可进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>次训练和测试，最终返回的是这<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>个测试结果的<strong>均值</strong>。显然，交叉验证法评估结果的稳定性和保真性在很大程度上取决于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>的取值.为强调这一点，通常把交叉验证法称为“k折交叉验证”。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>最常用的取值是10，此时称为10折交叉验证；其他常用的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>值有5、20等</p><p>与留出法相似，将数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>划分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>个子集同样存在多种划分方式。为减小因样本划分不同而引入的差别，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>折交叉验证通常要随机使用不同的划分重复<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>次，最终的评估结果是这<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>次<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>折交叉验证结果的均值，例如常见的有“10次10折交叉验证”。</p><p>特殊的交叉验证法：留一法，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>为数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>的样本大小。</p><h3 id="3-自助法">3. 自助法</h3><p>“自助法”是一个比较好的解决方案，它直接以自助采样法为基础。给定包含m个样本的数据集D，我们对它进行采样产生数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">D&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，每次随机从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中挑选一个样本，将其拷贝放入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">D&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，然后再将该样本放回初始数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中，使得该样本在下次采样时仍有可能被采到；这个过程重复执行m次后，我们就得到了包含m个样本的数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">D&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，这就是自助采样的结果。显然，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中有一部分样本会在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">D&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>中多次出现，而另一部分样本不出现。可以做一个简单的估计，样本在m次采样中始终不被采到的概率是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msup><mo stretchy="false">)</mo><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">(1-\frac 1 m)^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span>,取极限得到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>m</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msup><mo stretchy="false">)</mo><mi>m</mi></msup><mo>→</mo><mfrac><mn>1</mn><mi>e</mi></mfrac><mo>≈</mo><mn>0.368</mn></mrow><annotation encoding="application/x-tex">\lim_{m\to \infty}(1-\frac 1 m)^m\to \frac 1 e\approx 0.368</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.45em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0.368</span></span></span></span></span></p><p>即通过自助采样，初始数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>中约有36.8%的样本未出现在采样数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">D&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><br>中，于是我们可将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">D&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>用作训练集，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi mathvariant="normal">\</mi><msup><mi>D</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">D\backslash D&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">\</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>用作测试集；这样，实际评估的模型与期望评估的模型都使用m个训练样本，而我们仍有数据总量约<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">1/3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/3</span></span></span></span>的、没在训练集中出现的样本用于测试。这样的测试结果，亦称“包外估计”。</p><p>自助法在<strong>数据集较小、难以有效划分训练/测试集</strong>时很有用；此外，自助法能从初始数据集中产生多个不同的训练集，这对集成学习等方法有很大的好处。然而，自助法产生的数据集改变了初始数据集的分布，这<strong>会引入估计偏差</strong>。因此，在初始数据量足够时，留出法和交叉验证法更常用一些。</p><h3 id="4-调参与最终模型">4. 调参与最终模型</h3><p>常用的做法是对每个参数选点一个范围和步长进行训练。参数过多会产生巨大的计算量。</p><h2 id="3-性能度量">3. 性能度量</h2><p>对学习器的泛化性能进行评估，不仅需要有效的实验估计方法，还需要有衡量模型泛化能力的评价标准，这就是性能度量。</p><p>回归任务最常用的性能度量是“<strong>均方误差</strong>”：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E(f;D)=\frac 1 m \sum_{i=1}^m(f(x_i)-y_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>一般化，对于数据分布D和概率密度函数p(·)，均方误差可描述为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∫</mo><mrow><mi>x</mi><mo>∈</mo><mi>D</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">E(f;D)=\int_{x\in D}(f(x)-y)^2p(x)dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29932em;vertical-align:-0.9393199999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.433619em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9393199999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></span></p><h3 id="1-错误率与精度">1. 错误率与精度</h3><ol><li>错误率的定义：</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mi>π</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(f;D) = \frac 1 m\sum_{i=1}^m \pi(f(x_i)\neq y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ol start="2"><li>精度的定义：</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>a</mi><mi>c</mi><mi>c</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mi>π</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}acc(f;D) &amp;= \frac 1 m\sum_{i=1}^m \pi(f(x_i)= y_i)\\&amp; = 1-E(f;D)\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.729066em;vertical-align:-2.1145329999999998em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6145330000000007em;"><span style="top:-4.614533000000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">cc</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-2.1968640000000006em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1145329999999998em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6145330000000007em;"><span style="top:-4.614533000000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.1968640000000006em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1145329999999998em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6145330000000007em;"><span style="top:-4.614533000000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="eqn-num"></span></span><span style="top:-2.1968640000000006em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1145329999999998em;"><span></span></span></span></span></span></span></span></span></p><ol start="3"><li>一般化错误率的定义：</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msub><mo>∫</mo><mrow><mi>x</mi><mo>∈</mo><mi>D</mi></mrow></msub><mi>π</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><mi>y</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">E(f;D) = \frac 1 m\int_{x\in D} \pi(f(x)\neq y)p(x) dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29932em;vertical-align:-0.9393199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.433619em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9393199999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></span></p><ol start="4"><li>一般化精度的定义：</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>a</mi><mi>c</mi><mi>c</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msub><mo>∫</mo><mrow><mi>x</mi><mo>∈</mo><mi>D</mi></mrow></msub><mi>π</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>y</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">;</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}acc(f;D) &amp;=  \frac 1 m\int_{x\in D} \pi(f(x)= y)p(x) dx\\&amp; = 1-E(f;D)\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.0993200000000005em;vertical-align:-1.7996600000000003em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2996600000000003em;"><span style="top:-4.29966em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">cc</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-2.22034em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7996600000000003em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2996600000000003em;"><span style="top:-4.29966em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.433619em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9393199999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span><span style="top:-2.22034em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7996600000000003em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2996600000000003em;"><span style="top:-4.29966em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="eqn-num"></span></span><span style="top:-2.22034em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7996600000000003em;"><span></span></span></span></span></span></span></span></span></p><h3 id="2-查准率、查全率与F1">2. 查准率、查全率与F1</h3><p>对于二分类问题，可将样例根据其真实类别与学习器预测类别的组合划<br>分为真正例true positive)、假正例(false positive)、 真反例(true negative)、假反例(false negative)四种情形，令TP、FP、TN、FN分别表示其对应的样例数，则显然有TP+ FP+TN + FN =样例总数。分类结果的“混淆矩阵”如下表所示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gua7edyilfj60e605omxc02.jpg" alt="image-20210909111406050" style="zoom: 67%;" /><p>查准率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>的定义为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P = \frac{TP}{TP+FP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>查全率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>的定义为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R = \frac{TP}{TP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">FN</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>查准率和查全率是一对矛盾的度量。一般来说，查准率越高时，查全率往往越低；而查全率越高时，查准率往往越低。</p><p>我们把以查准率为纵轴、查全率为横轴做出的曲线称为“P-R曲线”，其图像称为“P-R图像”。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guf5n71zi2j60eu0bcdgb02.jpg" alt="image-20210913180120266" style="zoom:67%;" /><p>P-R图像直观地显示出学习器在样本总体上的查重率、查准率。在进行比较使，如果一个学习器的曲线被另一个学习器完全“包住”，则可断言后者的性能优于前者，上图中学习器A的性能优于学习器C。</p><p>对于交叉的曲线，我们可以采用平衡点（BEP）进行比较，它是“查准率=查全率”时的取值。</p><p>然而，BEP还是过于简化了些，因此我们引入一个更为常用的度量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mn>2</mn><mo>×</mo><mi>P</mi><mo>×</mo><mi>R</mi></mrow><mrow><mi>P</mi><mo>+</mo><mi>R</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>2</mn><mo>×</mo><mi>T</mi><mi>P</mi></mrow><mrow><mtext>样例总数</mtext><mo>+</mo><mi>T</mi><mi>P</mi><mo>−</mo><mi>T</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F_1  =\frac{2\times P\times R}{P+R}=\frac{2\times TP}{样例总数+TP-TN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">样例总数</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">TN</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>在一些应用中，我们对查准率和查全率的重视程度不同，因此引入一个更为一般的度量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>β</mi></msub></mrow><annotation encoding="application/x-tex">F_\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，它的定义为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mi>β</mi></msub><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msup><mi>β</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>×</mo><mi>P</mi><mo>×</mo><mi>R</mi></mrow><mrow><mo stretchy="false">(</mo><msup><mi>β</mi><mn>2</mn></msup><mo>×</mo><mi>P</mi><mo stretchy="false">)</mo><mo>+</mo><mi>R</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F_\beta = \frac{(1+\beta^2)\times P\times R}{(\beta^2\times P)+R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.427108em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\beta&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>度量了查全率对查准率的相对重要性。</p><p>当我们要综合考虑n个二分类混淆矩阵时，有如下两种方法：</p><p>第一种是直接计算各个混淆矩阵的查准率和查全率，再计算平均值，得到宏查准率（macro-P）、宏查全率（macro-R），以及相应的宏F1（macro-F1）。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>P</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>P</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>m</mi><mi>a</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>R</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>R</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>m</mi><mi>a</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>F</mi><mn>1</mn><mo>=</mo><mfrac><mrow><mn>2</mn><mo>×</mo><mi>m</mi><mi>a</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>P</mi><mo>×</mo><mi>m</mi><mi>a</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>R</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>P</mi><mo>+</mo><mi>m</mi><mi>a</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>R</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">macro-P = \frac 1 n\sum_{i=1}^n P_i\\macro-R = \frac 1 n\sum_{i=1}^n R_i\\macro-F1 = \frac{2\times macro-P\times macro-R}{macro-P + macro-R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>第二种是先将混淆矩阵对应的元素进行平均，得到TP、FP、TN、FN的平均值，再基于平均值计算出微查准率（micro-P）、微查全率（micro-R）和微F1（micro-F1）。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>P</mi><mo>=</mo><mfrac><mover accent="true"><mrow><mi>T</mi><mi>P</mi></mrow><mo stretchy="true">‾</mo></mover><mrow><mover accent="true"><mrow><mi>T</mi><mi>P</mi></mrow><mo stretchy="true">‾</mo></mover><mo>+</mo><mover accent="true"><mrow><mi>F</mi><mi>P</mi></mrow><mo stretchy="true">‾</mo></mover></mrow></mfrac><mspace linebreak="newline"></mspace><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>R</mi><mo>=</mo><mfrac><mover accent="true"><mrow><mi>T</mi><mi>P</mi></mrow><mo stretchy="true">‾</mo></mover><mrow><mover accent="true"><mrow><mi>T</mi><mi>P</mi></mrow><mo stretchy="true">‾</mo></mover><mo>+</mo><mover accent="true"><mrow><mi>F</mi><mi>N</mi></mrow><mo stretchy="true">‾</mo></mover></mrow></mfrac><mspace linebreak="newline"></mspace><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>F</mi><mn>1</mn><mo>=</mo><mfrac><mrow><mn>2</mn><mo>×</mo><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>P</mi><mo>×</mo><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>R</mi></mrow><mrow><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>P</mi><mo>+</mo><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi><mo>−</mo><mi>R</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">micro-P = \frac {\overline{TP}}{\overline{TP}+\overline{FP}}\\micro-R = \frac {\overline{TP}}{\overline{TP}+\overline{FN}}\\micro-F1 = \frac{2\times micro-P \times micro-R}{micro-P + micro-R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">mi</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.41699em;vertical-align:-0.8566600000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.56033em;"><span style="top:-2.22667em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8566600000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">mi</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.41699em;vertical-align:-0.8566600000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.56033em;"><span style="top:-2.22667em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">FN</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8566600000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">mi</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">mi</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">mi</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">mi</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">mi</span><span class="mord mathnormal">cro</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="3-ROC和AUC">3. ROC和AUC</h3><p>ROC全称是受试者工作特征曲线。我们根据机器学习的预测结果对样本进行排序，按此顺序逐个把样本作为正例进行预测，每次计算出两个重要量的值，分别以它们为横、纵轴作图即可得到ROC曲线。其纵轴为“真正例率”（TPR），横轴为“假正例率”（FPR），两者定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>F</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>F</mi><mi>P</mi></mrow><mrow><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">TPR = \frac{TP}{TP+FN}\\FPR = \frac{FP}{FP+TN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">TPR</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">FN</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">FPR</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">TN</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guf9y3lre5j60z20e675w02.jpg" alt="image-20210913194909766" style="zoom: 50%;" /><p>上图为两个ROC图，显示任务中只能绘制出如右图所示有限个测试坐标对的近似图。</p><p>绘图过程为：给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">m^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>个正例和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mo>−</mo></msup></mrow><annotation encoding="application/x-tex">m^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span>个反例，根据学习器预测结果对样例进行排序，然后把分类阈值设为最大，即把所有样例均预测为反例，此时真正例率和假正例率均为0,在坐标(0,0)处标记一个点。然后，将分类阈值依次设为每个样例的预测值，即依次将每个样例划分为正例，设前一个标记点坐标为(x,y)，当前若为真正例，则对应标记点的坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mfrac><mn>1</mn><msup><mi>m</mi><mo>+</mo></msup></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y+\frac {1}{m^+})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>；当前若为假正例，则对应标记点的坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mfrac><mn>1</mn><msup><mi>m</mi><mo>−</mo></msup></mfrac><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+\frac{1}{m^-},y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>,然后用线段连接相邻点即得。</p><p>与P-R曲线相似，若一个学习器的ROC曲线被另一个学习器的曲线完全”包住“，则可断言后者的性能优于前者；若两个学习器的ROC曲线发生交叉，则难以一般性地断言两者孰优孰劣。此时进行比较的依据是ROC曲线下的面积，即AUC。</p><p>AUC可以估算为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>U</mi><mi>C</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>+</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">AUC = \frac 1 2\sum_{i=1}^{m-1}(x_{i+1}-x_i)(y_i+y_{i+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>形式化地看，AUC考虑的是样本预测的排序质量，因此它与排序误差有着紧密的联系，给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">m^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>个正例和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mo>−</mo></msup></mrow><annotation encoding="application/x-tex">m^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span>个反例，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">D^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mo>−</mo></msup></mrow><annotation encoding="application/x-tex">D^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span>分别表示正、反集合，则排序损失定义为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>l</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><msup><mi>m</mi><mo>+</mo></msup><msup><mi>m</mi><mo>−</mo></msup></mrow></mfrac><munder><mo>∑</mo><mrow><msup><mi>x</mi><mo>+</mo></msup><mo>∈</mo><msup><mi>D</mi><mo>+</mo></msup></mrow></munder><munder><mo>∑</mo><mrow><msup><mi>x</mi><mo>−</mo></msup><mo>∈</mo><msup><mi>D</mi><mo>−</mo></msup></mrow></munder><mo stretchy="false">(</mo><mi>π</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mo>+</mo></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>f</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mo>−</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>π</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mo>+</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mo>−</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l_{rank} = \frac {1}{m^+m^-}\sum_{x^+\in D^+}\sum_{x^-\in D^-}(\pi (f(x^+)&lt;f(x^-))+\frac 1 2\pi(f(x^+)= f(x^-)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ank</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.65668em;vertical-align:-1.3352400000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8421299999999996em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3352400000000002em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8421299999999996em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3352400000000002em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.071331em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.071331em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mclose">)))</span></span></span></span></span></p><p>容易看出，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">l_{rank}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ank</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>就是ROC曲线上方的面积，有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>U</mi><mi>C</mi><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>l</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">AUC = 1-l_{rank}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ank</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h3 id="4-代价敏感错误率与代价曲线">4. 代价敏感错误率与代价曲线</h3>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学学习笔记：绪论</title>
      <link href="/2021/09/13/CG/CG%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%BB%AA%E8%AE%BA/"/>
      <url>/2021/09/13/CG/CG%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E7%BB%AA%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="1-概念">1.概念</h3><ol><li><p>主要内容：建模、绘制、交互</p></li><li><p>建模：在计算机中通过几何、图像、视频等可视媒体形式构建和表示物体模型</p></li><li><p>绘制：通过可视媒体呈现计算机中存储的物体模型</p></li><li><p>交互：通过计算机的输入、输出设备，以有效的方式对计算机中的模型进行操作</p></li><li><p>计算机图形学、计算机视觉与图像处理的关系</p></li></ol><h3 id="2-发展历程">2. 发展历程</h3><ul><li>Ivan Sutherland发明Sketchpad标志着计算机图形学的诞生</li></ul><img src="https://tva1.sinaimg.cn/large/008i3skNly1gukkw8eny9j60qw0a0gn202.jpg" alt="image-20210916081529373" style="zoom: 67%;" /><h3 id="3-现状">3. 现状</h3><ol><li><p>10个重要问题</p><ol><li>自然的三维交换技术</li><li>直观的三维交换系统</li><li>富有感情的机器人技术</li><li>绘画辅助技术</li><li>数学辅助技术</li><li>海量数据可视化技术</li><li>虚拟导游技术</li><li>高沉浸感技术</li><li>增强现实技术</li><li>混合现实技术</li></ol></li><li><p>研究热点</p><ol><li>城市大数据</li><li>海量图片/视频处理</li><li>高级语义影像处理</li><li>计算摄像学</li><li>计算美学</li></ol></li></ol><h3 id="4-应用">4. 应用</h3><ol><li>影视媒体</li><li>游戏娱乐</li><li>虚拟仿真和增强现实</li><li>工业设计与制造</li><li>文化与艺术</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年8月29日 周日 多云</title>
      <link href="/2021/08/29/%E6%97%A5%E8%AE%B0/2021%E5%B9%B48%E6%9C%8829%E6%97%A5/"/>
      <url>/2021/08/29/%E6%97%A5%E8%AE%B0/2021%E5%B9%B48%E6%9C%8829%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>人活着，总会一次又一次的被击倒，然后一次又一次的从原来爬起来，渴望涅槃重生。原来的那条道被堵死后，新的那扇门也随之打开，希望可以抓住新的机遇。</p><p>前段时间压抑久了，一直在等待一个时刻去爆发，然后重生。我想，这个时刻已经到了。</p><p>晚饭过后，绕着一所学校独自漫步了四公里，晚风吹打在脸上，很舒适。一个人的时光，也这般的享受。</p><p>人生在世，就应该及时行乐。想当年秦皇汉武，引领过多少风骚。可如今，只是一抔黄土，化为乌有。两千年后，谁会在乎曾经有一个人，在某个夜里，失落过，悲哀过，迷茫过。甚至，假如此刻，那个人从世界上消失，除了家人，又有谁会惦记。宇宙它有多宏大，而人类又有多渺小。当你的视角跨过空间、穿越时间，从浩瀚星空转到眼前那件件小事儿上，会发现现实有多么可笑。</p><p>人活着，本就不应该与外物攀比，只会更显得自己更加渺小。做人做事，也不必太在意外界的看法，当你成为一抔黄土后，那些东西又有什么价值。给自己背上太多的包袱，疲劳地活着，又是何必？人的一生不可能没有遗憾，或多或少也会辜负那么几个人。也许正是这样的残缺，才让“把握现在”显得更加弥足珍贵，才让自己不断地在跌倒后成长。只要我努力过了，争取过了，无论结局是好是坏，已经够了。</p><p>也正是因为人的渺小，人生的短暂，所以才要更加热爱自己，热爱自己的生活。只有自己才是最在意自己的人，这副躯体会陪伴着你80载，请好好善待它。所以，也需要更加努力，创造自己认可的自己，成为自己想成为的人，过自己想过得生活。别再为了那些不值得的事情影响了心态，开心快乐最重要嘛。</p><p>说不出华丽的辞藻，但我明白了什么才是，我想要的生活。</p>]]></content>
      
      
      <categories>
          
          <category> 杂想 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫学习笔记(七)：数据存储</title>
      <link href="/2021/08/25/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
      <url>/2021/08/25/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-文件存储">1.文件存储</h2><h3 id="1-TXT文本存储">1. TXT文本存储</h3><ul><li>使用<code>open()</code>方法打开文件：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;pos.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><p>第一个参数为文件的地址和名称。</p><p>第二个参数为打开方式：</p><table><thead><tr><th style="text-align:center">打开方式</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">r</td><td style="text-align:center">只读，指针在文件开头</td></tr><tr><td style="text-align:center">rb</td><td style="text-align:center">二进制只读，指针在文件开头</td></tr><tr><td style="text-align:center">r+</td><td style="text-align:center">读写，指针在文件开头</td></tr><tr><td style="text-align:center">rb+</td><td style="text-align:center">二进制读写，指针在文件开头</td></tr><tr><td style="text-align:center">w</td><td style="text-align:center">写入，存在则覆盖，不存在新建</td></tr><tr><td style="text-align:center">wb</td><td style="text-align:center">二进制写入，存在则覆盖，不存在新建</td></tr><tr><td style="text-align:center">w+</td><td style="text-align:center">读写，存在则覆盖，不存在新建</td></tr><tr><td style="text-align:center">wb+</td><td style="text-align:center">二进制读写，存在则覆盖，不存在新建</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">追加，存在则将指针放于文件结尾，不存在新建</td></tr><tr><td style="text-align:center">ab</td><td style="text-align:center">二进制追加，存在则将指针放于文件结尾，不存在新建</td></tr><tr><td style="text-align:center">a+</td><td style="text-align:center">读写，存在则将指针放于文件结尾，不存在新建</td></tr><tr><td style="text-align:center">ab+</td><td style="text-align:center">二进制读写，存在则将指针放于文件结尾，不存在新建</td></tr></tbody></table><ul><li>使用<code>write()</code>方法写入内容</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file.write(<span class="string">&#x27;str....&#x27;</span>)</span><br></pre></td></tr></table></figure><p>传入字符串即可</p><ul><li>使用<code>close()</code>方法关闭文件</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file.close()</span><br></pre></td></tr></table></figure><ul><li>使用<code>with as</code>语句简化写法</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;pos.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  f.write(<span class="string">&#x27;str...&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意，此时不需要使用<code>close()</code>方法关闭。</p><h3 id="2-JSON文件存储">2. JSON文件存储</h3><ul><li>引入<code>json库</code>:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br></pre></td></tr></table></figure><ul><li>将字符串类型字典转化为JSON形式字典：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = json.loads(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><ul><li>获得JSON形式字典的属性值：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line">data.get(<span class="string">&#x27;key&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>JSON的数据必须用<strong>双引号</strong>括起来</p></li><li><p>将JSON对象转化为字符串：</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span> = json.dumps(data)</span><br></pre></td></tr></table></figure><p>如果想保留缩进格式，则可以加上一个参数<code>indent</code>，代表缩进字符的个数。为了输出中文，还需要指定<code>ensure_ascii</code>为<code>False</code>。</p><h3 id="3-CSV文件存储">3. CSV文件存储</h3><p>CSV，全称Comma-Separated Values，中文名可以叫作逗号分隔值或字符分隔值，其文件以纯文本形式存储表格数据。</p><h3 id="1-写入">1. 写入</h3><ul><li>引入<code>csv</code>库</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br></pre></td></tr></table></figure><ul><li>打开<code>csv</code>文件</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">csvfile = <span class="built_in">open</span>(<span class="string">&#x27;mycsv.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>创建一个<code>csv.writer</code>对象</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">writer = csv.writer(csvfile)</span><br></pre></td></tr></table></figure><ul><li>使用<code>writerow()</code>方法，整行写入文件，传入的参数是一个列表</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">writer.writerow([<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>])</span><br></pre></td></tr></table></figure><ul><li><p>使用<code>close()</code>方法关闭<code>csv</code>文件</p></li><li><p>也可以使用<code>with as</code>语句的简化写法，此时不需要关闭文件</p></li></ul><h3 id="2-读取">2. 读取</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;mycsv.csv&quot;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>):</span><br><span class="line">reader = csv.reader(csvfile)</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line"><span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure><p>构造一个<code>Reader</code>对象，通过遍历输出每行的内容，每一行都是一个列表形式。</p><h2 id="2-数据库">2. 数据库</h2><h3 id="1-MySQL的存储">1. MySQL的存储</h3><ol><li><p>准备工作：下载并运行MySQL，安装好PyMySQL库。</p></li><li><p>连接数据库：</p><p>这里，首先尝试连接一下数据库。假设当前的MySQL运行在本地，用户名为root,密码为12345678,运行端口为3306。这里利用PyMySQL先连接MySQL,然后创建一个新的数据库 ，名字叫作spiders,代码如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">db = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password=<span class="string">&#x27;12345678&#x27;</span>,port=<span class="number">3306</span>)</span><br><span class="line">cursor = db.cursor()</span><br><span class="line">cursor.execute(<span class="string">&#x27;SELECT VERSION()&#x27;</span>)</span><br><span class="line">data = cursor.fetchone()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Database version:&#x27;</span>, data)</span><br><span class="line">cursor.execute(<span class="string">&quot;CREATE DATABASE spiders DEFAULT CHARACTER SET utf8&quot;</span>)</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><ul><li>通过PyMySQL的<code>connect()</code>方法声明一个MySQL连接对象db，此时需要传人MySQL运行的host (即IP )。由于MySQL在本地运行，所以传人的是localhost。 如果MySQL在远程运行，则传人其公网IP地址。后续的参数user即用户名，password即密码，port 即端口( 默认为3306)。</li><li>连接成功后，需要再调用<code>cursor()</code>方法获得MySQL的操作游标，利用游标来执行SQL语句。</li><li>这里我们执行了两句SQL，直接用<code>execute()</code>方法执行即可。</li><li>第一句SQL用于获得MySQL的当前版本，然后调用<code>fetchone()</code>方法获得第一条数据， 也就得到了版本号。</li><li>第二句SQL执行创建数据库的操作，数据库名叫作spiders,默认编码为UTF-8。由于该语句不是查询语句，所以直接执行后就成功创建了数据库spiders。接着，再利用这个数据库进行后续的操作。</li></ul></li><li><p>创建表</p><p>一般来说，创建数据库的操作只需要执行一次就好了。当然，我们也可以手动创建数据库。以后，我们的操作都在spiders数据库上执行。<br>创建数据库后，在连接时需要额外指定一个参数db。接下来，新创建一个数据表students，此时执行创建表的SQL语句即可。</p><p>下面代码为创建一个字段名为id、name、age，类型为varchar、varcahr、int的数据表。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">db = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password= <span class="string">&#x27;12345678&#x27;</span>,port=<span class="number">3306</span>,db=<span class="string">&#x27;spiders&#x27;</span>)</span><br><span class="line">cursor = db.cursor()</span><br><span class="line">sql = <span class="string">&#x27;CREATE TABLE IF NOT EXISTS students (id VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, age INT NOT NULL, PRIMARY KEY (id))&#x27;</span></span><br><span class="line">cursor.execute(sql)</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure></li><li><p>插入数据</p><p>这里插入一个学生信息，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = <span class="string">&#x27;20120001&#x27;</span></span><br><span class="line">user = <span class="string">&#x27;Bob&#x27;</span></span><br><span class="line">age = <span class="number">20</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password=<span class="string">&#x27;12345678&#x27;</span>,port=<span class="number">3306</span>,db=<span class="string">&#x27;spiders&#x27;</span>)</span><br><span class="line">cursor = db.cursor()</span><br><span class="line">sql = <span class="string">&#x27;INSERT INTO students(id,name,age) values (%s.%s,%s)&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    cursor.execute(sql,(<span class="built_in">id</span>,user,age))</span><br><span class="line">    db.commit()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    db.rollback()</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><ul><li><p>首先构造了一个SQL语句，其Values值用格式化符%s来实现。</p></li><li><p>值得注意的是，需要执行db对象的<code>commit()</code>方法才可实现数据插入，这个方法才是真正将语句提交到数据库执行的方法。对于数据插人、更新、删除操作，都需要调用该方法才能生效。</p></li><li><p>接下来，我们加了一层异常处理。如果执行失败，则调用<code>rollback()</code>执行数据回滚，相当于什么都没有发生过。</p></li><li><p>插入、更新和删除操作都是对数据库进行更改的操作，所有更改操作必须是一个事务，满足下列特性：</p><p>因此这些操作的标准写法均为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  cursor.execute(sql)</span><br><span class="line">  db.commit()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">  db.rollback()</span><br></pre></td></tr></table></figure></li><li><p>上述写法对数据改变的操作难度较大，可以考虑字典形式。</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;20120001&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Bob&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;age&#x27;</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line">table = <span class="string">&#x27;students&#x27;</span></span><br><span class="line">keys = <span class="string">&#x27;,&#x27;</span>.join(data.keys())</span><br><span class="line">values = <span class="string">&#x27;,&#x27;</span>.join([<span class="string">&#x27;%s&#x27;</span>] * <span class="built_in">len</span>(data))</span><br><span class="line">sql = <span class="string">&#x27;INSERT INTO &#123;table&#125;(&#123;keys&#125;) VALUES (&#123;values&#125;)&#x27;</span>.<span class="built_in">format</span>(table=table,keys=keys,values=values)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">if</span> cursor.execute(sql, <span class="built_in">tuple</span>(data.values())):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Successful&#x27;</span>)</span><br><span class="line">db.commit()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Failed&#x27;</span>)</span><br><span class="line">db.rollback()</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
            <tag> python编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP学习笔记(1)：计算机系统漫游</title>
      <link href="/2021/08/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/CSAPP/CSAPP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%BC%AB%E6%B8%B8/"/>
      <url>/2021/08/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/CSAPP/CSAPP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%BC%AB%E6%B8%B8/</url>
      
        <content type="html"><![CDATA[<p>计算机系统是由硬件和系统软件组成的，它们共同工作来运行应用程序。</p><p>我们通过跟踪hello程序的生命周期——创建、运行、输出、终止，来开始对系统的学习。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;hello, world\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-信息就是位-上下文">1. 信息就是位+上下文</h3><p>hello程序的源文件hello.c实际上以0和1组成的位序列存储在文件中。大部分的现代计算机系统都使用ASCII码来表示文本字符，实际上就是用一个唯一的单字节大小的整数值来表示每个字符。ASCII文本表示如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtk0vhjpyrj60s809uwg102.jpg" alt="image-20210817194345069" style="zoom:67%;" /><p>hello.c文件的表示方法说明了一个<strong>基本思想</strong>：系统中的所有信息都是由一串比特表示的，区分不同数据类型的唯一方法是我们读到这些数据对象时的上下文。</p><h3 id="2-程序被其他程序翻译成不同格式">2. 程序被其他程序翻译成不同格式</h3><p>上一步编写的源文件是人类能读懂的<strong>高级语言</strong>文件，需要被其他程序转化为一些列的<strong>低级机器指令</strong>。将这些指令按照一种称为<strong>可执行目标程序的格式</strong>打好包，并以二进制磁盘文件的形式存放起来。</p><p>在Unix系统中的，转化由编译器驱动完成，GCC编译器驱动程序读取源文件hello.c，并把它翻译成一个可执行目标文件hello。指令为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -o hello hello.c</span><br></pre></td></tr></table></figure><p>转化的过程分为四个阶段，执行这四个阶段的程序一起构成了编译系统：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtk990htj7j60sq04o74x02.jpg" alt="image-20210818003331597" style="zoom:67%;" /><ul><li><p>预处理阶段：预处理器根据字符#开头的命令，直接修改原始的C程序，通常以.i作为文件的扩展名。</p></li><li><p>编译阶段：编译器将文本文件hello.i翻译为文本文件hello.s，它包含一个汇编语言程序。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">main:</span><br><span class="line">subq$8,%rsp</span><br><span class="line">movl$.LCO,%edi</span><br><span class="line">callputs</span><br><span class="line">movl$0,%eax</span><br><span class="line">addq$8,%rsp</span><br><span class="line">ret</span><br></pre></td></tr></table></figure></li><li><p>汇编阶段：汇编器将hello.s翻译成机器语言指令，把这些指令打包成一种叫做可重定位目标程序的格式，并将结果保存在hello.o二进制文件中。</p></li><li><p>链接阶段：链接器负责合并有效的单独预编译好的目标文件，得到一个可执行目标文件hello文件，可被加载到内存中并由系统执行。</p></li></ul><h3 id="3-了解编译系统如何工作是大有益处的">3. 了解编译系统如何工作是大有益处的</h3><ul><li>优化程序性能。</li><li>理解链接时出现的错误。</li><li>避免安全漏洞。</li></ul><h3 id="4-处理器读并解释储存在内存中的指令">4. 处理器读并解释储存在内存中的指令</h3><p>此时要想在Unix系统上运行可执行目标文件hello，我们将它的文件名输入到称为shell的应用程序中：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">linux&gt;</span><span class="bash"> ./hello</span></span><br><span class="line">hello, world</span><br><span class="line"><span class="meta">linux&gt;</span></span><br></pre></td></tr></table></figure><p>shell是一个命令行解释器，它输出一个提示符，等待输入一个命令行，然后执行这个命令。如果该命令行的第一个单词不是一个内置的shell命令，那么shell就会假设这是一个可执行文件的名字，它将加载并运行这个文件。所以在此例中，shell将加载并运行hello程序，然后等待程序终止。hello程序在屏幕上输出它的消息，然后终止。shell随后输出一个提示符，等待下一个输入的命令行。</p><h4 id="1-系统的硬件组成">1. 系统的硬件组成</h4><ol><li><p><strong>总线</strong>：贯穿整个系统的是一组电子管道，称作总线，它携带信息字节并负责在各个部件间传递。通常总线被设计成传送定长的字节块，也就是字(word)。字中的字节数(即<strong>字长</strong>)是一个基本的系统参数，各个系统中都不尽相同。现在的大多数机器字长要么是4个字节(32位)，要么是8个字节(64位)。</p></li><li><p><strong>I/O设备</strong>：I/O(输人/输出)设备是系统与外部世界的联系通道。我们的示例系统包括四个I/O设备：作为用户输人的键盘和鼠标，作为用户输出的显示器，以及用于长期存储数据和程序的磁盘驱动器(简单地说就是磁盘)。最开始，可执行程序hello就存放在磁盘上。<br>每个I/O设备都通过一个<strong>控制器</strong>或<strong>适配器</strong>与<strong>I/O总线</strong>相连。控制器和适配器之间的区别主要在于它们的封装方式。控制器是I/O设备本身或者系统的主印制电路板(通常称作主板)上的芯片组。而适配器则是一块插在主板插槽上的卡。无论如何，它们的功能都是在I/O总线和I/O设备之间传递信息。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtkaav2l0cj60po0iqtaj02.jpg" alt="image-20210818010959063" style="zoom:67%;" /></li><li><p><strong>主存</strong>：主存是一个<strong>临时存储设备</strong>，在处理器执行程序时，用来存放程序和程序处理的数据。从物理上来说，主存是由一组<strong>动态随机存取存储器</strong>(DRAM)芯片组成的。从逻辑上来说，存储器是一个线性的字节数组，每个字节都有其<strong>唯一的地址</strong>(数组索引)，这些地址是从零开始的。一般来说，组成程序的每条机器指令都由不同数量的字节构成。与C程序变量相对应的数据项的大小是根据类型变化的。比如，在运行Linux的x86-64机器上，short类型的数据需要2个字节，int和float类型需要4个字节，而long和double类型需要8个字节。</p></li><li><p><strong>处理器</strong>：中央处理单元(CPU)，简称处理器，是解释(或执行)存储在<strong>主存</strong>中指令的引擎。处理器的核心是一个大小为一个字的存储设备(或寄存器)，称为<strong>程序计数器</strong>(PC)。在任何时刻，PC都指向主存中的某条机器语言指令(即含有该条指令的地址)。</p><p>从系统通电开始，直到系统断电，<strong>处理器一直在不断地执行程序计数器指向的指令</strong>，再更新程序计数器，使其指向下一条指令。处理器看上去是按照一个非常简单的指令执行模型来操作的，这个模型是由指令集架构决定的。在这个模型中，指令按照严格的顺序执行，而执行一条指令包含执行一系列的步骤。处理器从程序计数器指向的内存处读取指令，解释指令中的位，执行该指令指示的简单操作，然后更新PC，使其指向下一条指令，而这条指令并不一定和内存中刚刚执行的指令相邻。</p><p>这样的简单操作并不多，它们围绕着<strong>主存</strong>、<strong>寄存器文件</strong>(register file)和<strong>算术/逻辑单元</strong>(ALU)进行。寄存器文件是一个小的存储设备，由一些单个字长的寄存器组成，每个寄存器都有唯一的名字。ALU计算新的数据和地址值。下面是一些简单操作的例子，CPU在指令的要求下可能会执行这些操作。</p><ul><li><strong>加载</strong>：从主存复制一个字节或者一个字到寄存器，以覆盖寄存器原来的内容。</li><li><strong>存储</strong>：从寄存器复制一个字节或者一个字到主存的某个位置，以覆盖这个位置上原来的内容。</li><li><strong>操作</strong>：把两个寄存器的内容复制到ALU，ALU对这两个字做算术运算，并将结果存放到一个寄存器中，以覆盖该寄存器中原来的内容。</li><li><strong>跳转</strong>：从指令本身中抽取一个字，并将这个字复制到程序计数器(PC)中，以覆盖PC中原来的值。</li></ul><p>处理器看上去是它的指令集架构的简单实现，但是实际上现代处理器使用了非常复杂的机制来加速程序的执行。因此，我们将处理器的指令集架构和处理器的微体系结构区分开来：<strong>指令集架构</strong>描述的是每条机器代码指令的效果；而<strong>微体系结构</strong>描述的是处理器实际上是如何实现的。</p></li></ol><h4 id="2-运行hello程序">2. 运行hello程序</h4><p>初始时，shell 程序执行它的指令，等待我们输人一个命令。当我们在键盘上输入字符串“./hello” 后，shell程序将字符逐一读入寄存器，再把它存放到内存中，如图所示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtlg00wktbj60os0gidhk02.jpg" alt="image-20210819010234867" style="zoom:67%;" /><p>当我们在键盘上敲回车键时，shell 程序就知道我们已经结束了命令的输人。然后shell执行一系列指令来加载可执行的hello文件，这些指令将hello目标文件中的代码和数据从磁盘复制到主存。数据包括最终会被输出的字符串“hello, world\n”。<br>利用直接存储器存取(DMA)技术，数据可以不通过处理器而直接从磁盘到达主存。这个步骤如图所示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtlfroh78kj60se0h8q4w02.jpg" alt="image-20210819010441586" style="zoom:67%;" /><p>一旦目标文件hello中的代码和数据被加载到主存，处理器就开始执行hello程序的main程序中的机器语言指令。这些指令将“hello, world\n”字符串中的字节从主存复制到寄存器文件，再从寄存器文件中复制到显示设备，最终显示在屏幕上。这个步骤如图所示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtlftzdrkpj60r00gk40i02.jpg" alt="image-20210819010652672" style="zoom:67%;" /><h3 id="5-高速缓存至关重要">5. 高速缓存至关重要</h3><p>这个简单的示例揭示了一个重要的问题，即系统花费了大量的时间把信息从一个地方挪到另一个地方。hello 程序的机器指令最初是存放在磁盘上，当程序加载时，它们被复制到主存；当处理器运行程序时，指令又从主存复制到处理器。相似地，数据串“hello, world/n” 开始时在磁盘上，然后被复制到主存，最后从主存上复制到显示设备。从程序员的角度来看，这些复制就是开销，减慢了程序“真正”的工作。因此，系统设计者的一个主要目标就是使这些复制操作尽可能快地完成。<br>根据机械原理，<strong>较大的存储设备要比较小的存储设备运行得慢</strong>，而快速设备的造价远高于同类的低速设备。比如说，一个典型系统上的磁盘驱动器可能比主存大1000倍，但是对处理器而言，从磁盘驱动器上读取一个字的时间开销要比从主存中读取的开销大1000万倍。<br>类似地，一个典型的寄存器文件只存储几百字节的信息，而主存里可存放几十亿字节。然而，处理器从寄存器文件中读数据比从主存中读取几乎要快100倍。更麻烦的是，随着这些年半导体技术的进步，这种<strong>处理器与主存之间的差距</strong>还在持续增大。加快处理器的运行速度比加快主存的运行速度要容易和便宜得多。<br>针对这种处理器与主存之间的差异，系统设计者采用了更小更快的存储设备，称为<strong>高速缓存存储器</strong>(cache memory,简称为cache或高速缓存)，作为暂时的集结区域，存放处理器近期可能会需要的信息。下图展示了一个典型系统中的高速缓存存储器。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtmeu8szkpj60og09at9j02.jpg" alt="image-20210819211802165" style="zoom:67%;" /><p>位于处理器芯片上的<strong>L1高速缓存</strong>的容量可以达到数万字节，访问速度几乎和访问寄存器文件一样快。一个容量为数十万到数百万字节的更大的<strong>L2高速缓存</strong>通过一条特殊的总线连接到处理器。进程访问L2高速缓存的时间要比访问L1高速缓存的时间长5倍，但是这仍然比访问主存的时间快5~10倍。L1和L2高速缓存是用一种叫做<strong>静态随机访问存储器</strong>(SRAM)的硬件技术实现的。比较新的、处理能力更强大的系统甚至有三级高速缓存: L1、L2和<br>L3。系统可以获得一个很大的存储器，同时访问速度也很快，原因是利用了高速缓存的局部性原理，即程序具有访问局部区域里的数据和代码的趋势。通过让高速缓存里存放可能经常访问的数据，大部分的内存操作都能在快速的高速缓存中完成。</p><h3 id="6-存储设备形成层次结构">6. 存储设备形成层次结构</h3><p>在处理器和一个较大较慢的设备（如主存）之间插入一个更小更快的存储设备（例如高速缓存）的想法已经成为一个普遍的观念。实际上，每个计算机系统中的存储设备都被组织成了一个<strong>存储器层次结构</strong>，如图所示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtn04s2l9nj60u00hg41002.jpg" alt="image-20210820093449729" style="zoom:67%;" /><p>构中位于最顶部，也就是第0级或记为L0。这里我们展示的是三层高速缓存L1到L3，占据存储器层次结构的第1层到第3层。主存在第4层，以此类推。</p><p>存储器层次结构的主要思想是上一层的存储器作为低一层存储器的高速缓存。因此，寄存器文件就是L1的高速缓存，L1是L2的高速缓存，L2是L3的高速缓存，L3是主存的高速缓存，而主存又是磁盘的高速缓存。在某些具有分布式文件系统的网络系统中，本地磁盘就是存储在其他系统中磁盘上的数据的高速缓存。<br>正如可以运用不同的高速缓存的知识来提高程序性能一样，程序员同样可以利用对整个存储器层次结构的理解来提高程序性能。</p><h3 id="7-操作系统管理硬件">7. 操作系统管理硬件</h3><p>让我们回到hello程序的例子。当shell加载和运行hello程序时，以及hello程序输出自己的消息时，shell 和hello程序都没有直接访问键盘、显示器、磁盘或者主存。取而代之的是，它们依靠<strong>操作系统</strong>提供的服务。我们可以把操作系统看成是应用程序和硬件之间插人的一层软件，如图 所示。所有应用程序对硬件的操作尝试都必须通过操作系统。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtn0y42l8lj60fw04gdg002.jpg" alt="image-20210820100302460" style="zoom:67%;" /><p>操作系统有两个<strong>基本功能</strong>：</p><ol><li>防止硬件被失控的应用程序滥用；</li><li>向应用程序提供简单一致的机制来控制复杂而又通常大不相同的低级硬件设备。</li></ol><p>操作系统通过几个基本的抽象概念(<strong>进程</strong>、<strong>虚拟内存</strong>和<strong>文件</strong>)来实现这两个功能。如图所示，文件是对I/O设备的抽象表示，虚拟内存是对主存和磁盘1/0设备的抽象表示，进程则是对处理器、主存和I/O设备的抽象表示。我们将依次讨论每种抽象表示。</p><h4 id="1-进程">1. 进程</h4><p><strong>进程</strong>是操作系统对一个正在运行的程序的一种抽象。在一个系统上可以同时运行多个进程，而每个进程都好像在独占地使用硬件。而<strong>并发运行</strong>，则是说一个进程的指令和另一个进程的指令是<strong>交错执行</strong>的。在大多数系统中，需要运行的进程数是多于可以运行它们的CPU个数的。传统系统在一个时刻只能执行一个程序，而先进的多核处理器同时能够执行多个程序。无论是在单核还是多核系统中，一个CPU看上去都像是在并发地执行多个<br>进程，这是通过处理器在进程间切换来实现的。操作系统实现这种交错执行的机制称为<strong>上下文切换</strong>。为了简化讨论，我们只考虑包含一个CPU的单处理器系统的情况。</p><p>操作系统保持跟踪进程运行所需的所有状态信息。这种状态，也就是<strong>上下文</strong>，包括许多信息，比如PC和寄存器文件的当前值，以及主存的内容。在任何一个时刻，单处理器系统都只能执行一个进程的代码。当操作系统决定要把控制权从当前进程转移到某个新进程时，就会进行<strong>上下文切换</strong>，即保存当前进程的上下文、恢复新进程的上下文，然后将控制权传递到新进程。新进程就会从它上次停止的地方开始。下图展示了示例hello程序运行场景的基本理念。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtn3othbi0j60oe092dgf02.jpg" alt="image-20210820113751474" style="zoom:67%;" /><p>示例场景中有两个并发的进程：shell进程和hello进程。最开始，只有shell进程在运行，即等待命令行上的输入。当我们让它运行hello程序时，shell 通过调用一个专门的函数，即<strong>系统调用</strong>，来执行我们的请求，系统调用会将控制权传递给操作系统。操作系统保存shell进程的上下文，创建一个新的hello进程及其上下文，然后将控制权传给新的hello进程。hello 进程终止后，操作系统恢复shell进程的上下文，并将控制权传回给它，shell 进程会继续等待下一个命令行输人。<br>从一个进程到另一个进程的转换是由操作系统<strong>内核</strong>(kernel)管理的。内核是操作系统代码常驻主存的部分。当应用程序需要操作系统的某些操作时，比如读写文件，它就执行一条特殊的<strong>系统调用</strong>(system call)指令，将控制权传递给内核。然后内核执行被请求的操作并返回应用程序。注意，内核不是一个独立的进程。相反，它是系统管理全部进程所用代码和数据结构的集合。</p><h4 id="2-线程">2. 线程</h4><p>尽管通常我们认为一个进程只有单一的控制流，但是在现代系统中，<strong>一个进程实际上可以由多个称为线程的执行单元组成</strong>，每个线程都运行在进程的上下文中，并<strong>共享同样的代码和全局数据</strong>。由于网络服务器中对并行处理的需求，线程成为越来越重要的编程模型，因为多线程之间比多进程之间更容易共享数据，也因为线程一般来说都比进程更高效。当有多处理器可用的时候，多线程也是一种使得程序可以运行得更快的方法。</p><h4 id="3-虚拟内存">3. 虚拟内存</h4><p><strong>虚拟内存</strong>是一个抽象概念，它为每个进程提供了一个假象，即每个进程都在独占地使用主存。每个进程看到的内存都是一致的，称为<strong>虚拟地址空间</strong>。图示的是Linux进程的虚拟地址空间(其他Unix系统的设计也与此类似)。在Linux中，地址空间最上面的区域是保留给操作系统中的代码和数据的，这对所有进程来说都是一样。地址空间的底部区域存放用户进程定义的代码和数据。请注意，图中的地址是从下往上增大的。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtn43x4lcuj60js0hw40302.jpg" alt="image-20210820115222173" style="zoom:67%;" /><ul><li><strong>程序代码和数据</strong>。对所有的进程来说，代码是从同一固定地址开始，紧接着的是和C全局变量相对应的数据位置。代码和数据区是直接按照可执行目标文件的内容初始化。</li><li><strong>堆</strong>。代码和数据区后紧随着的是<strong>运行时堆</strong>。代码和数据区在进程一开始运行时就被指定了大小，与此不同，当调用像malloc和free这样的C标准库函数时，堆可以在运行时<strong>动态地扩展和收缩</strong>。</li><li><strong>共享库</strong>。大约在地址空间的中间部分是一块用来存放像C标准库和数学库这样的共享库的代码和数据的区域。共享库的概念非常强大，也相当难懂。</li><li><strong>栈</strong>。位于用户虚拟地址空间顶部的是用户栈，编译器用它来实现函数调用。和堆一样，用户栈在程序执行期间可以动态地扩展和收缩。特别地，每次我们调用一个函数时，栈就会增长；从一个函数返回时，栈就会收缩。</li><li><strong>内核虚拟内存</strong>。地址空间顶部的区域是为内核保留的。不允许应用程序读写这个区域的内容或者直接调用内核代码定义的函数。相反，它们必须调用内核来执行这些操作。</li></ul><p>虚拟内存的运作需要硬件和操作系统软件之间精密复杂的交互，包括对处理器生成的每个地址的硬件翻译。基本思想是把一个进程虚拟内存的内容存储在磁盘上，然后用主存作为磁盘的高速缓存。</p><h4 id="4-文件">4. 文件</h4><p>文件就是字节序列，仅此而已。每个I/O设备，包括磁盘、键盘、显示器，甚至网络，都可以看成是文件。系统中的所有输人输出都是通过使用一小组称为Unix I/O的系统函数调用读写文件来实现的。<br>文件这个简单而精致的概念是非常强大的，因为它向应用程序提供了一个统一的视图，来看待系统中可能含有的所有各式各样的I/O设备。例如，处理磁盘文件内容的应用程序员可以非常幸福，因为他们无须了解具体的磁盘技术。进一步说，同一个程序可以在使用不同磁盘技术的不同系统上运行。</p><h3 id="8-系统之间利用网络通信">8. 系统之间利用网络通信</h3><p>系统漫游至此，我们一直是把系统视为一个孤立的硬件和软件的集合体。实际上，现代系统经常通过网络和其他系统连接到一起。从一个单独的系统来看，网络可视为一个I/O设备，如图所示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtn562omb7j60mg0hcdhc02.jpg" alt="image-20210820122853743" style="zoom:67%;" /><p>当系统从主存复制一串字节到网络适配器时，数据流经过网络到达另一台机器，而不是比如说到达本地磁盘驱动器。相似地，系统可以读取从其他机器发送来的数据，并把数据复制到自己的主存。</p><p>随着Internet这样的全球网络的出现，从一台主机复制信息到另外一台主机已经成为；计算机系统最重要的用途之一。比如，像电子邮件、即时通信、万维网、FTP和telnet 这样的应用都是基于网络复制信息的功能。<br>回到hello示例，我们可以使用熟悉的telnet 应用在一个远程主机上运行hello程序。假设用本地主机上的telnet 客户端连接远程主机上的telnet 服务器。在我们登录到远程主机并运行shell后，远端的shell就在等待接收输人命令。此后在远端运行he1lo程序包括如图所示的五个基本步骤。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gtn587jbncj60wy07umyg02.jpg" alt="image-20210820123106449" style="zoom:67%;" /><p>当我们在telnet 客户端键入“hello” 字符串并敲下回车键后，客户端软件就会将这个字符串发送到telnet的服务器。telnet 服务器从网络上接收到这个字符串后，会把它传递给远端shell程序。接下来，远端shell 运行hello程序，并将输出行返回给telnet 服务器。最后，telnet服务器通过网络把输出串转发给telnet客户端，客户端就将输出串输出到我们的本地终端上。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSAPP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记：函数</title>
      <link href="/2021/08/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%87%BD%E6%95%B0/"/>
      <url>/2021/08/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="1-函数的定义">1. 函数的定义</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名(<span class="params">参数列表</span>):</span></span><br><span class="line">  函数体</span><br></pre></td></tr></table></figure><ul><li>实参（argument）与形参（parameter）</li></ul><h3 id="2-参数传递">2. 参数传递</h3><ul><li><p>位置实参：基于实参的顺序进行关联</p><ul><li><p>实参数量等于形参数量</p></li><li><p>位置实参的顺序很重要</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">func(<span class="string">&quot;blabla1&quot;</span>,<span class="string">&quot;blabla2&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>关键字实参</p><ul><li><p>实参数量等于形参数量</p></li><li><p>顺序不重要</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">func(para1=<span class="string">&quot;blabla1&quot;</span>,para2=<span class="string">&quot;blabla2&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用默认值：编写函数时，可给每个形参指定默认值。在调用函数中给形参提供了实参时，Python将使用 指定的实参值；否则，将使用形参的默认值。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">argument1=<span class="string">&quot;blabla&quot;</span>,argumen2=<span class="string">&quot;blabla&quot;</span></span>):</span></span><br><span class="line">  函数体</span><br></pre></td></tr></table></figure></li><li><p>规则：声明和调用的时候没有等号的参数在前，有等号的参数在后</p></li></ul><h3 id="3-返回值">3. 返回值</h3><ul><li>一个函数只<code>return</code>一次</li><li><code>return</code>只能返回一个结果（可以采用封装将多个结果封装为一个）<ul><li>字典</li><li>列表</li><li>元组：<ol><li>元组与列表类似，不同之处在于元组不能修改；</li><li>元组使用小括号，列表使用方括号</li><li>创建元组的方式 <code>(para1,para2,...,paran)</code></li><li>访问方式：类似于列表，使用中括号进行随机访问</li></ol></li></ul></li></ul><h3 id="4-传递列表">4. 传递列表</h3><ul><li>Python可变数据类型使用传引用，不可变对象使用传值</li><li>可变对象：列表、字典、自己定义的对象等</li><li>不可变对象：基本数据类型、元组等</li><li>若要禁止函数修改列表，则这样调用<code>function_name(list_name[:])</code>，使用切片表示法传入副本</li></ul><h3 id="5-传递任意数量的实参">5. 传递任意数量的实参</h3><ul><li>解包和封包：</li></ul><p>形参名<code>*toppings</code>中的星号让<code>Python</code>创建一个名<code>toppings</code>的空元组，并将收到的所有值都封 装到这个元组中。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_pizza</span>(<span class="params">*toppings</span>):</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;\nMaking a pizza with the following toppings:&quot;</span>)</span><br><span class="line">  <span class="keyword">for</span> topping <span class="keyword">in</span> toppings:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;-<span class="subst">&#123;topping&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># 直接传参</span></span><br><span class="line">make_pizza(<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;mushroom&quot;</span>,<span class="string">&quot;extra cheese&quot;</span>)</span><br><span class="line"><span class="comment"># 传列表</span></span><br><span class="line">l = [<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;mushrooms&quot;</span>,<span class="string">&quot;extra cheese&quot;</span>]</span><br><span class="line">make_pizza(*l)</span><br></pre></td></tr></table></figure><ul><li>在传任意数量的关键字实参后，必须使用关键字实参进行参数传递</li><li>以**开头的形参代表传递字典，形参中的两个星号让Python创建一个空字典，并将收到的所有名称—值对都封装到这个字典中。</li><li>正确的形参的传递顺序：<ol><li>位置形参</li><li>无限位置形参</li><li>关键字形参</li><li>无限关键字形参</li></ol></li></ul><h3 id="6-将函数储存在模块中">6. 将函数储存在模块中</h3><p>一个模块就是一个Python文件、一个模块往往由若干功能相关的函数构成。模块是为了实现更大规模的复用。</p><ul><li>导入整个模块：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> module_name</span><br><span class="line"><span class="keyword">import</span> module1_name,module2_name</span><br></pre></td></tr></table></figure><ul><li>导入特定的函数：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> function_name</span><br><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> function_0, function_1, function_2</span><br></pre></td></tr></table></figure><ul><li>使用as 给函数指定别名：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> function_name <span class="keyword">as</span> fn</span><br></pre></td></tr></table></figure><ul><li>使用as 给模块指定别名：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> module_name <span class="keyword">as</span> mn</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python编程语言 </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记：字典</title>
      <link href="/2021/08/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%97%E5%85%B8/"/>
      <url>/2021/08/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%97%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<h3 id="1-简单示例">1. 简单示例</h3><p>来看一个游戏，其中包含一些外星人，这些外星人的颜色和点数各不相同。下面是一个简单的字典，存储了有关特定外星人的信息：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(alien_0[<span class="string">&#x27;color&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(alien_0[<span class="string">&#x27;points&#x27;</span>])</span><br></pre></td></tr></table></figure><p>字典alien_0存储了外星人的颜色和点数。使用两条print语句来访问并打印这些信息，如下所示：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">green</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="2-使用字典">2. 使用字典</h3><p>在Python中，字典是一系列键-值对。每个键都与一个值相关联，你可以使用键来访问与之相关联的值。与键相关联的值可以是数字、字符串、列表乃至字典。事实上，可将任何Python对象用作字典中的值。</p><ul><li>访问字典中的值：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>&#125; </span><br><span class="line"><span class="built_in">print</span>(alien_0[<span class="string">&#x27;color&#x27;</span>])</span><br></pre></td></tr></table></figure><p>这将返回字典alien_0中与键’color’相关联的值：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">green</span><br></pre></td></tr></table></figure><ul><li>添加键-值对:</li></ul><p>字典是一种动态结构，可随时在其中添加键—值对。要添加键—值对，可依次指定字典名、用 方括号括起的键和相关联的值。</p><p>下面在字典alien_0中添加两项信息：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br><span class="line">alien_0[<span class="string">&#x27;x_position&#x27;</span>] = <span class="number">0</span> </span><br><span class="line">alien_0[<span class="string">&#x27;y_position&#x27;</span>] = <span class="number">25</span></span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;x_position&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;y_position&#x27;</span>: <span class="number">25</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>先创建一个空字典：</li></ul><p>使用一对 空的花括号定义一个字典，再分行添加各个键—值对。下例演示了如何以这种方式创建字典alien_0：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_0 = &#123;&#125;</span><br><span class="line">alien_0[<span class="string">&#x27;color&#x27;</span>] = <span class="string">&#x27;green&#x27;</span> </span><br><span class="line">alien_0[<span class="string">&#x27;points&#x27;</span>] = <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure><p>这里首先定义了空字典alien_0，再在其中添加颜色和点数，得到前述示例一直在使用的 字典</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>修改字典中的值：</li></ul><p>要修改字典中的值，可依次指定字典名、用方括号括起的键以及与该键相关联的新值。例如， 假设随着游戏的进行，需要将一个外星人从绿色改为黄色：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>&#125; </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The alien is &quot;</span> + alien_0[<span class="string">&#x27;color&#x27;</span>] + <span class="string">&quot;.&quot;</span>)</span><br><span class="line">alien_0[<span class="string">&#x27;color&#x27;</span>] = <span class="string">&#x27;yellow&#x27;</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The alien is now &quot;</span> + alien_0[<span class="string">&#x27;color&#x27;</span>] + <span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure><p>我们首先定义了一个表示外星人alien_0的字典，其中只包含这个外星人的颜色。接下 来，我们将与键’color’相关联的值改为’yellow’。输出表明，这个外星人确实从绿色变成 了黄色：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">The alien <span class="keyword">is</span> green.</span><br><span class="line">The alien <span class="keyword">is</span> now yellow.</span><br></pre></td></tr></table></figure><ul><li>删除键-值对：</li></ul><p>对于字典中不再需要的信息，可使用del语句将相应的键—值对彻底删除。使用del语句时， 必须指定字典名和要删除的键。<br>例如，下面的代码从字典alien_0中删除键’points’及其值：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br><span class="line"><span class="keyword">del</span> alien_0[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="3-遍历字典">3. 遍历字典</h3><ul><li>遍历所有的键-值对：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">user_0 = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;efermi&#x27;</span>,<span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;enrico&#x27;</span>, <span class="string">&#x27;last&#x27;</span>: <span class="string">&#x27;fermi&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> user_0.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nKey: &quot;</span> + key)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Value: &quot;</span> + value)</span><br></pre></td></tr></table></figure><ul><li>遍历字典中的所有键:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">favorite_languages = &#123;<span class="string">&#x27;jen&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,<span class="string">&#x27;sarah&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;edward&#x27;</span>: <span class="string">&#x27;ruby&#x27;</span>,<span class="string">&#x27;phil&#x27;</span>: <span class="string">&#x27;python&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> favorite_languages.keys():</span><br><span class="line">    <span class="built_in">print</span>(name.title())</span><br></pre></td></tr></table></figure><ul><li>按顺序遍历字典中的所有键:</li></ul><p>字典总是明确地记录键和值之间的关联关系，但获取字典的元素时，获取顺序是不可预测的。 这不是问题，因为通常你想要的只是获取与键相关联的正确的值。<br>要以特定的顺序返回元素，一种办法是在for循环中对返回的键进行排序。为此，可使用函 数sorted()来获得按特定顺序排列的键列表的副本：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">favorite_languages = &#123;<span class="string">&#x27;jen&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,<span class="string">&#x27;sarah&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;edward&#x27;</span>: <span class="string">&#x27;ruby&#x27;</span>,<span class="string">&#x27;phil&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,&#125;</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="built_in">sorted</span>(favorite_languages.keys()):</span><br><span class="line">    <span class="built_in">print</span>(name.title() + <span class="string">&quot;, thank you for taking the poll.&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>遍历字典中的所有值:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">favorite_languages = &#123; <span class="string">&#x27;jen&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,<span class="string">&#x27;sarah&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;edward&#x27;</span>: <span class="string">&#x27;ruby&#x27;</span>,<span class="string">&#x27;phil&#x27;</span>: <span class="string">&#x27;python&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The following languages have been mentioned:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> language <span class="keyword">in</span> favorite_languages.values():</span><br><span class="line">    <span class="built_in">print</span>(language.title())</span><br></pre></td></tr></table></figure><h3 id="4-嵌套">4. 嵌套</h3><ul><li>字典列表：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125; </span><br><span class="line">alien_1 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">10</span>&#125; </span><br><span class="line">alien_2 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">15</span>&#125;</span><br><span class="line">aliens = [alien_0, alien_1, alien_2]</span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens:</span><br><span class="line">    <span class="built_in">print</span>(alien)</span><br></pre></td></tr></table></figure><ul><li>在字典中存储列表:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># 存储所点比萨的信息</span></span><br><span class="line">pizza = &#123;</span><br><span class="line">    <span class="string">&#x27;crust&#x27;</span>: <span class="string">&#x27;thick&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;toppings&#x27;</span>: [<span class="string">&#x27;mushrooms&#x27;</span>, <span class="string">&#x27;extra cheese&#x27;</span>],</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># 概述所点的比萨</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;You ordered a &quot;</span> + pizza[<span class="string">&#x27;crust&#x27;</span>] + <span class="string">&quot;-crust pizza &quot;</span> +</span><br><span class="line">    <span class="string">&quot;with the following toppings:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> topping <span class="keyword">in</span> pizza[<span class="string">&#x27;toppings&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span> + topping)</span><br></pre></td></tr></table></figure><ul><li>在字典中存储字典：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">users = &#123;     </span><br><span class="line">    <span class="string">&#x27;aeinstein&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;albert&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;last&#x27;</span>: <span class="string">&#x27;einstein&#x27;</span>, </span><br><span class="line">        <span class="string">&#x27;location&#x27;</span>: <span class="string">&#x27;princeton&#x27;</span>, </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;mcurie&#x27;</span>: &#123;       </span><br><span class="line">        <span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;marie&#x27;</span>,     </span><br><span class="line">        <span class="string">&#x27;last&#x27;</span>: <span class="string">&#x27;curie&#x27;</span>,     </span><br><span class="line">        <span class="string">&#x27;location&#x27;</span>: <span class="string">&#x27;paris&#x27;</span>,       </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python编程语言 </tag>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记：条件测试</title>
      <link href="/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1-检查特定值是否包含在列表中">1. 检查特定值是否包含在列表中</h3><p>要判断特定的值是否已包含在列表中，可使用关键字<code>in</code>。如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>requested_toppings = [<span class="string">&#x27;mushrooms&#x27;</span>, <span class="string">&#x27;onions&#x27;</span>, <span class="string">&#x27;pineapple&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;mushrooms&#x27;</span> <span class="keyword">in</span> requested_toppings</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;pepperoni&#x27;</span> <span class="keyword">in</span> requested_toppings</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="2-检查特定值是否不包含在列表中">2. 检查特定值是否不包含在列表中</h3><p>还有些时候，确定特定的值未包含在列表中很重要；在这种情况下，可使用关键字<code>not in</code>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">banned_users = [<span class="string">&#x27;andrew&#x27;</span>, <span class="string">&#x27;carolina&#x27;</span>, <span class="string">&#x27;david&#x27;</span>] </span><br><span class="line">user = <span class="string">&#x27;marie&#x27;</span></span><br><span class="line"><span class="keyword">if</span> user <span class="keyword">not</span> <span class="keyword">in</span> banned_users:</span><br><span class="line">    <span class="built_in">print</span>(user.title() + <span class="string">&quot;, you can post a response if you wish.&quot;</span>)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Marie, you can post a response <span class="keyword">if</span> you wish.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python编程语言 </tag>
            
            <tag> 条件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记：元组</title>
      <link href="/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%85%83%E7%BB%84/"/>
      <url>/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%85%83%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h3 id="1-定义元组">1. 定义元组</h3><p>元组看起来犹如列表，但使用圆括号而不是方括号来标识。定义元组后，就可以使用索引来 访问其元素，就像访问列表元素一样。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dimensions = (<span class="number">200</span>, <span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(dimensions[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(dimensions[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">200</span></span><br><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure><h3 id="2-遍历元组的所有值">2. 遍历元组的所有值</h3><p>像列表一样，也可以使用for循环来遍历元组中的所有值：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dimensions = (<span class="number">200</span>, <span class="number">50</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line"><span class="built_in">print</span>(dimension)</span><br></pre></td></tr></table></figure><h3 id="3-修改元组变量">3. 修改元组变量</h3><p>虽然不能修改元组的元素，但可以给存储元组的变量赋值。因此，如果要修改前述矩形的尺寸，可重新定义整个元组：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dimensions = (<span class="number">200</span>, <span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Original dimensions:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line">    <span class="built_in">print</span>(dimension)</span><br><span class="line">dimensions = (<span class="number">400</span>, <span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nModified dimensions:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line">    <span class="built_in">print</span>(dimension)</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Original dimensions:</span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="number">50</span></span><br><span class="line"></span><br><span class="line">Modified dimensions:</span><br><span class="line"><span class="number">400</span></span><br><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python编程语言 </tag>
            
            <tag> 元组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记：列表</title>
      <link href="/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%88%97%E8%A1%A8/"/>
      <url>/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="1-列表的声明">1. 列表的声明</h3><p>在Python中，用方括号（[]）来表示列表，并用逗号来分隔其中的元素就是列表。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>, <span class="string">&#x27;cannondale&#x27;</span>, <span class="string">&#x27;redline&#x27;</span>, <span class="string">&#x27;specialized&#x27;</span>] </span><br><span class="line"><span class="built_in">print</span>(bicycles)</span><br></pre></td></tr></table></figure><p>直接的打印结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;trek&#x27;</span>, <span class="string">&#x27;cannondale&#x27;</span>, <span class="string">&#x27;redline&#x27;</span>, <span class="string">&#x27;specialized&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="2-元素的访问">2. 元素的访问</h3><p>列表是有序集合，因此要访问列表的任何元素，只需将该元素的位置或索引告诉Python即可。 要访问列表元素，可指出列表的名称，再指出元素的索引，并将其放在方括号内。其中索引从0开始。</p><h3 id="3-修改、添加和删除元素">3. 修改、添加和删除元素</h3><ul><li><p>通过随机访问并赋值可以直接对元素进行修改</p></li><li><p><code>append()</code>方法：在列表末尾添加元素</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>] </span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">motorcycles.append(<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>, <span class="string">&#x27;ducati&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li><code>insert()</code>方法：在索引前插入元素</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">motorcycles.insert(<span class="number">0</span>, <span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;ducati&#x27;</span>, <span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>使用<code>del</code>语句删除元素：如果知道要删除的元素在列表中的位置</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="keyword">del</span> motorcycles[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li><code>pop()</code>方法：将元素从列表中删除，并接着使用它的值。</li></ul><p>默认弹出列表末尾的元素：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">popped_motorcycle = motorcycles.pop()</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="built_in">print</span>(popped_motorcycle)</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>]</span><br><span class="line">suzuki</span><br></pre></td></tr></table></figure><p>也可以传入索引，弹出指定位置的元素。</p><ul><li><code>remove()</code>方法：根据元素的值，删除<strong>最先</strong>找到的指定元素</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>, <span class="string">&#x27;ducati&#x27;</span>] <span class="built_in">print</span>(motorcycles)</span><br><span class="line">motorcycles.remove(<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>, <span class="string">&#x27;ducati&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;honda&#x27;</span>, <span class="string">&#x27;yamaha&#x27;</span>, <span class="string">&#x27;suzuki&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="4-其他操作">4. 其他操作</h3><ul><li><code>sort()</code>方法：对列表进行永久性排序，原列表改变。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>, <span class="string">&#x27;audi&#x27;</span>, <span class="string">&#x27;toyota&#x27;</span>, <span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">cars.sort()</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;audi&#x27;</span>, <span class="string">&#x27;bmw&#x27;</span>, <span class="string">&#x27;subaru&#x27;</span>, <span class="string">&#x27;toyota&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li><p><code>sorted()</code>方法：对列表进行临时排序，返回一个排序后的列表，原列表不变</p></li><li><p><code>reverse()</code>方法：反转列表元素的排列顺序</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>, <span class="string">&#x27;audi&#x27;</span>, <span class="string">&#x27;toyota&#x27;</span>, <span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line">cars.reverse()</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;bmw&#x27;</span>, <span class="string">&#x27;audi&#x27;</span>, <span class="string">&#x27;toyota&#x27;</span>, <span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;subaru&#x27;</span>, <span class="string">&#x27;toyota&#x27;</span>, <span class="string">&#x27;audi&#x27;</span>, <span class="string">&#x27;bmw&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li><p><code>len()</code>函数：确定列表的长度</p></li><li><p>每当需要访问最后一个列表元素时，都可使用索引-1</p></li></ul><h3 id="5-遍历整个列表">5. 遍历整个列表</h3><p>可以使用<code>for</code>循环来遍历列表中的每一个元素，一般对列表命名为复数，对元素命名为单数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>, <span class="string">&#x27;david&#x27;</span>, <span class="string">&#x27;carolina&#x27;</span>]f</span><br><span class="line"><span class="keyword">or</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line">  <span class="built_in">print</span>(magician)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alicedavidcarolina</span><br></pre></td></tr></table></figure><h3 id="6-使用range-函数创建数字列表">6.  使用<code>range()</code>函数创建数字列表</h3><p><code>range()</code>的范围是左闭右开，可使用函数<code>list()</code>将<code>range()</code>的结果直接转换为列表。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>当然，也可以指定步长，为<code>range()</code>函数的第三个参数。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">even_numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">2</span>,<span class="number">11</span>,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(even_numbers)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><h3 id="7-数字列表的简单统计">7. 数字列表的简单统计</h3><ul><li><code>min()</code>函数：求数字列表中所有元素的最小值</li><li><code>max()</code>函数：求数字列表中所有元素的最大值</li><li><code>sum()</code>函数：求数字列表中所有元素的加和</li></ul><h3 id="8-列表解析">8. 列表解析</h3><p>列表解析将<code>for</code>循环和创建新元素的代码合并成一行，并自动附加新元素。</p><p>下面的示例使用列表解析创建你在前面看到的平方数列表：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">squares = [value**<span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure><h3 id="9-切片">9. 切片</h3><ul><li>指定起始位置和终止位置：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>, <span class="string">&#x27;martina&#x27;</span>, <span class="string">&#x27;michael&#x27;</span>, <span class="string">&#x27;florence&#x27;</span>, <span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">0</span>:<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>结果取索引0到2的元素，为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;charles&#x27;</span>, <span class="string">&#x27;martina&#x27;</span>, <span class="string">&#x27;michael&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>指定起始位置：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>, <span class="string">&#x27;martina&#x27;</span>, <span class="string">&#x27;michael&#x27;</span>, <span class="string">&#x27;florence&#x27;</span>, <span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><p>结果取索引2之后的所有元素，为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;michael&#x27;</span>, <span class="string">&#x27;florence&#x27;</span>, <span class="string">&#x27;eli&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>指定终止位置：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>, <span class="string">&#x27;martina&#x27;</span>, <span class="string">&#x27;michael&#x27;</span>, <span class="string">&#x27;florence&#x27;</span>, <span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[:<span class="number">4</span>])</span><br></pre></td></tr></table></figure><p>结果取索引3之前的所有元素，为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;charles&#x27;</span>, <span class="string">&#x27;martina&#x27;</span>, <span class="string">&#x27;michael&#x27;</span>, <span class="string">&#x27;florence&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>使用<code>for</code>循环遍历切片：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>, <span class="string">&#x27;martina&#x27;</span>, <span class="string">&#x27;michael&#x27;</span>, <span class="string">&#x27;florence&#x27;</span>, <span class="string">&#x27;eli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Here are the first three players on my team:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> player <span class="keyword">in</span> players[:<span class="number">3</span>]:</span><br><span class="line">    <span class="built_in">print</span>(player.title())</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Here are the first three players on my team: CharlesMartinaMichael</span><br></pre></td></tr></table></figure><ul><li>使用切片的方式复制列表：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_foods = [<span class="string">&#x27;pizza&#x27;</span>, <span class="string">&#x27;falafel&#x27;</span>, <span class="string">&#x27;carrot cake&#x27;</span>]</span><br><span class="line">friend_foods = my_foods[:]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My favorite foods are:&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(my_foods)<span class="built_in">print</span>(<span class="string">&quot;\nMy friend&#x27;s favorite foods are:&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(friend_foods)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">My favorite foods are:[<span class="string">&#x27;pizza&#x27;</span>, <span class="string">&#x27;falafel&#x27;</span>, <span class="string">&#x27;carrot cake&#x27;</span>]</span><br><span class="line">My friend<span class="string">&#x27;s favorite foods are:[&#x27;</span>pizza<span class="string">&#x27;, &#x27;</span>falafel<span class="string">&#x27;, &#x27;</span>carrot cake<span class="string">&#x27;]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python编程语言 </tag>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记：字符串</title>
      <link href="/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2021/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<p>在python中用引号括起的都是字符串，单引号和双引号都可。因此如果字符串中本身具有引号可以交叉使用，当然也可以使用转义符。</p><h3 id="1-修改字符串的大小写">1.修改字符串的大小写</h3><ul><li><code>title()</code>方法：将字符串中每一个单词的首字母大写，其他字母小写</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&#x27;ada loveLACE&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name.title())</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Ada Lovelace</span><br></pre></td></tr></table></figure><ul><li><code>upper()</code>方法：将字符串中每一个单词的所有字母大写</li><li><code>lower()</code>方法：将字符串中每一个单词的所有字母小写</li></ul><h3 id="2-合并字符串">2. 合并字符串</h3><p>使用+来直接合并字符串：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">first_name = <span class="string">&quot;ada&quot;</span></span><br><span class="line">last_name = <span class="string">&quot;lovelace&quot;</span></span><br><span class="line">full_name = first_name + <span class="string">&quot; &quot;</span> + last_name</span><br><span class="line"><span class="built_in">print</span>(full_name)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ada lovelace</span><br></pre></td></tr></table></figure><h3 id="3-转义符">3. 转义符</h3><p><code>\t</code>：制表符</p><p><code>\n</code>：换行符</p><h3 id="4-删除空白">4. 删除空白</h3><ul><li><code>rstrip()</code>方法：删除字符串末尾空格</li><li><code>lstrip()</code>方法：删除字符串开头空格</li><li><code>strip()</code>方法：删除字符串两端的空格</li></ul><h3 id="5-其他">5. 其他</h3><ol><li>整数分类：整数（int）、浮点数（float）</li><li>在python中，整数做除法是可以得到浮点数的</li><li><code>**</code>运算符表示乘方</li><li>在字符串与整数拼接时，需要调用<code>str()</code>方法<strong>将整数转化为字符</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python编程语言 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫学习笔记(六)：爬取猫眼热榜</title>
      <link href="/2021/07/21/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E7%8C%AB%E7%9C%BC%E6%A6%9C%E5%8D%95/"/>
      <url>/2021/07/21/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E7%8C%AB%E7%9C%BC%E6%A6%9C%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1-目标">1. 目标</h3><hr><ul><li><p>使用requests库抓取猫眼电影排行榜中TOP100电影的相关内容。</p></li><li><p>使用正则表达式提取信息，保存这些电影的排名、名称、主演信息、上映时间、评分等信息。</p></li><li><p>将所得信息保存在本地文件中。</p></li></ul><h3 id="2-分析">2. 分析</h3><hr><p><img src="https://i.loli.net/2021/07/21/23eD75wNbYVfnSq.png" alt="image-20210721162929133"></p><p>首先，可以看到网页的URL为：<code>https://maoyan.com/board/4?offset=0</code>，观察发现，每一个页面有10个电影的相关信息，其中包含电影排名、电影名称、电影主演、上映时间、电影评分、电影封面图等信息。</p><p><img src="https://i.loli.net/2021/07/21/BmNSaYQ8qRZcxTb.png" alt="image-20210721162842163"></p><p>可以看到第二页的offset为10，可以推理出第三页的offset为20，等等。</p><h3 id="3-抓取首页">3. 抓取首页</h3><hr><p>首先我们抓取第一页的信息，实现<code>get_one_page()</code>方法，传入URL参数，返回页面的字符串内容，再通过<code>main()</code>方法调用。实现如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span>(<span class="params">url</span>):</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) &#x27;</span></span><br><span class="line">                     <span class="string">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = <span class="string">&#x27;https://maoyan.com/board/4?offset=0&#x27;</span></span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    <span class="built_in">print</span>(html)</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>可以看到输出了网页源码，下面我们使用正则表达式提取有用信息。</p><h3 id="4-正则提取">4. 正则提取</h3><hr><p>转到网页的开发者模式，看到下面这个代码片段：</p><p><img src="https://i.loli.net/2021/07/21/bnxV9pz3wChKYRl.png" alt="image-20210721164442904"></p><p>图上圈出了所要提取信息的位置，我们将上一步爬取的HTML保存到本地，下面对它进行正则提取。注意，不要在这一步不断的爬取信息，对正则表达式进行测试，容易引起网页的反爬虫机制。</p><p>爬取排名的正则表达式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;i <span class="class"><span class="keyword">class</span>=&quot;<span class="title">board</span>-<span class="title">index</span> <span class="title">board</span>-<span class="title">index</span>-\<span class="title">d</span>+&quot;&gt;(<span class="params">\d+</span>)&lt;/<span class="title">i</span>&gt;</span></span><br></pre></td></tr></table></figure><p>爬取名称的正则表达式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span>=&quot;<span class="title">name</span>&quot;&gt;.*?&gt;(<span class="params">.*?</span>)&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>爬取主演信息的正则表达式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span>=&quot;<span class="title">star</span>&quot;&gt;\<span class="title">s</span>*主演：(<span class="params">.*?</span>)\<span class="title">s</span>*&lt;/<span class="title">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>爬取上映时间的正则表达式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span>=&quot;<span class="title">releasetime</span>&quot;&gt;上映时间：(<span class="params">.*?</span>)&lt;/<span class="title">p</span>&gt; </span></span><br></pre></td></tr></table></figure><p>爬取评分的正则表达式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span>=&quot;<span class="title">score</span>&quot;&gt;&lt;<span class="title">i</span> <span class="title">class</span>=&quot;<span class="title">integer</span>&quot;&gt;(<span class="params">\d</span>).&lt;/<span class="title">i</span>&gt;&lt;<span class="title">i</span> <span class="title">class</span>=&quot;<span class="title">fraction</span>&quot;&gt;(<span class="params">\d</span>)&lt;/<span class="title">i</span>&gt;&lt;/<span class="title">p</span>&gt;       </span></span><br></pre></td></tr></table></figure><p>整合一下最终的的正则表达式为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;i <span class="class"><span class="keyword">class</span>=&quot;<span class="title">board</span>-<span class="title">index</span> <span class="title">board</span>-<span class="title">index</span>-\<span class="title">d</span>+&quot;&gt;(<span class="params">\d+</span>)&lt;/<span class="title">i</span>&gt;.*?&lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">name</span>&quot;&gt;.*?&gt;(<span class="params">.*?</span>)&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">p</span>&gt;.*?&lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">star</span>&quot;&gt;\<span class="title">s</span>*主演：(<span class="params">.*?</span>)\<span class="title">s</span>*&lt;/<span class="title">p</span>&gt;.*?&lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">releasetime</span>&quot;&gt;上映时间：(<span class="params">.*?</span>)&lt;/<span class="title">p</span>&gt;.*?&lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">score</span>&quot;&gt;&lt;<span class="title">i</span> <span class="title">class</span>=&quot;<span class="title">integer</span>&quot;&gt;(<span class="params">\d</span>).&lt;/<span class="title">i</span>&gt;&lt;<span class="title">i</span> <span class="title">class</span>=&quot;<span class="title">fraction</span>&quot;&gt;(<span class="params">\d</span>)&lt;/<span class="title">i</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因此我们实现一个对网页进行分析的方法<code>parse_one_page()</code>：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span>(<span class="params">html</span>):</span></span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&#x27;&#x27;&lt;i class=&quot;board-index board-index-\d+&quot;&gt;(\d+)&lt;/i&gt;.*?&lt;p class=&quot;name&quot;&gt;.*?&gt;(.*?)&lt;/a&gt;&lt;/p&gt;.*?&lt;p class=&quot;star&quot;&gt;\s*主演：(.*?)\s*&lt;/p&gt;.*?&lt;p class=&quot;releasetime&quot;&gt;上映时间：(.*?)&lt;/p&gt;.*?&lt;p class=&quot;score&quot;&gt;&lt;i class=&quot;integer&quot;&gt;(\d).&lt;/i&gt;&lt;i class=&quot;fraction&quot;&gt;(\d)&lt;/i&gt;&lt;/p&gt;&#x27;&#x27;&#x27;</span>,re.S)</span><br><span class="line">    items = re.findall(pattern,html)</span><br><span class="line">    <span class="built_in">print</span>(items)</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;我不是药神&#x27;</span>, <span class="string">&#x27;徐峥,周一围,王传君&#x27;</span>, <span class="string">&#x27;2018-07-05&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;6&#x27;</span>), (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;肖申克的救赎&#x27;</span>, <span class="string">&#x27;蒂姆·罗宾斯,摩根·弗里曼,鲍勃·冈顿&#x27;</span>, <span class="string">&#x27;1994-09-10(加拿大)&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;5&#x27;</span>), (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;绿皮书&#x27;</span>, <span class="string">&#x27;维果·莫腾森,马赫沙拉·阿里,琳达·卡德里尼&#x27;</span>, <span class="string">&#x27;2019-03-01&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;5&#x27;</span>), (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;海上钢琴师&#x27;</span>, <span class="string">&#x27;蒂姆·罗斯,比尔·努恩 ,克兰伦斯·威廉姆斯三世&#x27;</span>, <span class="string">&#x27;2019-11-15&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;3&#x27;</span>), (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;小偷家族&#x27;</span>, <span class="string">&#x27;中川雅也,安藤樱,松冈茉优&#x27;</span>, <span class="string">&#x27;2018-08-03&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;1&#x27;</span>), (<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;霸王别姬&#x27;</span>, <span class="string">&#x27;张国荣,张丰毅,巩俐&#x27;</span>, <span class="string">&#x27;1993-07-26&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;3&#x27;</span>), (<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;哪吒之魔童降世&#x27;</span>, <span class="string">&#x27;吕艳婷,囧森瑟夫,瀚墨&#x27;</span>, <span class="string">&#x27;2019-07-26&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;6&#x27;</span>), (<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;美丽人生&#x27;</span>, <span class="string">&#x27;罗伯托·贝尼尼,朱斯蒂诺·杜拉诺,赛尔乔·比尼·布斯特里克&#x27;</span>, <span class="string">&#x27;2020-01-03&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;3&#x27;</span>), (<span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;这个杀手不太冷&#x27;</span>, <span class="string">&#x27;让·雷诺,加里·奥德曼,娜塔莉·波特曼&#x27;</span>, <span class="string">&#x27;1994-09-14(法国)&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;4&#x27;</span>), (<span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;盗梦空间&#x27;</span>, <span class="string">&#x27;莱昂纳多·迪卡普里奥,渡边谦,约瑟夫·高登-莱维特&#x27;</span>, <span class="string">&#x27;2010-09-01&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;0&#x27;</span>)]</span><br></pre></td></tr></table></figure><p>为了让结果更加方便阅读，将其转化为字典：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span>(<span class="params">html</span>):</span></span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&#x27;&#x27;&lt;i class=&quot;board-index board-index-\d+&quot;&gt;(\d+)&lt;/i&gt;.*?&lt;p class=&quot;name&quot;&gt;.*?&gt;(.*?)&lt;/a&gt;&lt;/p&gt;.*?&lt;p class=&quot;star&quot;&gt;\s*主演：(.*?)\s*&lt;/p&gt;.*?&lt;p class=&quot;releasetime&quot;&gt;上映时间：(.*?)&lt;/p&gt;.*?&lt;p class=&quot;score&quot;&gt;&lt;i class=&quot;integer&quot;&gt;(\d).&lt;/i&gt;&lt;i class=&quot;fraction&quot;&gt;(\d)&lt;/i&gt;&lt;/p&gt;&#x27;&#x27;&#x27;</span>,re.S)</span><br><span class="line">    items = re.findall(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">       <span class="keyword">yield</span> &#123;</span><br><span class="line">         <span class="string">&#x27;index&#x27;</span>:item[<span class="number">0</span>],</span><br><span class="line">         <span class="string">&#x27;title&#x27;</span>:item[<span class="number">1</span>],</span><br><span class="line">         <span class="string">&#x27;actors&#x27;</span>:item[<span class="number">2</span>],</span><br><span class="line">         <span class="string">&#x27;time&#x27;</span>:item[<span class="number">3</span>],</span><br><span class="line">         <span class="string">&#x27;score&#x27;</span>:(<span class="built_in">float</span>)item[<span class="number">4</span>]+<span class="number">0.1</span>*(<span class="built_in">float</span>)item[<span class="number">5</span>]</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="5-写入文件">5. 写入文件</h3><hr><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(json.dumps(content)))</span><br><span class="line">        f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="6-整合代码">6. 整合代码</h3><hr><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = <span class="string">&#x27;http://maoyan.com/board/4?offset=0&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(url)</span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        write_to_file(item)</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="7-分页爬取">7. 分页爬取</h3><hr><p>给<code>main()</code>方法传入一个offset偏移量来改变URL实现分页爬取，参考代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    main(offset=i*<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>修改<code>main()</code>方法如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">offset</span>):</span></span><br><span class="line">    url = <span class="string">&#x27;http://maoyan.com/board/4?offset=&#x27;</span>+offset</span><br><span class="line">    <span class="built_in">print</span>(url)</span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        write_to_file(item)</span><br></pre></td></tr></table></figure><h3 id="8-代码汇总">8. 代码汇总</h3><hr><p>最后，由于猫眼多了很多反爬虫机制，因此我们对代码稍作修改，每次爬取一个页面后等待1秒，再对下一页进行爬取：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_one_page</span>(<span class="params">url</span>):</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(url,headers=headers)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_one_page</span>(<span class="params">html</span>):</span></span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;&#x27;&#x27;&lt;i class=&quot;board-index board-index-\d+&quot;&gt;(\d+)&lt;/i&gt;.*?&lt;p class=&quot;name&quot;&gt;.*?&gt;(.*?)&lt;/a&gt;&lt;/p&gt;.*?&lt;p class=&quot;star&quot;&gt;\s*主演：(.*?)\s*&lt;/p&gt;.*?&lt;p class=&quot;releasetime&quot;&gt;上映时间：(.*?)&lt;/p&gt;.*?&lt;p class=&quot;score&quot;&gt;&lt;i class=&quot;integer&quot;&gt;(\d).&lt;/i&gt;&lt;i class=&quot;fraction&quot;&gt;(\d)&lt;/i&gt;&lt;/p&gt;&#x27;&#x27;&#x27;</span>,re.S)</span><br><span class="line">    items = re.findall(pattern,html)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">       <span class="keyword">yield</span> &#123;</span><br><span class="line">         <span class="string">&#x27;index&#x27;</span>:item[<span class="number">0</span>],</span><br><span class="line">         <span class="string">&#x27;title&#x27;</span>:item[<span class="number">1</span>],</span><br><span class="line">         <span class="string">&#x27;actors&#x27;</span>:item[<span class="number">2</span>],</span><br><span class="line">         <span class="string">&#x27;time&#x27;</span>:item[<span class="number">3</span>],</span><br><span class="line">         <span class="string">&#x27;score&#x27;</span>:<span class="built_in">float</span>(item[<span class="number">4</span>])+<span class="number">0.1</span>*<span class="built_in">float</span>(item[<span class="number">5</span>])</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_file</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(json.dumps(content)))</span><br><span class="line">        f.write(json.dumps(content,ensure_ascii=<span class="literal">False</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">offset</span>):</span></span><br><span class="line">    url = <span class="string">&#x27;http://maoyan.com/board/4?offset=&#x27;</span>+<span class="built_in">str</span>(offset)</span><br><span class="line">    <span class="built_in">print</span>(url)</span><br><span class="line">    html = get_one_page(url)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> parse_one_page(html):</span><br><span class="line">        write_to_file(item)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    main(offset=i*<span class="number">10</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="9-结果展示">9. 结果展示</h2><p>将爬取结果保存在<a href="https://mulinjie.top/resources/%E7%8C%AB%E7%9C%BC%E6%A6%9C%E5%8D%95.txt">猫眼榜单</a>中。</p>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
            <tag> python编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫学习笔记(五)：XPath解析库</title>
      <link href="/2021/07/20/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/XPath%E8%A7%A3%E6%9E%90%E5%BA%93/"/>
      <url>/2021/07/20/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/XPath%E8%A7%A3%E6%9E%90%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="1-XPath概述">1. XPath概述</h2><p>XPath的选择功能十分强大，它提供了非常简洁明了的路径选择表达式。另外，它还提供了超过100个内建函数，用于字符串、数值、时间的匹配以及节点、序列的处理等。几乎所有我们想要定位的节点，都可以用XPath来选择。</p><h2 id="2-XPath常用规则">2. XPath常用规则</h2><table><thead><tr><th style="text-align:center">表达式</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">nodename</td><td style="text-align:center">选择此节点的所有子节点</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">从当前节点选取直接子节点</td></tr><tr><td style="text-align:center">//</td><td style="text-align:center">从当前节点选取子节点</td></tr><tr><td style="text-align:center">.</td><td style="text-align:center">选择当前节点</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">选择当前节点的父节点</td></tr><tr><td style="text-align:center">@</td><td style="text-align:center">选择属性</td></tr></tbody></table><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//title[@lang=&#x27;eng&#x27;]</span><br></pre></td></tr></table></figure><p>代表选择所有名称为title，同时属性lang的值为eng的节点。</p><h2 id="3-环境配置">3. 环境配置</h2><p>确保已经安装了lxml库，可以在终端内输入<code>pip list</code>检查，如果没有安装使用<code>pip3 install lxml</code>命令进行安装。</p><h2 id="4-实例引入">4. 实例引入</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;ul&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2. html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-inactive&quot;&gt;&lt;a href=&quot;link3 .html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link4. html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-o&quot;&gt;&lt;a href=&quot;link5 . html&quot;&gt;fifth item&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">html = etree.HTML(text)<span class="comment">#构造一个XPath解析对象</span></span><br><span class="line">result = etree.tostring(html)<span class="comment">#转化为bytes类型的字符串</span></span><br><span class="line"><span class="built_in">print</span>(result. decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>这里首先导入lxml库的etree模块，然后声明了一段HTML文本，调用HTML类进行初始化，这样就成功构造了一个XPath解析对象。这里需要注意的是，HTML文本中的最后一个li节点是没有闭合的，但是<strong>etree模块可以自动修正HTML文本。</strong></p><p>这里我们调用<code>tostring()</code>方法即可输出修正后的HTML代码，但是结果是bytes类型。这里利用<code>decode()</code>方法将其转成str类型，结果如下:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link1.html&quot;</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link2. html&quot;</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-inactive&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link3 .html&quot;</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link4. html&quot;</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-o&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link5 . html&quot;</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，经过处理之后，li节点标签被补全，并且还自动添加了body、html节点。</p><p>另外，也可以<strong>直接读取文本文件进行解析</strong>，示例如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = etree.tostring(html)</span><br><span class="line"><span class="built_in">print</span>(result.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>根目录下的test.html文件内容仍然为：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot; item-0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link1.html&quot;</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link2 .html&quot;</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot; item- inactive&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link3. html&quot;</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link4. html&quot;</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link5 .html&quot;</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其输出结果略有不同，多了一个DOCTYPE声明，不过对解析结果没有影响：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/REC-html40/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot; item-0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link1.html&quot;</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link2 .html&quot;</span>&gt;</span>second item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot; item- inactive&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link3. html&quot;</span>&gt;</span>third item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link4. html&quot;</span>&gt;</span>fourth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link5 .html&quot;</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-所有节点">5. 所有节点</h2><p>我们<strong>一般会用//开头的XPath规则来选取所有符合要求的节点</strong>。这里以前面的HTML文本为例，如果要选取所有节点，可以这样实现：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>,etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[&lt;Element html at <span class="number">0x10b4bb680</span>&gt;, &lt;Element body at <span class="number">0x10b4bb580</span>&gt;, &lt;Element div at <span class="number">0x10b4bb6c0</span>&gt;, &lt;Element ul at <span class="number">0x10b4bb700</span>&gt;, &lt;Element li at <span class="number">0x10b4bb740</span>&gt;, &lt;Element a at <span class="number">0x10b4bb7c0</span>&gt;, &lt;Element li at <span class="number">0x10b4bb800</span>&gt;, &lt;Element a at <span class="number">0x10b4bb840</span>&gt;, &lt;Element li at <span class="number">0x10b4bb880</span>&gt;, &lt;Element a at <span class="number">0x10b4bb780</span>&gt;, &lt;Element li at <span class="number">0x10b4bb8c0</span>&gt;, &lt;Element a at <span class="number">0x10b4bb900</span>&gt;, &lt;Element li at <span class="number">0x10b4bb940</span>&gt;, &lt;Element a at <span class="number">0x10b4bb980</span>&gt;]</span><br></pre></td></tr></table></figure><p>这里使用*代表匹配所有节点，也就是整个HTML文本中的所有节点都会被获取。可以看到，返回形式是一个列表，每个元素是Element类型，其后跟了节点的名称，如html、body、 div、 ul、li、a等，所有的节点都包含在列表中了。</p><p>当然，此处也可以匹配指定的节点名称。如：获取所有li节点，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree .HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[&lt;Element li at <span class="number">0x10fb03540</span>&gt;, &lt;Element li at <span class="number">0x10fb03680</span>&gt;, &lt;Element li at <span class="number">0x10fb036c0</span>&gt;, &lt;Element li at <span class="number">0x10fb03700</span>&gt;, &lt;Element li at <span class="number">0x10fb03740</span>&gt;]</span><br><span class="line">&lt;Element li at <span class="number">0x10fb03540</span>&gt;</span><br></pre></td></tr></table></figure><p>这里可以看到提取结果是一个列表形式，其中每个元素都是一个 Element对象。如果要取出其中一个对象，可以直接用中括号加索引，如[0]。</p><h2 id="6-子节点">6. 子节点</h2><p>我们通过/或/即可查找元素的子节点或子孙节点。假如现在想选择li节点的所有直接a子节点，可以这样实现：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li/a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[&lt;Element a at <span class="number">0x10c238440</span>&gt;, &lt;Element a at <span class="number">0x10c238580</span>&gt;, &lt;Element a at <span class="number">0x10c2385c0</span>&gt;, &lt;Element a at <span class="number">0x10c238600</span>&gt;, &lt;Element a at <span class="number">0x10c238640</span>&gt;]</span><br></pre></td></tr></table></figure><p>此处的/用于选取直接子节点，如果要获取所有子孙节点，就可以使用//。例如，要获取ul节点下的所有子孙a节点，可以这样实现：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//ul//a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果相同。如果此处是//ul/a，那么久无法获取任何结果了。因为/用于获取直接子节点，而在ul节点下没有直接的a子节点。</p><h2 id="7-父节点">7. 父节点</h2><p>我们知道通过连续的/或//可以查找子节点或子孙节点，那么假如我们知道了子节点，怎样来查找父节点呢?这可以用<code>..</code>来实现。<br>比如，现在首先选中href属性为link4.html的a节点,然后再获取其父节点，然后再获取其class属性，相关代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>,etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//a[@href=&quot;link4.html&quot;]/../@class&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;item-1&#x27;</span>]</span><br></pre></td></tr></table></figure><p>检查一下结果发现，这正是我们获取的目标li节点的class。<br>同时，我们也可以通过<code>parent::</code>来获取父节点，代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//a[@href=&quot;link4.html&quot; ]/parent::*/@class&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h2 id="8-属性匹配">8. 属性匹配</h2><p>在选取的时候，我们还可以用@符号进行属性过滤。比如，这里如果要选取class为item-1的li节点，可以这样实现：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[@class=&quot;item-0&quot;]&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>这里我们通过加入[@class=“item-0”]，限制了节点的class属性为item-0，而HTML文本中符合条件的li节点有两个，所以结果应该返回两个匹配到的元素。结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[&lt;Element li at <span class="number">0x10f3ac740</span>&gt;, &lt;Element li at <span class="number">0x10f3ac780</span>&gt;]</span><br></pre></td></tr></table></figure><h2 id="9-文本获取">9. 文本获取</h2><p>我们用XPath中的<code>text()</code>方法获取节点中的文本，接下来尝试获取前面li节点中的文本，相关代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[@class=&quot;item-0&quot;]/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;\n&#x27;</span>]</span><br></pre></td></tr></table></figure><p>奇怪的是，我们并没有获取到任何文本，只获取到了一个换行符，这是为什么呢？因为XPath中<code>text()</code>前面是/，而此处/的含义是选取直接子节点，很明显li的直接子节点都是a节点，文本都是在a节点内部的，所以这里匹配到的结果就是被修正的li节点内部的换行符，因为自动修正的li节点的尾标签换行了。</p><p>即选中的是这两个节点：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-0&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link1.html&quot;</span>&gt;</span>first item<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;item-o&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;link5.html&quot;</span>&gt;</span>fifth item<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中一个节点因为自动修正，li节点的尾标签添加的时候换行了，所以提取文本得到的唯一结果就是li节点的尾标签和a节点的尾标签之间的换行符。</p><p>因此，如果想获取li节点内部的文本，就有两种方式：一种是先选取a节点再获取文本，另一种就是使用//。接下来，我们来看下二者的区别：</p><p>首先，选取到a节点再获取文本，代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[@class=&quot;item-0&quot;]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;first item&#x27;</span>, <span class="string">&#x27;fifth item&#x27;</span>]</span><br></pre></td></tr></table></figure><p>可以看到，这里的返回值是两个，内容都是属性为item-0的li节点的文本，这也印证了前面属性匹配的结果是正确的。<br>这里我们是逐层选取的，先选取了li节点，又利用/选取了其直接子节点a，然后再选取其文本，得到的结果恰好是符合我们预期的两个结果。<br>再来看下用另一种方式(即使用// )选取的结果，代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[@class=&quot;item-0&quot;]//text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;first item&#x27;</span>, <span class="string">&#x27;fifth item&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>]</span><br></pre></td></tr></table></figure><p>不出所料，这里的返回结果是3个。可想而知，这里是选取所有子孙节点的文本，其中前两个就是li的子节点a节点内部的文本，另外一个就是最后一个li节点内部的文本，即换行符。</p><p>所以说，如果要想<strong>获取子孙节点内部的所有文本</strong>，可以直接用//加text()的方式，这样可以保证获取到最全面的文本信息，但是可能会夹杂一些换行符等特殊字符。 如果想<strong>获取某些特定子孙节点下的所有文本</strong>，可以先选取到特定的子孙节点，然后再调用text()方法获取其内部文本，这样可以保证获取的结果是整洁的。</p><h2 id="10-属性获取">10. 属性获取</h2><p>我们知道用text()可以获取节点内部文本，那么节点属性该怎样获取呢？其实还是用@符号就可以。例如，我们想获取所有li节点下所有a节点的href属性，代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">&#x27;./test.html&#x27;</span>, etree.HTMLParser( ))</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li/a/@href&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;link1.html&#x27;</span>, <span class="string">&#x27;link2.html&#x27;</span>, <span class="string">&#x27;link3.html&#x27;</span>, <span class="string">&#x27;link4.html&#x27;</span>, <span class="string">&#x27;link5.html&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这里我们通过@href即可获取节点的href属性。注意，此处和属性匹配的方法不同，属性匹配是中括号加属性名和值来限定某个属性，如<code>[ @href=&quot;link1. html&quot;]</code>，而此处的@href指的是获取节点的某个属性，二者需要做好区分。</p><h2 id="11-属性多值匹配">11. 属性多值匹配</h2><p>有时候，某些节点的某个属性可能有多个值，例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;li li-first&quot;&gt;&lt;a href=&quot;link.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[@class=&quot;li&quot;]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>这里HTML文本中li节点的class属性有两个值li和li-first，此时如果还想用之前的属性匹配获取，就无法匹配了，此时的运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[]</span><br></pre></td></tr></table></figure><p>这时就需要用<code>contains()</code>函数了，代码可以改写如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;li li-first&quot;&gt;&lt;a href=&quot;link. html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[contains(@class,&quot;li&quot;)]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;first item&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这样通过<code>contains()</code>方法，第一个参数传入属性名称，第二个参数传入属性值，只要此属性包含所传入的属性值，就可以完成匹配了。</p><h2 id="12-多属性匹配">12. 多属性匹配</h2><p>另外，我们可能还遇到一种情况， 那就是根据多个属性确定一个节点， 这时就需要同时匹配多个<br>属性。此时可以使用运算符and来连接，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;li li-first&quot; name=&quot;item&quot; &gt;&lt;a href=&quot;link . html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[contains(@class,&quot;li&quot;) and @name=&quot;item&quot; ]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>这里的li节点又增加了一个属性name。要确定这个节点，需要同时根据class和name属性来选择，一个条件是class属性里面包含li字符串，另一个条件是name属性为item字符串，二者需要同时满足，需要用and操作符相连，相连之后置于中括号内进行条件筛选。运行结果如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;first item&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这里的and其实是XPah中的运算符。另外,还有很多运算符,如or、mod等，参考下表：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsnny0ce2gj30u00wuadl.jpg" alt="image-20210720195822637" style="zoom: 67%;" /><h2 id="13-按序选择">13. 按序选择</h2><p>有时候，我们在选择的时候某些属性可能同时匹配了多个节点，但是只想要其中的某个节点，如第二个节点或者最后一个节点，这时该怎么办呢？</p><p>这时可以利用中括号传入索引的方法获取特定次序的节点，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;ul&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot; item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot; item- inactive&quot; &gt;&lt;a href=&quot;link3. html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot; item-1&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-o&quot;&gt;&lt;a href=&quot;link5 .html&quot;&gt;fifth item&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[last()]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[position()&lt;3]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[last()-2]/a/text()&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>第一次选择时，我们选取了第一个li节点，中括号中传入数字1 即可。注意，这里和代码中不同，序号是以1开头的，不是以0开头。<br>第二次选择时，我们选取了最后一个li节点，中括号中传人last()即可，返回的便是最后一个li节点。<br>第三次选择时，我们选取了位置小于3的li节点，也就是位置序号为1和2的节点，得到的结果就是前两个li节点。<br>第四次选择时，我们选取了倒数第三个li节点，中括号中传入last()-2即可。因为last()是最后一个，所以last()-2就是倒数第三个。</p><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;first item&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;fifth item&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;first item&#x27;</span>, <span class="string">&#x27;second item&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;third item&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="14-节点轴选择">14. 节点轴选择</h2><p>XPath提供了很多节点轴选择方法，包括获取子元素、兄弟元素、父元素、祖先元素等，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;ul&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;&lt;span&gt;first item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot; &gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-inactive&quot; &gt;&lt;a href=&quot;link3.html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link4.html&quot; &gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/ancestor::*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/ancestor::div&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/attribute::*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/child::a[@href=&quot;link1.html&quot;]&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/descendant::span&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/following::*[2]&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = html.xpath(<span class="string">&#x27;//li[1]/following-sibling::*&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[&lt;Element html at <span class="number">0x10ae25240</span>&gt;, &lt;Element body at <span class="number">0x10d37f5c0</span>&gt;, &lt;Element div at <span class="number">0x10d37f4c0</span>&gt;, &lt;Element ul at <span class="number">0x10d37f600</span>&gt;]</span><br><span class="line">[&lt;Element div at <span class="number">0x10d37f4c0</span>&gt;]</span><br><span class="line">[<span class="string">&#x27;item-0&#x27;</span>]</span><br><span class="line">[&lt;Element a at <span class="number">0x10d37f4c0</span>&gt;]</span><br><span class="line">[&lt;Element span at <span class="number">0x10d37f6c0</span>&gt;]</span><br><span class="line">[&lt;Element a at <span class="number">0x10d37f680</span>&gt;]</span><br><span class="line">[&lt;Element li at <span class="number">0x10d37f540</span>&gt;, &lt;Element li at <span class="number">0x10d37f4c0</span>&gt;, &lt;Element li at <span class="number">0x10d37f5c0</span>&gt;, &lt;Element li at <span class="number">0x10d37f600</span>&gt;]</span><br></pre></td></tr></table></figure><p>第一次选择时，我们调用了ancestor轴，可以获取所有祖先节点。其后需要跟两个冒号，然后是节点的选择器，这里我们直接使用*，表示匹配所有节点，因此返回结果是第一个li节点的所有祖先节点，包括html、body、 div 和ul。</p><p>第二次选择时，我们又加了限定条件，这次在冒号后面加了div,这样得到的结果就只有div这个祖先节点了。</p><p>第三次选择时，我们调用了attribute轴，可以获取所有属性值，其后跟的选择器还是*，这代表获取节点的所有属性，返回值就是li节点的所有属性值。</p><p>第四次选择时，我们调用了child轴，可以获取所有直接子节点。这里我们又加了限定条件，选取href属性为link1.html的a节点。</p><p>第五次选择时，我们调用了descendant轴，可以获取所有子孙节点。这里我们又加了限定条件获取span节点，所以返回的结果只包含span节点而不包含a节点。</p><p>第六次选择时，我们调用了following 轴，可以获取当前节点之后的所有节点。这里我们虽然使用的是*匹配，但又加了索引选择，所以只获取了第二个后续节点。</p><p>第七次选择时，我们调用了following-sibling 轴，可以获取当前节点之后的所有同级节点。这里我们使用*匹配，所以获取了所有后续同级节点。</p><h2 id="15-结语">15. 结语</h2><p>到现在为止，我们基本上把可能用到的XPath选择器介绍完了。XPath 功能非常强大，内置函数非常多，熟练使用之后，可以大大提升HTML信息的提取效率。<br>如果想查询更多XPath的用法，可以查看: <a href="http://www.w3school.com.cn/xpath/index.asp%E3%80%82">http://www.w3school.com.cn/xpath/index.asp。</a><br>如果想查询更多Python lxml库的用法，可以查看：<a href="http://lxml.de/%E3%80%82">http://lxml.de/。</a></p><h2 id="16-使用XPath解析爬取豆瓣Top250网页">16. 使用XPath解析爬取豆瓣Top250网页</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开一个csv文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;douban.csv&quot;</span>,mode=<span class="string">&quot;w&quot;</span>)</span><br><span class="line">csvwriter = csv.writer(f)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="comment"># 获取网页源码</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.164 Safari/537.36&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&#x27;https://movie.douban.com/top250&#x27;</span>+<span class="string">&#x27;?start=&#x27;</span>+<span class="built_in">str</span>(<span class="number">25</span>*page)+<span class="string">&#x27;&amp;filter=&#x27;</span></span><br><span class="line">    resp = requests.get(url,headers = headers)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解析网页源码</span></span><br><span class="line">    html = etree.HTML(resp.text)     <span class="comment">#创建一个xpath对象</span></span><br><span class="line">    lis = html.xpath(<span class="string">&#x27;//*[@id=&quot;content&quot;]/div/div[1]/ol/li&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> lis:</span><br><span class="line">        index = li.xpath(<span class="string">&#x27;./div[@class=&quot;item&quot;]/div[@class=&quot;pic&quot;]/em/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        name = li.xpath(<span class="string">&#x27;./div/div[2]/div[1]/a/span[1]/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        star = li.xpath(<span class="string">&#x27;./div/div[2]/div[2]/div/span[2]/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        dic = &#123;</span><br><span class="line">            <span class="string">&#x27;index&#x27;</span>:<span class="built_in">int</span>(index),</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span>:<span class="built_in">str</span>(name),</span><br><span class="line">            <span class="string">&#x27;star&#x27;</span>:<span class="built_in">float</span>(star)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(dic)</span><br><span class="line">        csvwriter.writerow(dic.values())</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
            <tag> python编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫学习笔记(四):正则表达式</title>
      <link href="/2021/07/17/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2021/07/17/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-常用的匹配规则">1. 常用的匹配规则</h2><table><thead><tr><th style="text-align:center">模式</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">\w</td><td style="text-align:left">匹配字母、数字及下划线</td></tr><tr><td style="text-align:center">\W</td><td style="text-align:left">匹配不是字母、数字及下划线的字符</td></tr><tr><td style="text-align:center">\s</td><td style="text-align:left">匹配任意空白字符，等价于[\t\n\r\f]</td></tr><tr><td style="text-align:center">\S</td><td style="text-align:left">匹配任意非空字符</td></tr><tr><td style="text-align:center">\d</td><td style="text-align:left">匹配任意数字，等价于[0-9]</td></tr><tr><td style="text-align:center">\D</td><td style="text-align:left">匹配任意非数字的字符</td></tr><tr><td style="text-align:center">\A</td><td style="text-align:left">匹配字符串开头</td></tr><tr><td style="text-align:center">\Z</td><td style="text-align:left">匹配字符串结尾，如果存在换行，只匹配到换行前的结束字符串</td></tr><tr><td style="text-align:center">\z</td><td style="text-align:left">匹配字符串结尾，如果存在换行，同时还会匹配换行符</td></tr><tr><td style="text-align:center">\G</td><td style="text-align:left">匹配最后匹配完成的位置</td></tr><tr><td style="text-align:center">\n</td><td style="text-align:left">匹配一个换行符</td></tr><tr><td style="text-align:center">\t</td><td style="text-align:left">匹配一个制表符</td></tr><tr><td style="text-align:center">^</td><td style="text-align:left">匹配一行字符串开头</td></tr><tr><td style="text-align:center">$</td><td style="text-align:left">匹配一行字符串结尾</td></tr><tr><td style="text-align:center">.</td><td style="text-align:left">匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符在内的任意字符</td></tr><tr><td style="text-align:center">[…]</td><td style="text-align:left">用来表示一组字符，单独列出，比如[amk]匹配a、m或k</td></tr><tr><td style="text-align:center">[^…]</td><td style="text-align:left">不在[]中的字符，比如<code>[^abc]</code>匹配除a、b、c之外的字符</td></tr><tr><td style="text-align:center">*</td><td style="text-align:left">匹配0个或多个表达式</td></tr><tr><td style="text-align:center">+</td><td style="text-align:left">匹配1个或多个表达式</td></tr><tr><td style="text-align:center">?</td><td style="text-align:left">匹配0个或1个前面的正则表达式定义的片段，非贪婪模式</td></tr><tr><td style="text-align:center">{n}</td><td style="text-align:left">精确匹配n个前面的表达式</td></tr><tr><td style="text-align:center">{n,m}</td><td style="text-align:left">匹配n到m次由前面正则表达式定义的片段，贪婪模式</td></tr><tr><td style="text-align:center">a|b</td><td style="text-align:left">匹配a或b</td></tr><tr><td style="text-align:center">( )</td><td style="text-align:left">匹配括号内的表达式，也表示一个组</td></tr></tbody></table><h2 id="2-match">2. match()</h2><p>向<code>match()</code>中传入要匹配的字符串以及正则表达式，就可以检测这个正则表达式是否匹配字符串。<code>match()</code>方法常常会尝试从字符串的起始位置匹配正则表达式，如果匹配成果，就返回匹配成功的结果；如果不匹配，就返回None。示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 123 4567 World_This is a Regex Demo&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(content))</span><br><span class="line">result = re.match(<span class="string">&#x27;^Hello\s\d\d\d\s\d&#123;4&#125;\s\w&#123;10&#125;&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result.group())</span><br><span class="line"><span class="built_in">print</span>(result.span())</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">41</span></span><br><span class="line">&lt;re.Match <span class="built_in">object</span>; span=(<span class="number">0</span>, <span class="number">25</span>), match=<span class="string">&#x27;Hello 123 4567 World_This&#x27;</span>&gt;</span><br><span class="line">Hello <span class="number">123</span> <span class="number">4567</span> World_This</span><br><span class="line">(<span class="number">0</span>, <span class="number">25</span>)</span><br></pre></td></tr></table></figure><p>在<code>match()</code>方法中，第一个参数传入了正则表达式，第二个参数传入了要匹配的字符串。</p><p>返回的对象有两个方法：<code>group()</code>方法可以输出匹配到的内容，<code>span()</code>方法可以输出匹配的范围。</p><ul><li>匹配目标</li></ul><p>如果我们想在匹配到的字符串内容中选择一部分内容，则可以使用括号将想要提取的子字符串括起来，被标记的每一个子表达式会依次对应于一个分组，调用<code>group()</code>方法传入索引即可得到结果。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(content))</span><br><span class="line">result = re.match(<span class="string">&#x27;^Hello\s(\d+)\sWorld&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result.group())</span><br><span class="line"><span class="built_in">print</span>(result.group(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(result.span())</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">40</span></span><br><span class="line">&lt;re.Match <span class="built_in">object</span>; span=(<span class="number">0</span>, <span class="number">19</span>), match=<span class="string">&#x27;Hello 1234567 World&#x27;</span>&gt;</span><br><span class="line">Hello <span class="number">1234567</span> World</span><br><span class="line"><span class="number">1234567</span></span><br><span class="line">(<span class="number">0</span>, <span class="number">19</span>)</span><br></pre></td></tr></table></figure><ul><li>通用匹配</li></ul><p>使用<code>.*</code>可以做到一个万能匹配。其中，点可以匹配任意字符（除换行符），星代表可以匹配前面的字符无限次，所以它们组合在一起就可以匹配任意字符了。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span></span><br><span class="line">result = re.match(<span class="string">&#x27;^Hello.*Demo$&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(result.group())</span><br><span class="line"><span class="built_in">print</span>(result.span())</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;re.Match <span class="built_in">object</span>; span=(<span class="number">0</span>, <span class="number">40</span>), match=<span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span>&gt;</span><br><span class="line">Hello <span class="number">1234567</span> World_This <span class="keyword">is</span> a Regex Demo</span><br><span class="line">(<span class="number">0</span>, <span class="number">40</span>)</span><br></pre></td></tr></table></figure><ul><li>贪婪与非贪婪</li></ul><p>在贪婪匹配下，<code>.*</code>会匹配尽可能多的字符。非贪婪模式会匹配尽可能少的字符，写法为<code>.*?</code>。可以通过下面这个示例来体会二者的不同。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span></span><br><span class="line">result1 = re.match(<span class="string">&#x27;^He.*(\d+).*Demo$&#x27;</span>,content)</span><br><span class="line">result2 = re.match(<span class="string">&#x27;^He.*?(\d+).*Demo$&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result1.group(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(result2.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure><p>所以说，在做匹配的时候，字符串中间尽量使用非贪婪匹配，以免出现缺失的情况。如果匹配的结果在字符串的，非贪婪匹配可能匹配不到任何内容，因为他会尽可能少的匹配字符。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;http://weibo.com/comment/kEraCN&#x27;</span></span><br><span class="line">result1 = re.match(<span class="string">&#x27;http.*?comment/(.*?)&#x27;</span>,content)</span><br><span class="line">result2 = re.match(<span class="string">&#x27;http.*?comment/(.*)&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;result1&quot;</span>,result1.group(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;result2&quot;</span>,result2.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result1 </span><br><span class="line">result2 kEraCN</span><br></pre></td></tr></table></figure><ul><li>修饰符</li></ul><p>正则表达式可能包含可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的标志。</p><p>如果要匹配的字符串中含有换行符，则匹配会出错，因为<code>.*?</code>匹配的是除了换行符之外的任意字符。只需要加一个修饰符<code>re.S</code>即可修正该错误。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = re.match(<span class="string">&#x27;^He.*?(\d+).*?Demo$&#x27;</span>,content,re.S)</span><br></pre></td></tr></table></figure><p>下表为常见的修饰符：</p><table><thead><tr><th style="text-align:center">修饰符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>re.I</code></td><td style="text-align:center">使匹配对大小写不敏感</td></tr><tr><td style="text-align:center"><code>re.L</code></td><td style="text-align:center">做本地化识别匹配</td></tr><tr><td style="text-align:center"><code>re.M</code></td><td style="text-align:center">多行匹配，影响^和$</td></tr><tr><td style="text-align:center"><code>re.S</code></td><td style="text-align:center">使<code>.</code>匹配包括换行符在内的所有字符</td></tr><tr><td style="text-align:center"><code>re.U</code></td><td style="text-align:center">根据Unicode字符集解析字符。这个标志影响\w,\W,\b和\B</td></tr><tr><td style="text-align:center"><code>re.X</code></td><td style="text-align:center">该标志通过给予你更灵活的格式以便你讲正则表达式写得更易于理解</td></tr></tbody></table><ul><li>转义匹配</li></ul><p>如果目标字符串中含有格式控制的符号，则需要加上反斜杠<code>\</code>进行转义，才能正确匹配。</p><h2 id="3-search">3. search()</h2><p><code>match()</code>方法是从字符串的开头开始匹配，一旦开头不匹配，那么整个匹配就是失败的。示例代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">content = <span class="string">&#x27;Extra strings Hello 1234567 World_This is a Regex Demo Extra strings&#x27;</span></span><br><span class="line">result = re.match(<span class="string">&#x27;Hello.*?(\d+).*?Demo&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="literal">None</span></span><br></pre></td></tr></table></figure><p>相比之下，<code>search()</code>方法在匹配时会扫描整个字符串，然后返回第一个成功匹配的结果。也就是说，正则表达式可以使字符串的一部分，在匹配时，<code>search()</code>方法会依次扫描字符串，直到找到第一个复合规则的字符串，然后返回匹配内容，如果扫描完了还没找到，就返回None。</p><p>例如把上述代码中的<code>match()</code>方法替换为<code>search()</code>后，结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;re.Match <span class="built_in">object</span>; span=(<span class="number">14</span>, <span class="number">54</span>), match=<span class="string">&#x27;Hello 1234567 World_This is a Regex Demo&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="4-findall">4. findall()</h2><p>与<code>search()</code>方法不同，该方法会返回所有符合标准的结果，并存放于一个列表中。</p><h2 id="5-sub">5. sub()</h2><p>该方法可以实现将字符串中指定匹配的所有内容进行替换，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">&#x27;54aK54yr5oiR54ix5L2g&#x27;</span></span><br><span class="line">content = re.sub(<span class="string">&#x27;\d+&#x27;</span>,<span class="string">&#x27;&#x27;</span>,content)</span><br><span class="line"><span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">aKyroiRixLg</span><br></pre></td></tr></table></figure><h2 id="6-compile">6. compile()</h2><p>该方法可以将正则字符串编译成正则表达式对象，以便在后面的匹配中复用。示例代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content1 = <span class="string">&#x27;2016-12-15 12:00&#x27;</span></span><br><span class="line">content2 = <span class="string">&#x27;2016-12-17 12:55&#x27;</span></span><br><span class="line">content3 = <span class="string">&#x27;2016-12-22 13:21&#x27;</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;\d&#123;2&#125;:\&#123;2&#125;&#x27;</span>)</span><br><span class="line">result1 = re.sub(pattern,<span class="string">&#x27;&#x27;</span>,content1)</span><br><span class="line">result2 = re.sub(pattern,<span class="string">&#x27;&#x27;</span>,content2)</span><br><span class="line">result3 = re.sub(pattern,<span class="string">&#x27;&#x27;</span>,content3)</span><br><span class="line"><span class="built_in">print</span>(result1,result2,result3)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2016</span>-<span class="number">12</span>-<span class="number">15</span>  <span class="number">2016</span>-<span class="number">12</span>-<span class="number">17</span>  <span class="number">2016</span>-<span class="number">12</span>-<span class="number">22</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
            <tag> python编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫学习笔记(三):requests库的使用</title>
      <link href="/2021/07/16/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/requests%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/07/16/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/requests%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-GET请求">1. GET请求</h2><ul><li>基本实例</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;python-requests/2.25.1&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-60ee9fe5-5bd5b1c3195a2d08455c0d00&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;111.20.225.145&quot;</span>, </span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想要附加额外信息，我们可以使用params这个参数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;zhangsan&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;20&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>,params = data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="string">&quot;20&quot;</span>, </span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhangsan&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;python-requests/2.25.1&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-60eea0c5-3f2ce86940b4986c293af506&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;111.20.225.134&quot;</span>, </span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/get?name=zhangsan&amp;age=20&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，网页的返回是一个str类型的JSON格式文件，如果想转化字典类型需要使用<code>json()</code>方法。</p><ul><li>抓取网页</li></ul><p>在抓取一些网页的时候，需要加入headers信息，修改User-Agent字段，伪装成为浏览器，否则会被禁止。下面以抓取知乎为例：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36( (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                     <span class="string">&#x27;Chrome/52.0.2743.116 Safari/537.36&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(<span class="string">&quot;https://www.zhihu.com/explore&quot;</span>,headers=headers)</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;explore-feed.*?question_link.*?&gt;(.*?)&lt;/a&gt;&#x27;</span>,re.S)</span><br><span class="line">    titles = re.findall(pattern,r.text)</span><br><span class="line">    <span class="built_in">print</span>(titles)</span><br><span class="line"><span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e.reason)</span><br></pre></td></tr></table></figure><ul><li>抓取二进制数据</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(<span class="string">&quot;https://mulinjie.top/img/favicon.png&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;favicon.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e.reason)</span><br></pre></td></tr></table></figure><ul><li>添加头文件</li></ul><h2 id="2-POST请求">2. POST请求</h2><p>使用requests实现POST请求同样非常简单，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">data = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Jerry Mu&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;20&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">r = requests.post(<span class="string">&quot;https://httpbin.org/post&quot;</span>,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;data&quot;</span>: <span class="string">&quot;&quot;</span>, </span><br><span class="line">  <span class="string">&quot;files&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;form&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="string">&quot;20&quot;</span>, </span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Jerry Mu&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;20&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;python-requests/2.25.1&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-60eeaa37-780f08311c82d799588c2b6c&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;json&quot;</span>: null, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;111.20.225.145&quot;</span>, </span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://httpbin.org/post&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-response类的常用属性和方法">3. response类的常用属性和方法</h2><table><thead><tr><th style="text-align:center">属性或方法</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><code>status_code</code></td><td style="text-align:center">得到对象的状态码</td></tr><tr><td style="text-align:center"><code>text</code></td><td style="text-align:center">把response对象转换为字符串数据</td></tr><tr><td style="text-align:center"><code>content</code></td><td style="text-align:center">把response对象转换为二进制数据</td></tr><tr><td style="text-align:center"><code>encoding()</code></td><td style="text-align:center">定义response对象的编码格式</td></tr><tr><td style="text-align:center"><code>headers</code></td><td style="text-align:center">得到对象的响应头</td></tr><tr><td style="text-align:center"><code>cookies</code></td><td style="text-align:center">得到对象的Cookies</td></tr><tr><td style="text-align:center"><code>url</code></td><td style="text-align:center">得到对象的URL链接</td></tr><tr><td style="text-align:center"><code>history</code></td><td style="text-align:center">得到对象的历史信息</td></tr></tbody></table><p>下面是返回码和响应的查询条件：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsglwdhgw2j30s20iytg4.jpg" alt="CC2BCBF1FDE4C1904E3B3950672D61A2" style="zoom: 53.5%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsglwnh1k4j30u018i1ht.jpg" alt="9245E20CBB9CFE48E316CCA6A18C3F14" style="zoom:50%;" /><p>比如，如果想比较判断结果是不是404状态，可以用<code>requests.codes.not_found</code>来比对。</p><h2 id="4-高级用法">4. 高级用法</h2><h4 id="1-文件上传">1. 文件上传</h4><p>示例代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>:<span class="built_in">open</span>(<span class="string">&#x27;favicon&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line">r = requests.post(<span class="string">&quot;http://httpbin.org/post&quot;</span>.files = files)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;args&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;data&quot;</span>: <span class="string">&quot;&quot;</span>, </span><br><span class="line">  <span class="string">&quot;files&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: <span class="string">&quot;data:application/octet-stream;base64,AAA.....=&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;form&quot;</span>: &#123;&#125;, </span><br><span class="line">  <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;50104&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;multipart/form-data; boundary=a74987db926aa3b1504fe01a220921b7&quot;</span>, </span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;httpbin.org&quot;</span>, </span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;python-requests/2.25.1&quot;</span>, </span><br><span class="line">    <span class="string">&quot;X-Amzn-Trace-Id&quot;</span>: <span class="string">&quot;Root=1-60eeb02f-2e4858124cd6b05d10fbeb60&quot;</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">&quot;json&quot;</span>: null, </span><br><span class="line">  <span class="string">&quot;origin&quot;</span>: <span class="string">&quot;111.20.225.134&quot;</span>, </span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://httpbin.org/post&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-Cookies">2. Cookies</h4><p>下面是一个获取Cookies的过程：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.cookies)</span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> r.cookies.items():</span><br><span class="line"><span class="built_in">print</span>(key+<span class="string">&#x27;=&#x27;</span>+value)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;RequestsCookieJar[&lt;Cookie BDORZ=<span class="number">27315</span> <span class="keyword">for</span> .baidu.com/&gt;]&gt;</span><br><span class="line">BDORZ=<span class="number">27315</span></span><br></pre></td></tr></table></figure><p>我们首先调用量cookies属性成功得到Cookies，可以发现它是RequestCookieJar类型。之后用<code>items()</code>方法将其转化为元组列表，并遍历输出。</p><p>我们也可以直接用Cookie来维持登录状态，以登录知乎为例，首先在浏览器内打开知乎，将Headers中的Cookies复制下来，并将其粘贴到代码的headers中。</p><h4 id="3-会话维持">3. 会话维持</h4><p>利用<code>Session</code>对象实现会话维持功能：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36( (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                 <span class="string">&#x27;Chrome/52.0.2743.116 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>:<span class="string">&#x27;www.zhihu.com&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">s = requests.Session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    r = s.get(<span class="string">&quot;https://www.zhihu.com&quot;</span>,headers=headers)</span><br><span class="line">    <span class="keyword">for</span> key,value <span class="keyword">in</span> r.cookies.items():</span><br><span class="line">    <span class="built_in">print</span>(key+<span class="string">&#x27;=&#x27;</span>+value)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">KLBRSID=4efa8d1879cb42f8c5b48fe9f8d37c16|<span class="number">1626258205</span>|<span class="number">1626258205</span></span><br><span class="line">KLBRSID=4efa8d1879cb42f8c5b48fe9f8d37c16|<span class="number">1626258205</span>|<span class="number">1626258205</span></span><br><span class="line">KLBRSID=4efa8d1879cb42f8c5b48fe9f8d37c16|<span class="number">1626258205</span>|<span class="number">1626258205</span></span><br><span class="line">KLBRSID=4efa8d1879cb42f8c5b48fe9f8d37c16|<span class="number">1626258205</span>|<span class="number">1626258205</span></span><br><span class="line">KLBRSID=4efa8d1879cb42f8c5b48fe9f8d37c16|<span class="number">1626258206</span>|<span class="number">1626258205</span></span><br></pre></td></tr></table></figure><p>可见，均为同一个会话。</p><p>在本例中我们首先，声明了一个Session对象，之后用该对象多次get，每一get均在同一会话下。</p><h4 id="4-SSL证书验证">4. SSL证书验证</h4><p>requests发送HTTP请求的时候，会检查SSL证书，我们可以使用verify参数控制是否检查该证书。其默认值为True，会自动验证。</p><h4 id="5-代理设置">5. 代理设置</h4><p>在<code>requests.get()</code>函数中传入<code>proxies</code>参数</p><h4 id="6-超时设置">6. 超时设置</h4><p>在<code>requests.get()</code>函数中传入<code>timeout</code>参数，单位为秒。如果需要永久等待，则设置<code>timeout</code>参数为<code>None</code>。</p><h4 id="7-身份认证">7. 身份认证</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&quot;http://localhost:5000&quot;</span>,auth=HTPPBasicAuth(<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;password&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(r.status_code)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
            <tag> python编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫学习笔记(二):urllib库的使用</title>
      <link href="/2021/07/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/urllib%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/07/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/urllib%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-使用urllib库">1. 使用urllib库</h2><ol><li><code>request</code>：用来模拟发送请求</li><li><code>error</code>：异常处理模块</li><li><code>parse</code>：一个工具模板，提供了许多URL处理方法</li><li><code>robotparser</code>：用来识别网站的robots.txt文件，然后网站是否可以爬取</li></ol><h3 id="1-发送请求">1. 发送请求</h3><h4 id="1-urlopen-方法">1.<code>urlopen()</code>方法</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urllib.request.urlopen(url,data=<span class="literal">None</span>,[timeout,]*, cafile=<span class="literal">None</span>, capath=<span class="literal">None</span>, cadefault=<span class="literal">False</span>, context=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h5 id="1-data参数：">1.data参数：</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">data = <span class="built_in">bytes</span>(urllib.parse.urlencode(&#123;<span class="string">&quot;word&quot;</span>:<span class="string">&quot;hello&quot;</span>&#125;),encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">response = urllib.request.urlopen(<span class="string">&#x27;https://httpbin.org/post&#x27;</span>,data)</span><br><span class="line"><span class="built_in">print</span>(response.read())</span><br></pre></td></tr></table></figure><ul><li><p>可选参数。如果添加该参数，请求类型从GET变为POST，并且需要通过<code>bytes()</code>方法转化将字符串类型转化为字节流文件。</p></li><li><p><code>urllib.parse.urlencode()</code>可以将字典序列转化为字符串</p></li><li><p><code>bytes()</code>函数可以将字符串在规定编码格式下转化为字节流文件</p></li><li><p><code>read()</code>函数是读取网页的整个内容，我们可以取指定长度，如<code>read(300)</code>。还有两个函数读取网页内容：</p><ul><li><code>readline()</code>读取一行网页</li><li><code>readlines()</code>读取网页全部内容，并把内容逐行赋给一个列表变量</li></ul></li></ul><h5 id="2-timeout参数">2. timeout参数</h5><p>用于设置超时时间，单位为秒，如果超出了该时间还没有响应则抛出异常。可以通过该设置，利用<code>try-except</code>语句来捕捉异常跳过长时间没有响应的网页。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.error</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  response = urllib.request.urlopen(<span class="string">&#x27;https://httpbin.org/post&#x27;</span>,timeout=<span class="number">0.1</span>)</span><br><span class="line"><span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">isinstance</span>(e.reason,socket.timeout):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Time Out!&quot;</span>) </span><br></pre></td></tr></table></figure><ul><li><p><code>isinstance(object, classinfo)</code> 函数来判断一个对象是否是一个已知的类型，类似<code> type()</code>。前者考虑继承关系，后者不考虑继承关系。</p></li><li><p><code>reason</code>为异常的原因，<code>getcode()</code>函数返回异常码。</p></li></ul><h5 id="3-cafile-和-capath参数">3. cafile 和 capath参数</h5><p>cafile 为 CA 证书， capath 为 CA 证书的路径，使用 HTTPS 需要用到。</p><h5 id="4-cadefault参数">4. cadefault参数</h5><p>已经被弃用，默认值是False。</p><h5 id="5-context参数">5. context参数</h5><p>ssl.SSLContext类型，用来指定 SSL 设置。</p><h4 id="2-Request-方法">2. <code>Request()</code>方法</h4><p><code>uelopen()</code>方法可以实现基本请求的发起，但这几个简单的参数并不足以构建一个完整的请求。如果请求中需要加入<code>Headers</code>等信息，就可以利用更强大的<code>Request</code>方法来构建。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">urllib</span>.<span class="title">request</span>.<span class="title">Request</span>(<span class="params">url, data=<span class="literal">None</span>, headers=&#123;&#125;, origin_req_host=<span class="literal">None</span>, unverifiable=<span class="literal">False</span>, method=<span class="literal">None</span></span>)</span></span><br></pre></td></tr></table></figure><h5 id="1-url参数">1. url参数</h5><p>请求一个URL，必传参数。</p><h5 id="2-data参数">2. data参数</h5><p>可选参数，如果要传，必须为字节流类型。</p><h5 id="3-headers参数">3. headers参数</h5><p>可选参数，传HTTP请求的头部信息，字典格式。最常见的应用就是通过修改<code>User-Agent</code>来伪装浏览器，默认为<code>Python-urllib</code>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://httpbin.org/post&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;httpbin.org&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dict</span> =&#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Germey&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data = <span class="built_in">bytes</span>(parse.urlencode(<span class="built_in">dict</span>),encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">req = request.Request(url=url,data=data,headers=headers,method=<span class="string">&#x27;POST&#x27;</span>)</span><br><span class="line">response = request.urlopen(req)</span><br><span class="line"><span class="built_in">print</span>(response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>我们通过<code>Request()</code>方法构建了一个<code>request</code>类，然后使用<code>urlopen()</code>方法发送请求。</p><p>其中，<code>str.decode(encoding='UTF-8',errors='strict')</code>方法的作用是以 <code>encoding</code>指定的编码格式解码字符串。默认编码为字符串编码。</p><h5 id="4-origin-req-host参数">4. origin_req_host参数</h5><p>可选参数，请求的主机地址，IP 或域名。</p><h5 id="5-unverifiable参数">5. unverifiable参数</h5><p>可选参数，表示这个请求是否无法是无法验证的，默认值为False。</p><h5 id="6-method参数">6. method参数</h5><p>可选参数，用来指示请求的方法，如GET、POST、PUT等。</p><h4 id="3-高级用法">3. 高级用法</h4><p>对于一些更加高级的操作（比如Cookies处理、代理设置等），上面的方法都无能为力，下面学习更加强大的工具Handler。</p><p>首先介绍<code>urllib.request</code>模板中的<code>BaseHandler</code>类，它是所有其他Handler类的父类。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsgg10q6erj32qe0li77y.jpg" alt="BaseHandler类" style="zoom: 25%;" /><p>另一个比较重要的类就是<code>OpenerDirector</code>，可以做到如下功能：</p><ul><li>验证</li><li>代理</li><li>Cookies</li></ul><h3 id="2-异常处理">2. 异常处理</h3><h4 id="1-URLError">1. URLError</h4><p>来自于<code>urllib</code>库中的<code>error</code>模块，它继承自<code>OSError</code>类，是<code>error</code>异常模块的基类，由<code>request</code>模块产生的异常都可以通过捕获这个类来处理。它有如下操作：</p><ol><li><code>reason</code>属性：返回错误原因</li><li><code>getcode()</code>方法：返回错误代码</li></ol><h4 id="2-HTTPError">2. HTTPError</h4><p>它是URLError的子类，专门用来处理HTTP请求错误，比如认证请求失败等。它有如下3个属性：</p><ol><li><code>code</code>属性：返回HTTP状态码</li><li><code>reason</code>属性：返回错误原因</li><li><code>headers</code>属性：返回请求头</li></ol><p>我们可以通过<code>isinstance()</code>方法来判断异常类型，做出更详细的异常判断</p><h3 id="3-解析连接">3. 解析连接</h3><p><code>urllib</code>库内还提供了<code>parse</code>模块，它定义了处理URL的标准接口，例如实现URL各部分的抽取、合并及链接转换。</p><h4 id="1-urlparse-方法">1. <code>urlparse()</code>方法</h4><p>该方法用于URL的识别和分段：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urllib.parse.urlparse(urlstring, scheme=<span class="string">&#x27;&#x27;</span>, allow_fragments=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>其返回结果为一个<code>ParseResult</code>对象，它包含6个部分，分别是<code>scheme</code>、<code>netlocb</code>、<code>path</code>、<code>params</code>、<code>query</code>、<code>fragment</code>，即协议、域名、访问路径、参数、查询条件、锚点。该对象其实可以看做一个元组，可以使用下标访问，也可以使用属性名访问。</p><h5 id="1-urlstring参数">1. urlstring参数</h5><p>必选参数，待解析的URL。</p><h5 id="2-scheme参数">2. scheme参数</h5><p>可选参数，指定默认协议，如果该链接没有协议类型则加上该协议类型。</p><h5 id="3-allow-fragments参数">3. allow_fragments参数</h5><p>可选参数，是否忽略fragment。默认值是True，表示不忽略。</p><h4 id="2-urlunparse-方法">2. <code>urlunparse()</code>方法</h4><p>它是<code>urlparse()</code>的对立方法，将6个部分组成为一个URL。</p><h4 id="3-urlsplit-方法">3. <code>urlsplit()</code>方法</h4><p>与<code>urlparse()</code>方法类似，区别是返回5部分，将<code>params</code>合并到<code>path</code>中。</p><h4 id="4-urlunsplit-方法">4. <code>urlunsplit()</code>方法</h4><p>它是<code>urlsplit()</code>的对立方法</p><h4 id="5-urljoin-方法">5. <code>urljoin()</code>方法</h4><p>其参数为两个链接，该方法的功能是以第一链接为基础对第二个链接进行补充。</p><h4 id="6-urlencode-方法">6. <code>urlencode()</code>方法</h4><p>将字典序列转化为GET请求的字符串类型的参数</p><h4 id="7-parse-qs-方法">7. <code>parse_qs()</code>方法</h4><p>反序列化，将GET请求的字符串参数转化为字典序列</p><h4 id="8-parse-qsl-方法">8. <code>parse_qsl()</code>方法</h4><p>将GET请求的字符串参数转化为由元组组成的列表</p><h4 id="9-quote-方法">9. <code>quote()</code>方法</h4><p>将中文转化为URL编码的格式，防止乱码。</p><h4 id="10-unquote-方法">10. <code>unquote()</code>方法</h4><p>将URL编码还原。</p><h3 id="4-分析Robots协议">4. 分析Robots协议</h3><p>可以利用<code>urllib</code>库中的<code>robotparser</code>模块来实现。</p><h4 id="1-Robots协议">1. Robots协议</h4><p>Robots协议也称作爬虫协议、机器人协议，它的全名叫作网络爬虫排除标准(Robots Exclusion Protocol)，用来告诉爬虫和搜索引擎哪些页面可以爬取。它通常是一个叫作robots.txt的文件，放于网页根目录下。</p><p>下面是一个样例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-agent:*</span><br><span class="line">Disallow:/</span><br><span class="line">Allow:/public/</span><br></pre></td></tr></table></figure><p>其中，User-agent描述了搜索爬虫的名称，*代表对所有爬虫有效。Disallow制定了不允许爬取的目录。Allow一般与Disallow一起使用，用来排除一些限制。</p><h4 id="2-爬虫名称">2. 爬虫名称</h4><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsgi7mmg5yj315e09k43s.jpg" alt="D5631223FB9FE1CBE4F74E52A49D6B03" style="zoom:50%;" /><h4 id="3-robotparser">3. robotparser</h4><p><code>robotparser</code>模块提供了一个类<code>RobotFileParser</code>，可以用来解析robots.txt文件。这个类用起来十分简单，只需要在构造方法中传入robots.txt的链接即可。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urllib.robotparser.RobotFileParser(url=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这个类有如下一些方法：</p><ul><li><code>set_url()</code>方法：设置robots.txt的链接</li><li><code>read()</code>方法：读取robots.txt文件并分析</li><li><code>parse()</code>方法：解析robots.txt文件</li><li><code>can_fetch()</code>方法：该方法传入两个参数，一个是User-agent，一个是要抓取的URL，返回是否可以抓取该网页</li><li><code>mtime()</code>方法：返回上次抓取和分析robots.txt的时间</li><li><code>modified()</code>方法：将当前时间置为上次抓取和分析robots.txt的时间</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
            <tag> python编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫学习笔记(一):爬虫基础</title>
      <link href="/2021/07/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/07/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="1-HTTP的基本原理">1. HTTP的基本原理</h2><h4 id="1-URI和URL">1. URI和URL</h4><ul><li><p>URI（Uniform Resource Identifier）：</p><ul><li>名称：统一资源标志符</li><li>作用：某一规则下能把一个资源独一无二地标识出来</li></ul></li><li><p>URL（Uniform Resource Locator）：</p><ul><li>名称：统一资源定位符</li><li>作用：以定位的方式实现URI</li></ul></li><li><p>URN（Uniform Resource Name）</p><ul><li>名称：统一资源名称</li><li>作用：以命名的方式实现URI，类似于书的ISBN码</li></ul></li><li><p>关系：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsd2tejjbpj30do078jso.jpg" alt="A955E604D1A11821D7D627097537E6FC" style="zoom:50%;" /></li></ul><h4 id="2-超文本（hypertext）">2. 超文本（hypertext）</h4><p>浏览器中的网页就是由超文本解析而成的，其网页源代码就是一系列的HTML代码，里面包含了各种各样的标签，比如<code>img</code>显示图片，<code>p</code>指定段落。</p><h4 id="3-HTTP和HTTPS">3. HTTP和HTTPS</h4><p>URL开头会有协议类型，常见的有HTTP、HTTPS、FTP、SFTP、SMB。在爬虫中我们通常抓取的页面通常为HTTP或HTTPS协议的。</p><ul><li>HTTP协议<ul><li>英文：Hyper Text Transfer Protocol</li><li>中文：超文本传输协议</li><li>作用：用于从网络传输超文本数据到本地浏览器的传送协议，能够保证高效而准确的传输超文本文档</li></ul></li><li>HTTPS协议<ul><li>英文：Hyper Text Transfer Protocol over Secure Socket Layer</li><li>解释：以安全为目标的HTTP通道，即HTTP下加入SSL层，它的所有传输内容都是经过SSL加密的</li><li>作用：<ol><li>建立一个信息安全通道来保证数据传输的安全性</li><li>确认网站的真实性，凡是使用了HTTPS的网站，都可以通过点击浏览器地址栏的锁头标志来查看网站认证之后的真实信息，也可以通过CA机构办法的安全签章来查询</li></ol></li></ul></li></ul><h4 id="4-HTTP请求过程">4. HTTP请求过程</h4><p>打开一个网页的过程：浏览器向网站所在的服务器发送一个请求，网站服务器接收到请求后进行处理和解析，然后返回对应的相应，接着传给浏览器。</p><p>可以通过理解网络请求：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsd3sj9onqj31ih0u01kz.jpg" alt="image-20210711164523529" style="zoom:67%;" /><ul><li>Name：请求的名称，一般会将URL的最后一部分当做资源名称</li><li>Status：响应的状态码，这里显示200，代表正常</li><li>Type：请求文档的类型</li><li>Initiator：请求源。用来标记是由哪个对象或进程发起的。</li><li>Size：资源大小</li><li>Time：从发出请求到响应的时间</li><li>Waterfall：网络请求的可视化瀑布流</li></ul><h4 id="5-请求">5. 请求</h4><p>请求，由客户端向服务端发出，可以分为4部分内容：请求方法（Request Method）、请求的网址（Request URL）、请求头（Request Headers）、请求体（Request Body）。</p><h5 id="1-请求方法：">1.请求方法：</h5><p>常见的请求方法有两种：GET和POST。</p><p>在浏览器中直接输入URL并回车，这便发起了一个GET请求，请求的参数会直接包含在URL里面。POST请求大多在表单提交是发起，其数据通常以表单形式传输，不会体现在URL中。两者具有如下区别：</p><ul><li>GET请求中的参数包含在URL里面，数据可以在URL中看到，而POST请求的URL不会包含这些数据，数据是通过表单形式传输的，会包含在请求体中。</li><li>GET请求提交的数据最多1024字节，而POST没有限制。</li></ul><h5 id="2-请求的网址，即URL">2. 请求的网址，即URL</h5><h5 id="3-请求头">3. 请求头</h5><p>请求头，用来说明服务器要使用的附加信息，比较重要的信息有Cookie、Refer、User-Agent等。</p><ul><li><p>Accept：请求报头域，用于指定客户端可以接受哪些类型的信息</p></li><li><p>Accept-Language：指定客户端可以接受的语言类型</p></li><li><p>Accept-Encoding：指定客户端可以接受的内容编码</p></li><li><p>Host：用于指定请求资源的主机IP和端口号</p></li><li><p>Cookie：网站为了辨别用户进行会话跟踪而存储在用户本地的数据，主要功能是维持会话</p></li><li><p>Refer：用来标识这个请求是从哪个页面发送过来的</p></li><li><p>User-Agent：简称UA，它是一个人特殊的字符串头，可以使服务器识别客户使用的操作系统即版本、浏览器及版本等信息</p></li><li><p>Content-Type：也叫互联网媒体类型，在HTTP协议的消息头中，它用来表示具体请求中的媒体类信息。</p></li></ul><p>请求头是请求的重要组成部分，在写爬虫时，大部分情况下都要设定请求头。</p><h5 id="4-请求体">4. 请求体</h5><p>请求体一般承载的内容是POST请求中的表单数据，对于GET请求则为空。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsd4pboy8qj315s07s0xj.jpg" alt="25A826E11AFF04429CC6AB91721F2E9C" style="zoom:50%;" /><p>在爬虫中，如果要构造POST请求，需要正确的使用Content-Type，并了解各种请求库的各个参数设置时使用的是哪种Content-Type，不然可能会导致POST提交后无法正常响应。</p><h4 id="6-响应">6. 响应</h4><p>响应，由服务端返回客户端，可以分为三个部分：响应状态码（Response Status Code）、响应头（Response Headers）、响应体（Response Body）。</p><h5 id="1-响应状态码">1. 响应状态码</h5><p>代表服务器的响应状态，常见的状态码及原因如下表所示。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsd4zj8ut2j30u010i4qp.jpg" alt="CF69E4DD7E61900BE615B5EAE8F10667" style="zoom: 67%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsd503xudtj31500ag7b5.jpg" style="zoom: 50%;" /><h5 id="2-响应头">2. 响应头</h5><p>包含了服务器对请求的应答信息，下面简要说明一些常用的头信息。</p><ul><li>Date：标识响应产生的时间</li><li>Last-Modified：指定资源最后修改的时间</li><li>Content-Encoding：指定响应内容的编码</li><li>Sever：包含服务器的信息，比如名称、版本号等</li><li>Content-Type：文档类型</li><li>Set-Cookies：设置Cookies</li><li>Expires：指定响应的过期时间</li></ul><h5 id="3-响应体">3. 响应体</h5><p>响应的正文数据都在响应体中。在做Python爬虫时，我们主要通过响应体得到网页源代码、JSON数据等，然后从中做相应内容的提取。</p><h2 id="2-网页基础">2. 网页基础</h2><h4 id="1-网页的组成">1. 网页的组成</h4><p>网页可以分为三大组成部分：HTML、CSS和JavaScript。如果把网页比作一个人的话，HTML相当于骨架，JavaScript相当于肌肉，CSS相当于皮肤，三者结合起来才形成了一个完善的网页。</p><h5 id="1-HTML">1. HTML</h5><p>HTML是一种用来描述网页的语言，其全称为Hyper Text Markup Language，即超文本标记语言。网页包含文字、按钮、图片和视频等各种复杂的元素，其基础架构就是HTML。</p><h5 id="2-CSS">2. CSS</h5><p>CSS，全称Cascading Style Sheets，即层叠样式表。“层叠”是值指当在HTML中引用了数个样式文件，并且样式发生冲突时，浏览器能够依据层叠顺序处理。“样式”指网页中的字体、颜色、元素间距、排列等格式。</p><p>CSS是目前唯一的网页页面排版样式标准，有了它的帮助，页面才会变得更为美观。</p><h5 id="3-JavaScript">3. JavaScript</h5><p>JavaScript，简称JS，是一种脚本语言。它的出现使得用户与信息之间不只是一种浏览与显示的关系，而实现了一种实时、动态、交互的页面功能。</p><h4 id="2-网页的结构">2. 网页的结构</h4><p>下面这段代码是HTML的基本结构</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF_8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>This is a Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">clss</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">          Hello World!</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">          This is a paragraph!</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示如下：</p><img src="/Users/linjiemu/Library/Application Support/typora-user-images/image-20210711175929151.png" alt="image-20210711175929151" style="zoom:50%;" /><h4 id="3-节点树及节点间的关系">3. 节点树及节点间的关系</h4><p>在HTML中，所有标签定义的内容都是节点，它们构成了一个HTML DOM树。DOM的英文名称是Document Objective Model，即文档对象模型。HTML DOM将HTML文档视作树结构，这种结构被称为节点树。</p><h4 id="4-选择器">4. 选择器</h4><p>在CSS中，我们使用CSS选择器来定位节点。以&quot;#“开头代表选择id，以”.&quot;开头代表选择class，还有一种方式，那就是根据标签名筛选。此外，CSS选择器还只是嵌套选择，各个选择器之间加上空格分隔开便可以代表嵌套关系，如果不加则表示并列关系。CSS还有一些其他的语法规则，如下：</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsfmqbevplj315c08q0xv.jpg" alt="B091AB54AAAFD7F41536BF6F9D37C240" style="zoom:49%;" /><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsfmqp67f5j30u011s7wh.jpg" alt="C11C337A6CEEF57F6DAC63677B940758" style="zoom:67%;" /><h2 id="3-爬虫基本原理">3. 爬虫基本原理</h2><h4 id="1-爬虫概述">1. 爬虫概述</h4><ol><li>爬取网页</li><li>提取信息</li><li>保存数据</li><li>自动化程序</li></ol><h4 id="2-抓取怎样的数据">2. 抓取怎样的数据</h4><ol><li>HTML源代码</li><li>JSON字符串</li><li>各种二进制文件，如：图片、视频和音频</li><li>各种扩展的文件，如CSS、JavaScript和配置文件等</li></ol><h4 id="3-JavaScript渲染页面">3. JavaScript渲染页面</h4><p>经过JavaScript渲染的页面我们爬取到的信息可能和原网页信息不一样，因此需要专门学习。</p><h2 id="4-会话和Cookies">4. 会话和Cookies</h2><h4 id="1-静态网页和动态网页">1. 静态网页和动态网页</h4><ul><li>静态网页：<ul><li>内容：由HTML代码编写的，文字、图片等内容均通过写好的HTML代码指定</li><li>优点：编写简单、加载速度快</li><li>缺点：可维护性差、不能根据URL灵活多变地显示内容等</li></ul></li><li>动态网页：<ul><li>动态解析URL中参数的变化，关联数据库并动态呈现不同的页面内容</li><li>实现用户登录和注册功能</li></ul></li></ul><h4 id="2-无状态HTTP">2. 无状态HTTP</h4><p>HTTP的无状态是指HTTP协议对事务处理没有记忆能力的，也就是说服务器不知道客户端是什么状态。因此诞生了两个用于保持服务器和客户端连接状态的技术：会话和Cookies。会话在服务端，用于保存用户的会话信息；Cookies在客户端，浏览器会在下次访问网页时自动附上它要发送给服务器的内容。</p><h5 id="1-会话">1. 会话</h5><p>会话对象用来存储特定用户会话所需的属性及配置信息。当用户在应用程序的Web页面间跳转时，储存在会话对象中的变量将不会消失，而是在整个会话中一直存放下去。当用户请求来自应用程序的Web页面是，如果该用户还没有终止会话，则Web服务器将自动创建一个会话对象。当会话过期或被放弃后，服务器终止该会话。</p><h5 id="2-Cookies">2. Cookies</h5><p>Cookies指某些网站为了辨别用户身份、进行会话跟踪而存储在用户本地终端上的数据。</p><ul><li>会话维持：Cookies和会话的配合</li><li>属性结构</li><li>会话Cookies和持久Cookies：会话Cookies就是把Cookies放在浏览器中；持久Cookies则会保存在客户端的硬盘中，用于长期保持状态。</li></ul><h4 id="3-常见误区">3. 常见误区</h4><p>不会因为浏览器的关闭而导致会话结束。对于会话Cookies而言，关闭浏览器，会使Cookies被删除，下次访问就无法找到原有对话。而到了指定的会话过期时间后，会话会被自动终结。</p><h2 id="5-代理的基本原理">5. 代理的基本原理</h2><h4 id="1-基本原理">1. 基本原理</h4><p>代理实际上就是指代理服务器，英文叫作proxy server，他的恶功能是代理网络用户去取得网络信息。</p><h4 id="2-代理的作用">2. 代理的作用</h4><ul><li>突破自身IP限制，访问一些平时不能访问的站点</li><li>访问一些单位或团体的内部资源：如教育网</li><li>提高访问速度</li><li>隐藏真实IP</li></ul><h4 id="3-爬虫代理">3. 爬虫代理</h4><p>隐藏真实IP，让服务器误认为是代理服务器在访问自己。在爬取过程中不断更换代理，就不会被锁IP，提高爬取效果。</p><h4 id="4-代理的分类">4. 代理的分类</h4><ol><li>根据协调区分：<ol><li>FTP代理服务器：访问FTP服务器</li><li>HTTP代理服务器：访问网页资源</li><li>SSL/TLS代理：访问加密网站</li><li>RTSP代理：访问Real流媒体服务器</li><li>Telnet代理：用于Telnet远程控制（黑客入侵计算机常用于隐藏身份）</li><li>POP3/SMTP代理：用于POP3/SMTP方式发送邮件</li><li>SOCKS代理：单纯的传递数据包</li></ol></li><li>根据匿名度区分：<ol><li>高匿名度代理：将数据包原封不动的转发，服务器看来好像真得是一个普通客户端在访问</li><li>普通匿名代理：会对数据包进行一定改动，服务端上可能会发现这是一个代理服务器</li><li>透明代理：不但改动了数据包，还告诉服务器客户端的真实IP</li><li>间谍代理：指组织或个人创建的用于记录用户传输的数据，然后进行研究、监控等目的的代理服务器</li></ol></li></ol><h4 id="5-常见代理设置">5. 常见代理设置</h4><ol><li>使用网上的免费代理：最好使用高匿代理，可用的代理不多</li><li>使用付费代理：质量好很多</li><li>ADSL拨号：拨一次号换一次IP，稳定性高</li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络爬虫 </tag>
            
            <tag> python编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年7月9日 周五 晴转多云</title>
      <link href="/2021/07/09/%E6%97%A5%E8%AE%B0/2021%E5%B9%B47%E6%9C%889%E6%97%A5/"/>
      <url>/2021/07/09/%E6%97%A5%E8%AE%B0/2021%E5%B9%B47%E6%9C%889%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>​网站基本搭建完了，短期内也不会做什么大改了。其实还对一些地方不太满意，但因为能力有限，不会修改。说真的，感觉路还很遥远，还有很多东西不会，还需要努力，需要花时间去积淀。虽然一直想着追求更高更好的自己，但能力也只能让自己止步于此。</p><p>​最近心情一直不太舒畅，在相当长一段时间内，因为一些破事儿影响了自己的心情，影响了自己的生活，甚至影响到了自己的前途。我对自己的定位一向不是特别低，但这些事情的发生以及后面产生的许多连锁反应，让我怀疑曾经是不是有些过高估计自己。在知识的修途中我只是一名资质一般的修士，没有过高的才华和天赋，所获得的一切也不过是努力的成果。如果被破事儿影响了修途，无法全身心的投入精力去前进，那么我也只会成为大千世界中的一缕浮尘。所幸，我还没有丢失那颗不屈平庸的心；所幸，我还年轻，还有机会去调整，还有大把时间去努力向上；所幸，我身边还有一群能陪着我一起进步的人。</p><p>​我也明白了一些道理，一个人的强大是内心的强大，是物质和精神的独立，是会爱和珍惜自己，是不过于依赖任何外物，是对自己人生和未来的负责。我不需要那些没有意义的插曲，只要安安静静的活，为我热爱的东西。我求知似渴，想在知识的海洋理捞到更多的珠宝，没有功利，也不是为了取得什么成果，只是因为内心的热爱，因为我的兴趣。</p><p>​现在的我，很好，很开心。加油！</p><div class="justified-gallery"><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsb68gjnpqj30u00u07iw.jpg" alt="IMG_1437(20210710-003722)"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsb6fuscrfj30u00u0tob.jpg" alt="IMG_1438(20210710-003728)"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gsb68r1irij60u00u04lz02.jpg" alt="IMG_1438(20210710-003728)"></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 杂想 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(八):JAVA小程序</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Applet概述">1.Applet概述</h2><ul><li><p>Java程序有两种基本的呈现形式：</p><ul><li><code>Java Application</code>(应用程序)，可独立运行</li><li><code>Java Applet</code>(小程序)，嵌入在浏览器中运行</li></ul></li><li><p>一个Applet小程序的例子</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.applet.Applet;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exam</span> <span class="keyword">extends</span> <span class="title">Applet</span> </span>&#123;<span class="comment">//继承自Applet类</span></span><br><span class="line">String str;</span><br><span class="line">    <span class="comment">//重写init()方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">str = “Here is an Applet”;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//重写paint()方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">g.drawString(str, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>HTML文件：</p><ul><li><p>超文本标记语言(HTML)</p><ul><li>在WWW浏览器打开</li></ul></li><li><p>Applet小程序</p><ul><li>嵌入在/写入在HTML文件中</li><li>从WWW服务器下载到本地WWW浏览器</li><li>由WWW浏览器中的Java解释器来运行</li></ul></li></ul></li><li><p>实现过程：</p><ul><li><p>第一步：Applet小程序编写，编译，得到字节码文件（.class文件）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javac Exam.java</span><br></pre></td></tr></table></figure></li><li><p>第二步：–嵌入到HTML文件中，保存为Exam.html</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Applet</span> <span class="attr">code</span>=<span class="string">“Exam4_1.class”</span> <span class="attr">width</span>=<span class="string">300</span> <span class="attr">height</span>=<span class="string">200</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--嵌在Body里面--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Applet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>声明格式：通常作为Applet类的子类</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名 <span class="keyword">extends</span> <span class="title">Applet</span> </span>&#123;</span><br><span class="line">类体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行方式：嵌入在HTML文件中，利用WWW浏览器或Appletviewer来运行</li><li>利用了WWW浏览器或Appletviewer所提供的图形用户界面功能</li></ul></li><li><p>Applet小程序的工作流程：</p><blockquote><p>Applet源程序 --&gt; 字节码文件 --&gt; 嵌入到HTML中 --&gt; WWW浏览器打开该HTML文件</p></blockquote></li></ul><h2 id="2-Applet类">2.Applet类</h2><ul><li>继承关系：</li></ul><blockquote><p>java.lang.Object &lt;-- java.awt.Component &lt;-- java.awt.Container</p><p>&lt;-- java.awt.Panel &lt;--  java.applet.Applet</p></blockquote><p>注意：默认情况下，Applet类使用FlowLayout布局管理器</p><ul><li>主要方法：</li></ul><table><thead><tr><th style="text-align:center">方法名</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center"><code>init()</code></td><td style="text-align:center">1. 完成初始化操作；2. 在Applet程序第一次加载时调用，仅执行一次</td></tr><tr><td style="text-align:center"><code>start()</code></td><td style="text-align:center">1. 启动Applet主线程运行；2. 重启时也被调用(reload或返回)</td></tr><tr><td style="text-align:center"><code>paint(Graphics g)</code></td><td style="text-align:center">1. 将结果输出/绘制到界面上；2. 被自动调用(启动后/窗口改变/repaint()调用)</td></tr><tr><td style="text-align:center"><code>stop()</code></td><td style="text-align:center">1. 暂停Applet程序执行</td></tr><tr><td style="text-align:center"><code>destroy()</code></td><td style="text-align:center">1. 终止Applet程序执行，释放所占用的资源</td></tr></tbody></table><ul><li>代码模板：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.applet.Applet;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exam</span> <span class="keyword">extends</span> <span class="title">Applet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">( )</span> </span>&#123;<span class="comment">//初始化Applet程序</span></span><br><span class="line"><span class="comment">//………</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">( )</span> </span>&#123;<span class="comment">//启动Applet线程</span></span><br><span class="line"><span class="comment">//………</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;<span class="comment">//绘制输出显示信息</span></span><br><span class="line"><span class="comment">//………</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">( )</span> </span>&#123;<span class="comment">//暂停线程</span></span><br><span class="line"><span class="comment">//………</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">( )</span> </span>&#123;                   <span class="comment">//释放系统资源，结束线程</span></span><br><span class="line"><span class="comment">//………</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Applet的生命周期及控制</p><ol><li>第一次装入，构造applet类，调用<code>init()</code>方法 --&gt; <strong>初始态（瞬态）</strong></li><li>调用<code>start()</code>方法 --&gt; <strong>运行态</strong></li><li>离开web页面：极小化或装入其他页面，调用<code>stop()</code>方法 --&gt; <strong>停止态</strong></li><li>关闭浏览器，调用<code>destroy()</code>方法 --&gt; <strong>消亡态</strong></li></ol><ul><li>其中：<strong>停止态</strong>可通过调用<code>start()</code>方法进入<strong>运行态</strong></li></ul></li></ul><h2 id="3-Applet程序与HTML文件">3.Applet程序与HTML文件</h2><ul><li><p>超文本标记语言(HTML)</p><ul><li><p>Html文件开始和结束的标记：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Html</span>&gt;</span>和<span class="tag">&lt;/<span class="name">Html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>WWW浏览器窗口标题内容的标记</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Head</span>&gt;</span>和<span class="tag">&lt;/<span class="name">Head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Html文件在浏览器窗口中显示内容的标记</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Body</span>&gt;</span>和<span class="tag">&lt;/<span class="name">Body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>嵌入到Html文件中Applet程序的标记</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Applet</span>&gt;</span>和<span class="tag">&lt;/<span class="name">Applet</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Applet程序的标记</p></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt; APPLET</span><br><span class="line">    [ARCHIVE  = archiveList ]</span><br><span class="line">    [CODEBASE = codebaseURL]</span><br><span class="line">    CODE = appletFile</span><br><span class="line">    [ALT = alternateText]</span><br><span class="line">    [NAME = appletInstanceName]</span><br><span class="line">    WIDTH = pixels HEIGHT = pixels</span><br><span class="line">    [ALIGN = alignment]</span><br><span class="line">    [VSPACE = pixels] [HSPACE = pixels]&gt;</span><br><span class="line">        </span><br><span class="line">    [&lt; PARAM NAME = appletParameter1 VALUE = value &gt;]</span><br><span class="line">    [&lt; PARAM NAME = appletParameter2 VALUE = value &gt;]</span><br><span class="line">    . . .</span><br><span class="line">    [alternateHTML]</span><br><span class="line"><span class="tag">&lt;/<span class="name">APPLET</span>&gt;</span>   </span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">ARCHIVE = archiveList   [File1, File2, …]</span></span><br><span class="line"><span class="comment">给出了Applet类及其运行时所需的类所在的卷文件名。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">CODEBASE = codebaseURL </span></span><br><span class="line"><span class="comment">指明Applet类文件所在URL基址，在Applet类中，方法getCodeBase()可以获取该属性。如果这个属性没有指明，那么Applet类文件必须与包含它的HTML页面在同一个地方，方法getCodeBase()返回的值与getDocumentBase()相同。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">CODE = appletFile </span></span><br><span class="line"><span class="comment">指明需要运行的Applet类文件（.class文件），该文件是与codebaseURL相关的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ALT = alternateText </span></span><br><span class="line"><span class="comment">如果浏览器支持Applet但不能运行它，就显示alternateText中所给出的文字。否则就忽略它。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">NAME = appletInstanceName </span></span><br><span class="line"><span class="comment">给出了Applet类运行时的实例名，这使得同处于一个页面的不同Applet之间能够相互通信。方法getAppletContext()可以得到同一个方页面中其它Applet类。 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">WIDTH = pixels   HEIGHT = pixels </span></span><br><span class="line"><span class="comment">Applet在浏览器中所显示的高度和宽度（以象素为单位）。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">ALIGN = alignment </span></span><br><span class="line"><span class="comment">Applet在浏览器中显示时的对齐方式，其含义与效果与图片在HTML中的一样。其取值有： left, right, top, texttop, middle, absmiddle, baseline, bottom, absbottom。 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">VSPACE = pixels   HSPACE = pixels </span></span><br><span class="line"><span class="comment">Applet在浏览器中显示时上下、左右要预留的高度和宽度，其含义与效果与图片在HTML中的一样。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt; PARAM NAME = appletParameter1 VALUE = value &gt; </span></span><br><span class="line"><span class="comment">&lt;PARAM&gt;属性可以使得Applet能够从页面中获取所需的参数。</span></span><br><span class="line"><span class="comment">Applet可以用其方法getParameter()获取&lt;PARAM&gt;属性指定的参数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;PARAM&gt;属性的作用与应用程序中main()方法里参数String args[]的作用是一样的。</span></span><br><span class="line"><span class="comment">一个好的小应用程序，应该提供用户能够设置外部参数的功能，以使得用户能够根据自己的需要来应用它。方法getParameterInfo()可以得到有关&lt;PARAM&gt;属性的说明信息。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">alternateHTML</span></span><br><span class="line"><span class="comment">如果浏览器不支持Applet，就解释alternateHTML所给出的HTML代码。否则就忽略它。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.applet.Applet;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exam4_3</span> <span class="keyword">extends</span> <span class="title">Applet</span> </span>&#123;</span><br><span class="line">String str;</span><br><span class="line"><span class="keyword">int</span> x, y, h;</span><br><span class="line">Font fnt;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">str = getParameter(<span class="string">&quot;string&quot;</span>);</span><br><span class="line">h   = Integer.parseInt(getParameter(<span class="string">&quot;size&quot;</span>));</span><br><span class="line">x   = Integer.parseInt(getParameter(<span class="string">&quot;x1&quot;</span>));</span><br><span class="line">y   = Integer.parseInt(getParameter(<span class="string">&quot;y1&quot;</span>));</span><br><span class="line">fnt = <span class="keyword">new</span> Font(<span class="string">&quot;TimesRoman&quot;</span>, Font.BOLD, h);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">g.setColor(Color.red);</span><br><span class="line">g.setFont(fnt);</span><br><span class="line">g.drawString(str, x, y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Applet与Application的区别：</p><p>一个Java类文件可以既是一个Java Applet，又是一个Java Application，只不过在编写时稍微复杂一些而已，但它却既可以在浏览器中运行，又可以作为Application单独运行。</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.applet.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppletApp</span> <span class="keyword">extends</span> <span class="title">Applet</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String s;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123; s = <span class="keyword">new</span> String(<span class="string">&quot;Hello World!&quot;</span>);  &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;    g.drawString(s,<span class="number">25</span>,<span class="number">25</span>);  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String args[] )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Frame f = <span class="keyword">new</span> Frame(<span class="string">&quot;Applet-App&quot;</span>);</span><br><span class="line">    AppletApp app = <span class="keyword">new</span> AppletApp();</span><br><span class="line">    f.add(app, <span class="string">&quot;Center&quot;</span>);</span><br><span class="line">    f.setSize(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">    f.setVisible(<span class="keyword">true</span>);</span><br><span class="line">    f.addWindowListener( <span class="keyword">new</span> WindowAdapter()&#123;</span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span></span>&#123;</span><br><span class="line">                   System.exit(<span class="number">0</span>);</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    app.init(); </span><br><span class="line">    app.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Java Applet浏览器：</li></ul><p><strong>Java Applet浏览器</strong>是指可以运行包含Applet的HTML文件的一切软件系统。HotJava、Netscape Navigator以及Microsoft Internet Explorer等支持Java的网络浏览器都是Applet浏览器，Java Applet都可以在其中运行。</p><p><strong>AppletViewer</strong>是一个Java应用程序，是从java.awt.Frame中继承而来。它可以使得用户无须使用网络浏览器而直接运行Java Applet。但AppletViewer仅仅是一个Applet浏览器，HTML文件中的其他内容将不会被显示出来。使用方法：<code>AppletViewer &lt;HTML file or URL&gt;</code></p><ul><li><p>Applet图形操作：</p><p>Applet本身是一个AWT组件，因此它也具有一般AWT组件的图形绘制功能。Applet中有三个显示相关的方法：<code>paint()</code>、<code>update()</code>和<code>repaint()</code>。Applet的显示更新是由一个AWT线程来控制完成的，它主要负责两种显示更新情况：</p><ul><li>第一是暴光，表示部分显示区域被遮盖、调整大小、最大最小化等，这种情况随时会发生，需要系统调用<code>paint()</code>方法；</li><li>第二是程序需要重画显示区域，添加一些新的显示内容，需要程序调用repaint()方法。</li></ul></li><li><p>图形操作方法：</p><ul><li><p><code>paint(Graphics g)</code>方法：   Applet本身是一个容器，因此任何输出都必须用图形方法<code>paint()</code>。当小应用首次被装载，以及每次窗口放大、缩小、刷新时都要调用<code>paint()</code>方法。<code>paint()</code>是由AWT线程调用的，而不是由程序调用，当程序希望调用<code>paint()</code>方法时，用<code>repaint()</code>方法。<code>paint()</code>方法的参数是<code>Graphics</code>类的对象 g，该对象不是由new产生的，而是由系统或其他方式直接将生好的<code>Graphics</code>对象当作方法的参数，再交给<code>paint()</code>方法。<code>paint()</code>方法必须<strong>被重写</strong>以绘制自己所需的内容。</p></li><li><p><code>update()</code>方法：</p><p><code>update()</code>方法用于更新图形。它首先清除背景，然后设置前景，再调用<code>paint()</code>方法完成Applet中的具体绘图。一般<strong>不重写</strong><code>update()</code>方法。</p></li><li><p><code>repaint()</code>方法：</p><p><code>repaint()</code>方法主要用于重绘图形，它是通过调用<code>update()</code>方法来实现图形重绘的。当组件外形发生变化时，系统自动调用<code>repaint()</code>方法。AWT线程要处理组件的绘图工作，并负责其输入事件，因此必须尽量缩短<code>paint()</code>方法和<code>update()</code>方法的长度，特别是在<code>paint()</code>方法中，不要执行太消耗时间的操作。</p></li></ul></li></ul><h2 id="4-Applet的应用">4.Applet的应用</h2><ol><li><p>绘制图形</p><ol><li><p>设置字体</p><ul><li><code>java.awt.Font</code>类</li></ul></li></ol><ul><li>设置文本的字体(包括字型和字号)<ul><li>构造方法：<code>public Font(String name, int style int size)</code></li></ul></li></ul><ol start="2"><li><p>设置颜色</p><ul><li><code>java.awt.Color</code>类</li><li>控制颜色，Color类已包含13个颜色常量</li><li>构造方法：<ul><li><code>public Color(int r, int g, int b)</code></li><li><code>public Color(float r1, float g1, float b1)</code></li></ul></li></ul></li><li><p>绘制文本</p><ol><li>绘制字符串<code>public void drawString(String s, int x, int y)</code></li><li>绘制字符<code>public void drawString(char c[], int offset, int number int x, int y)</code></li><li>绘制字节<code>public void drawString(byte b[],int offset,int number int x,int y)</code></li></ol></li><li><p>绘制几何图形</p><ol><li>画直线<code>void drawLine(int x1, int y1, int x2, int y2)</code></li><li>画矩形</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawRect</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillRect</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clearRect</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawRoundRect</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">int</span> arcWidth, <span class="keyword">int</span> arcHeight)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw3DRect</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">boolean</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fill3DRect</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">boolean</span> b)</span></span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>画圆弧和椭圆</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawArc</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">int</span> startAngle, <span class="keyword">int</span> arcAngle)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillArc</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">int</span> startAngle, <span class="keyword">int</span> arcAngle)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawOval</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillOval</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>画多边形</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawPolygon</span><span class="params">(<span class="keyword">int</span> xPoints[], <span class="keyword">int</span> yPoints[], <span class="keyword">int</span> Points)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fillPolygon</span><span class="params">(<span class="keyword">int</span> xPoints[], <span class="keyword">int</span> yPoints[], <span class="keyword">int</span> Points)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawPolygon</span><span class="params">(Polygon p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fillPolygon</span><span class="params">(Polygon p)</span></span>;</span><br><span class="line"><span class="comment">//Polygon类构造方法</span></span><br><span class="line">Polygon();</span><br><span class="line">Polygon(<span class="keyword">int</span> xPoints[], <span class="keyword">int</span> yPoints[], <span class="keyword">int</span> numberOfPoints);</span><br></pre></td></tr></table></figure></li><li><p>演示图像</p><ol><li><p>定义图像对象</p><ol><li><code>java.awt.Image</code>类</li><li>图像高度和宽度：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getHeight</span><span class="params">(ImageObserver observer)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getWidth</span><span class="params">(ImageObserver observer)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>获取图像信息方法：<code>Image getImage(URL url, String name);</code></p></li><li><p>显示图像的操作：</p></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">drawImage(Image img, <span class="keyword">int</span> x, <span class="keyword">int</span> y, ImageObserver observer);</span><br><span class="line">drawImage(Image img, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> width, <span class="keyword">int</span> height, ImageObserver observer);</span><br></pre></td></tr></table></figure><ol start="4"><li>动画：<ul><li>创建Image类的对象数组</li><li><code>drawImage()</code></li><li><code>Thread.sleep()</code>方法</li><li><code>repaint()</code></li></ul></li><li>播放声音<ul><li><code>public void play(URL url)</code></li><li><code>public AudioClip getAudio(URL url)</code></li><li><code>play()</code>方法/<code>loop()</code>方法/<code>stop()</code>方法</li></ul></li></ol></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java编程语言 </tag>
            
            <tag> Applet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(七):JAVA网络编程技术</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概述">1.概述</h2><ul><li><p>网络基础-TCP/IP协议簇</p><ul><li>网络层(Network Layer)<ul><li>Internet Protocol (IP)</li><li>IP地址, 32比特</li></ul></li><li>传输层(Transport Layer)<ul><li>传输控制协议(TCP: Transport Control Protocol)</li><li>用户数据报协议(UDP: User Datagram Protocol)</li><li>端口(Port, 16比特, 0~65535)</li></ul></li><li>应用层(Application Layer)<ul><li>HTTP, FTP, SMTP, POP3, Telnet, DNS</li></ul></li></ul></li><li><p>Java语言中基本网络类</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Package java.net</span><br><span class="line"><span class="keyword">import</span> java.net.URL</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection</span><br><span class="line"><span class="keyword">import</span> java.net.Socket</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket</span><br><span class="line"><span class="keyword">import</span> java.net.MulticastSocket</span><br></pre></td></tr></table></figure><h2 id="2-URL应用">2.URL应用</h2><ul><li><p>URL：统一资源定位符(Uniform Resource Locator)</p></li><li><p><code>java.net.URL</code>类：</p><ul><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">URL</span><span class="params">(String spec)</span> <span class="keyword">throws</span> MalformedURLException</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">URL</span><span class="params">(String protocol, String host, String file)</span> <span class="keyword">throws</span> MalformedURLException</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">URL</span><span class="params">(String protocol, String host, <span class="keyword">int</span> port, String file)</span> <span class="keyword">throws</span> MalformedURLException</span>;</span><br></pre></td></tr></table></figure><ul><li>实例方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> InputStream <span class="title">openStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"><span class="comment">//Opens a connection to this URL and returns an InputStream for reading from that connection</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> URLConnection <span class="title">openConnection</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function"><span class="comment">//Returns a URLConnection object that represents a connection to the remote object referred to by the URL </span></span></span><br></pre></td></tr></table></figure><ul><li>代码片段示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">URLReader</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">URL pku = <span class="keyword">new</span> URL(<span class="string">&quot;http://www.pku.cn&quot;</span>);</span><br><span class="line">BufferedReader in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(</span><br><span class="line">                                  pku.openStream()));</span><br><span class="line">String inputLine;</span><br><span class="line"><span class="keyword">while</span> ((inputLine = in.readLine()) != <span class="keyword">null</span>)</span><br><span class="line">    System.out.println(inputLine);</span><br><span class="line">in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StringBuffer document = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        String urlString = <span class="string">&quot;https://www.baidu.com&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL url = <span class="keyword">new</span> URL(urlString);</span><br><span class="line">            URLConnection conn = url.openConnection();</span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getInputStream()));</span><br><span class="line">            String line = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span>((line = reader.readLine()) != <span class="keyword">null</span>)</span><br><span class="line">                document.append(line + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            reader.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span>(MalformedURLException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Unable to connection to URL:&quot;</span> + urlString);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;IOException when connected to URL:&quot;</span>+ urlString);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(document.toString());</span><br></pre></td></tr></table></figure><ul><li>操作流程<ol><li>用所要连接资源的有效 URL<strong>实例化一个 URL对象</strong>（如有问题则抛出 MalformedURLException）</li><li>打开该 URL对象上的一个连接</li><li>把该连接的<code>InputStream</code>包装进<code>BufferedReader</code>以便能按行读取</li><li>用<code>BufferedReader</code>读文档</li><li>关闭<code>BufferedReader</code>(关闭该URL)</li></ol></li></ul></li></ul><h2 id="3-Socket应用">3.Socket应用</h2><ul><li><p>TCP协议</p><ul><li>从功能上来讲，建立一个可靠的、端到端的通信连接</li><li>操作系统实现了TCP协议的内容</li></ul></li><li><p>Socket(套接字)</p><ul><li>代表了TCP所定义的双向通信连接的一个端点</li><li>–通信双方(两台机器)：一个作为客户端，一个作为服务器端</li></ul></li><li><p>客户/服务器的本质区别</p><ul><li>服务器方(Server)总在监听一个特定的端口</li><li>客户(Client)则向该端口发出连接请求</li></ul></li><li><p><code>java.net.Socket</code>类</p><ul><li>表示TCP连接的客户方(Client)，和谁连接：<ul><li>指定对方的IP地址和端口号</li><li><code>public Socket(String host, int port) throws UnknownHostException, IOException</code></li></ul></li><li>Socket对象包括两个流<ul><li>Socket代表了TCP所定义的双向通信连接的一个端点</li><li>输入流(读取通过网络进来的数据)：<code>public InputStream getInputStream() throws IOException</code></li><li>输出流(将数据写入输出流中，并通过网络发送)：<code>public OutputStream getOutputStream() throws IOException</code></li></ul></li><li>操作步骤<ol><li>先建立连接</li><li>进行流的读写操作</li></ol></li><li>对客户端对Socket进行读写-实例</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleClient</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">Socket s = <span class="keyword">new</span> Socket(<span class="string">&quot;jalpha.pku.edu.cn&quot;</span>, <span class="number">5432</span>);</span><br><span class="line">InputStream in = s.getInputStream();</span><br><span class="line">DataInputStream dis = <span class="keyword">new</span> DataInputStream(in);</span><br><span class="line">String st = dis.readUTF();</span><br><span class="line">System.out.println(st);</span><br><span class="line">in.close();</span><br><span class="line">s.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>java.net.ServerSocket</code>类</p><ul><li>TCP连接的服务器方(Server)，监听端口：<ul><li>等待自客户端发来的连接</li><li><code>public ServerSocket(int port) throws IOException</code></li></ul></li><li>接收连接请求<ul><li><code>public Socket accept() throws IOException</code>Listens for a connection to be made to this socket and accepts it. The method blocks(阻塞) until a connection is made</li><li>服务器端通过所接收到的Socket对象和客户端通信。Socket代表了TCP所定义的双向通信连接的一个端点</li></ul></li><li>操作步骤<ol><li>监听端口</li><li>接收连接</li><li>进行流的读写操作</li></ol></li><li>代码实例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ServerSocket s = <span class="keyword">null</span>;</span><br><span class="line">String hello = “Hello World!”;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">s = <span class="keyword">new</span> ServerSocket(<span class="number">5432</span>);<span class="comment">//创建一个监听端口</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">System.out.println(e);</span><br><span class="line">System.exit(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Socket cs = s.accept();<span class="comment">//接收来自用户的连接请求</span></span><br><span class="line">OutputStream out  = cs.getOutputStream();<span class="comment">//打开服务端输出流</span></span><br><span class="line">DataOutputStream dos = <span class="keyword">new</span> DataOutputStream(out);<span class="comment">//写入服务端输出流</span></span><br><span class="line">dos.writeUTF(hello);<span class="comment">//写入输出流</span></span><br><span class="line">out.close();<span class="comment">//关闭输出流</span></span><br><span class="line">cs.close();<span class="comment">//关闭连接</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(IOException e) &#123; System.out.println(e); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>多线程的服务器实现</p><ul><li>为每个客户的连接(Socket)分配一个线程，让其独立处理</li><li>两种实现方式<ol><li>作为<code>java.lang.Thread</code>类的子类</li><li>实现<code>java.lang.Runnable</code>接口</li></ol></li><li>代码片段</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myMain</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket s = <span class="keyword">new</span> ServerSocket(<span class="number">5432</span>);</span><br><span class="line">        <span class="keyword">boolean</span> listening = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (listening)</span><br><span class="line">            <span class="keyword">new</span> ServerThread(s.accept()).start();</span><br><span class="line">        s.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ServerThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="4-UDP数据报">4.UDP数据报</h2><ul><li><p>数据报(Datagram)</p><ul><li>通过UDP协议发送数据报, 各个数据报是相互独立, 数据报是否到达(可能丢失)、到达时间、到达顺序不能保证</li><li><code>java.net.DatagramPacket</code>：构造一个要发送/接收的数据报对象</li><li><code>java.net.DatagramSocket</code>：构造一个用于发送/接收数据报的socket对象</li><li><code>java.net.MulticastSocket</code>：构造一个用于发送/接收组播数据报的socket对象</li></ul></li><li><p>数据报(Datagram) 的收/发流程：</p><ul><li><p>发送</p><ol><li>构造用于发送的数据报对象(指定要发送的地址和端口号)：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DatagramPacket</span><span class="params">(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> length, InetAddress address, <span class="keyword">int</span> port)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>构造用于发送数据报的socket对象</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DatagramSocket</span><span class="params">()</span> <span class="keyword">throws</span> SocketException</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>发送</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(DatagramPacket p)</span> <span class="keyword">throws</span> IOException</span>;</span><br></pre></td></tr></table></figure></li><li><p>接收</p><ol><li>构造用于接收的数据报对象</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DatagramPacket</span><span class="params">(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> length)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>构造用于接收数据报的socket对象</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DatagramSocket</span><span class="params">(<span class="keyword">int</span> port)</span> <span class="keyword">throws</span> SocketException</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>接收</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">(DatagramPacket p)</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line"><span class="comment">//This method blocks until a datagram is received</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>实现：</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数据报客户端的实现</span></span><br><span class="line"><span class="comment">//构造数据报Socket</span></span><br><span class="line">DatagramSocket socket = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line">String s = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span>[] buf = s.getBytes();</span><br><span class="line"><span class="comment">//要发送的地址</span></span><br><span class="line">InetAddress address = InetAddress.getByName(<span class="string">&quot;jalpha.pku.edu.cn&quot;</span>);</span><br><span class="line"><span class="comment">//构造发送数据报, 发送</span></span><br><span class="line">DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(buf, buf.length, address, <span class="number">6666</span>);</span><br><span class="line">socket.send(packet);</span><br><span class="line"><span class="comment">//构造接收数据报</span></span><br><span class="line">packet = <span class="keyword">new</span> DatagramPacket(buf, buf.length);</span><br><span class="line"><span class="comment">//接收数据报</span></span><br><span class="line">socket.receive(packet);</span><br><span class="line"><span class="comment">//从数据报中获取数据</span></span><br><span class="line">String received = <span class="keyword">new</span> String(packet.getData());</span><br><span class="line">System.out.println(<span class="string">&quot;Received: &quot;</span> + received);</span><br><span class="line">socket.close();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数据报服务端的实现</span></span><br><span class="line">DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">6666</span>);</span><br><span class="line"><span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">256</span>];</span><br><span class="line">DatagramPacket packet = <span class="keyword">new</span> DatagramPacket(buf, buf.length);</span><br><span class="line">socket.receive(packet);</span><br><span class="line">String received = <span class="keyword">new</span> String(packet.getData()).trim();</span><br><span class="line">InetAddress address = packet.getAddress();</span><br><span class="line"><span class="keyword">int</span> port = packet.getPort();</span><br><span class="line">packet = <span class="keyword">new</span> DatagramPacket(buf, buf.length, address, port);</span><br><span class="line">socket.send(packet);</span><br><span class="line">socket.close();</span><br></pre></td></tr></table></figure><ul><li><p>UDP组播</p><ul><li>组播数据报(<code>Multicast Datagram</code>)</li><li>特定的IP地址(组播地址)<ul><li>224.0.0.0 ~ 239.255.255.255</li><li>该IP地址作为组的标识</li></ul></li><li>一个应用向一个组播地址/组发送一个消息，所有组成员都能从该组播地址和端口上接收到该消息。该应用可以不是组成员。<ul><li>类似与邮件列表</li></ul></li><li>当一个应用成为一个组播地址/端口的成员，则它可以接收到其他成员发送的数据报</li><li><code>java.net.MulticastSocket</code>类<ul><li>指定组播地址和端口</li><li>加入组/离开组</li></ul></li><li>UDP组播实例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String msg = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="comment">//定义一个组播地址</span></span><br><span class="line">InetAddress grp = InetAddress.getByName(<span class="string">&quot;228.5.6.7&quot;</span>);</span><br><span class="line"><span class="comment">//构造组播Socket</span></span><br><span class="line">MulticastSocket s = <span class="keyword">new</span> MulticastSocket(<span class="number">6789</span>);</span><br><span class="line"><span class="comment">//加入该组</span></span><br><span class="line">s.joinGroup(grp);</span><br><span class="line"><span class="comment">//构造发送数据报,发送</span></span><br><span class="line">DatagramPacket hi = <span class="keyword">new</span> DatagramPacket(msg.getBytes(), msg.length(),  grp, <span class="number">6789</span>);</span><br><span class="line">s.send(hi);</span><br><span class="line"><span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1000</span>];</span><br><span class="line"><span class="comment">//构造接收数据报</span></span><br><span class="line">DatagramPacket recv = <span class="keyword">new</span> DatagramPacket(buf, buf.length);</span><br><span class="line"><span class="comment">//接收数据报</span></span><br><span class="line">s.receive(recv);</span><br><span class="line"><span class="comment">//离开该组</span></span><br><span class="line">s.leaveGroup(grp);</span><br><span class="line"><span class="comment">//关闭数据报Socket</span></span><br><span class="line">s.close();</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java编程语言 </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(六):JAVA多线程编程</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-多线程基本概念">1. 多线程基本概念</h2><p>一个单独的线程和顺序程序相似，也有一个入口、一个出口以及一个顺序执行的序列，从概念上说，一个线程是一个程序内部的一个顺序控制流。线程并不是程序，它自己本身并不能运行，必须在程序中运行。在一个程序中可以实现多个线程，这些线程同时运行，完成不同的功能。</p><p>从逻辑的观点来看，多线程意味着一个程序的多行语句同时执行，但是多线程并不等于多次启动一个程序，操作系统也不会把每个线程当作独立的进程来对待：</p><ul><li><p>两者的粒度不同，是两个不同层次上的概念。进程是由操作系统来管理的，而线程则是在一个程序（进程）内。</p></li><li><p>不同进程的代码、内部数据和状态都是完全独立的，而一个程序内的多线程是共享同一块内存空间和同一组系统资源，有可能互相影响。</p></li><li><p>线程本身的数据通常只有寄存器数据，以及一个程序执行时使用的堆栈，所以线程的切换比进程切换的负担要小。</p></li></ul><p>多线程的优势：</p><ul><li><p>减轻编写交互频繁、涉及面多的程序的困难（如监听网络端口）。</p></li><li><p>程序的吞吐量会得到改善（同时监听多种设备，如网络端口、串口、并口以及其他外设）。</p></li><li><p>有多个处理器的系统，可以并发运行不同的线程（否则，任何时刻只有一个线程在运行）。</p></li></ul><p>虽然各种操作系统（Unix/Linux、Windows系列等）都支持多线程，但若要用C、C++或其他语言编写多线程程序是十分困难的，因为它们对数据同步的支持不充分。对多线程的综合支持是Java语言的一个重要特色，它提供了<code>Thread</code>类来实现多线程。在Java中，线程可以认为是由三部分组成的：</p><ul><li><p>虚拟CPU，封装在<code>java.lang.Thread</code>类中，它控制着整个线程的运行；</p></li><li><p>执行的代码，传递给<code>Thread</code>类，由<code>Thread</code>类控制顺序执行；</p></li><li><p>处理的数据，传递给<code>Thread</code>类，是在代码执行过程中所要处理的数据。</p></li></ul><h2 id="2-创建线程的方式">2.创建线程的方式</h2><p>​    Java的线程是通过Java的软件包<code>java.lang</code>中定义的类<code>Thread</code>来实现的。当生成一个Thread类的对象之后，就产生了一个线程，通过该对象实例，可以启动线程、终止线程、或者暂时挂起它等。</p><p><code>Thread</code>类本身只是线程的虚拟CPU，线程所执行的代码（或者说线程所要完成的功能）是通过方法<code>run()</code>（包含在一个特定的对象中）来完成的，方法<code>run()</code>称为<strong>线程体</strong>。实现线程体的特定对象是在初始化线程时传递给线程的。在一个线程被建立并初始化以后，Java的运行时系统就自动调用<code>run( )</code>方法，正是通过<code>run( )</code>方法才使得建立线程的目的得以实现。</p><p>通常，<code>run( )</code>方法是一个<strong>循环</strong>，例如一个播放动画的线程要循环显示一系列图片。有时，<code>run( )</code>方法会执行一个时间较长的操作，例如下载并播放一个JPEG格式的电影。</p><h3 id="类Thread的构造方法如下：">类Thread的构造方法如下：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Thread</span><span class="params">( ThreadGroup group, Runnable target, String name)</span></span></span><br></pre></td></tr></table></figure><ul><li><p><code>group</code>指明了线程所属的线程组；</p></li><li><p><code>target</code>是线程体<code>run()</code>方法所在的对象；</p></li><li><p><code>name</code>是线程的名称。</p></li></ul><p><code>target</code>必须实现接口<code>Runnable</code>。在接口<code>Runnable</code>中只定义了一个方法<code>void run()</code>作为线程体。任何实现接口<code>Runnable</code>的地对象都可以作为一个线程的目标对象。类<code>Thread</code>本身也实现了接口<code>Runnable</code>，因此，上述构造方法中各参数都可以为<code>null</code>，并且可以有两种方法构造用户自己的<code>run( )</code>方法。</p><h3 id="实现多线程的方法一：">实现多线程的方法一：</h3><p>定义一个线程类，它继承类<code>Thread</code>并<strong>重写</strong>其中的方法<code>run()</code>。这时在初始化这个类的实例时，目标对象<code>target</code>可以为<code>null</code>，表示这个实例本身具有线程体。由于Java只支持单继承，用这种方法定义的类不能再继承其他类。</p><p>参考代码片段如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SimpleThread1</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;  <span class="keyword">super</span>(str);  &#125;</span><br><span class="line">    <span class="comment">//重写run方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        &#123;  System.out.println(i + <span class="string">&quot; &quot;</span> + getName());<span class="comment">//getName--&gt;获得线程名字</span></span><br><span class="line">            <span class="keyword">try</span>&#123; sleep((<span class="keyword">int</span>)(Math.random() * <span class="number">1000</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e)&#123;   &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;DONE! &quot;</span> + getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">new</span> SimpleThread1(<span class="string">&quot;Jamaica&quot;</span>).start();</span><br><span class="line">       <span class="keyword">new</span> SimpleThread1(<span class="string">&quot;Fiji&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现多线程的方法二：">实现多线程的方法二：</h3><p>提供一个实现接口<code>Runnable</code>的类作为线程的目标对象。在初始化一个<code>Thread</code>类或子类生成线程实例时，<strong>把目标对象传递给这个线程实例</strong>，由该目标对象提供线程体<code>run()</code>方法。这时，实现接口<code>Runnable</code>的类还可以再继承其他类。</p><p>参考代码片段如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleThread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"> String name;</span><br><span class="line"> <span class="comment">//构造方法 </span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">SimpleThread2</span> <span class="params">(String str)</span> </span></span><br><span class="line"><span class="function"> </span>&#123; name =  str; &#125;</span><br><span class="line"> <span class="comment">//重写run()方法</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">     System.out.println(i+<span class="string">&quot; &quot;</span>+name);</span><br><span class="line">     <span class="keyword">try</span> &#123;Thread.sleep((<span class="keyword">long</span>)(Math.random()*<span class="number">1000</span>)); &#125;</span><br><span class="line">     <span class="keyword">catch</span> (InterruptedException e) &#123;&#125;   &#125;</span><br><span class="line">   System.out.println(<span class="string">&quot;DONE!&quot;</span>+name);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//构造一个以Runnable为接口类的实例</span></span><br><span class="line">      SimpleThread2 a = <span class="keyword">new</span> SimpleThread1(<span class="string">&quot;Jamaica&quot;</span>);</span><br><span class="line">      <span class="comment">//将实例传递给一个Thread类的实例</span></span><br><span class="line">      Thread thread1 = <span class="keyword">new</span> Thread(a);</span><br><span class="line">      thread1.start();</span><br><span class="line">      SimpleThread1 b = <span class="keyword">new</span>  SimpleThread2(<span class="string">&quot;Fiji&quot;</span>);</span><br><span class="line">      Thread thread2 = <span class="keyword">new</span> Thread(b);</span><br><span class="line">      thread2.start();   </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>run ()</code>方法是运行线程的主体，启动线程时，由java直接调用<code>public void run()</code>。</p></li><li><p>使用<code>Runnable</code>接口可以将线程的虚拟CPU、代码和数据分开，形成一个<strong>比较清晰</strong>的模型。</p></li><li><p>使用<code>Runnable</code>接口使得包含线程体的类还可以<strong>继承其他类</strong>。</p></li><li><p>直接继承<code>Thread</code>类以后不能再继承其他类，但编写简单，并可直接操纵线程；使用<code>Runnable</code>接口时，若要在<code>run()</code>方法中操纵线程，必须使用<code>Thread.currentThread()</code>方法。</p></li><li><p>在具体应用中，采用哪种方法来构造线程体要根据具体情况而定。通常，当一个线程体所在的类已经继承了另一个类时，就应该用实现<code>Runnable</code>接口的方法。</p></li></ul><h2 id="3-线程的生命周期及控制">3.线程的生命周期及控制</h2><p>线程是程序内部的一个顺序控制流，它具有一个特定的生命周期。在一个线程的生命周期中，它总处于某一种状态中。线程的状态表示了线程正在进行的活动以及在这段时间内线程能完成的任务。</p><h3 id="1-创建状态（new-Thread）">1.创建状态（new Thread）</h3><p>当创建了一个新的线程时（<code>myThread thd = new myThread();</code>），它就处于创建状态，此时它仅仅是一个<strong>空的线程对象</strong>，系统不为它分配资源。处于这种状态时<strong>只能启动或终止该线程</strong>，调用除这两种以外的其它方法都会失败并且会引起非法状态例外<code>IllegalThreadStateException</code>（对于其它状态，若所调用的方法与状态不符，都会引起非法状态例外）。</p><h3 id="2-可运行状态（Runnable）">2.可运行状态（Runnable）</h3><p>当线程处于创建状态时，可以调用<code>start()</code>方法（ <code>thd.start();</code>）来启动它，产生运行这个线程所需的系统资源，安排其运行，并调用线程体<code>run()</code>方法，这样就使得该线程处于<strong>可运行</strong>( <code>Runnable</code> )状态。</p><p>需要注意的是这一状态并不是运行中状态（Running )，因为线程<strong>也许实际上并未真正运行</strong>。由于很多计算机都是单处理器的，所以要在同一时刻运行所有的处于可运行状态的线程是不可能的，Java运行系统必须实现调度来保证这些线程共享处理器。但是在大多数情况下，可运行状态也就是运行中，当一个线程正在运行时，它是可运行的，并且也是当前正运行的线程。</p><h3 id="3-不可运行状态（Not-Runnable）">3.不可运行状态（Not Runnable）</h3><p>线程处于可运行状态时，当下面四种情况发生，线程就进入不可运行状态：</p><ul><li><p>调用了<code>sleep()</code>方法；</p></li><li><p>调用了<code>suspend()</code>方法；</p></li><li><p>为等候一个条件变量，线程调用<code>wait()</code>方法；</p></li><li><p>输入输出流中发生线程阻塞。</p></li></ul><p>对于前面四种使得线程处于不可运行状态地情况，都有特定的方法使线程返回可运行状态：</p><ul><li><p>如果线程处于睡眠状态中，<code>sleep()</code>方法中的参数为休息时间，当这个时间过去后，线程即为可运行的；</p></li><li><p>如果一个线程被挂起，须调用<code>resume()</code>方法来返回；</p></li><li><p>如果线程在等待条件变量，那么要停止等待的话，需要该条件变量所在的对象调用<code>notify()</code>或<code>notifyAll()</code>方法;</p></li><li><p>如果在I/O流中发生线程阻塞，则特定的I/O指令将结束这种不可运行状态。</p></li></ul><p>需要注意的是每种方法都仅仅对相应的情况才有作用，例如当一个线程睡眠并且睡眠时间还没有结束时，调用resume()方法是无效的，并且还会引起非法状态例外。</p><h3 id="4-死亡状态（Dead）">4.死亡状态（Dead）</h3><p>线程的终止一般可通过两种方法实现：<strong>自然撤消</strong>或是<strong>被停止</strong>。自然撤消是指从线程的<code>run()</code>方法正常退出；而调用线程的实例方法<code>stop()</code>则可以强制停止当前线程。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//线程自然撤销</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//线程被强行停止</span></span><br><span class="line">myThread thd = <span class="keyword">new</span> MyThread();</span><br><span class="line">thd.start( );</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123; </span><br><span class="line">   thd.sleep(<span class="number">10000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e)&#123;&#125;</span><br><span class="line">thd.stop( );</span><br></pre></td></tr></table></figure><p>可以通过在其他线程中调用<code>stop()</code>方法来终止线程，也可以由线程自己调用<code>stop()</code>方法，自我终止。如果希望线程正常终止，可采用标记来使线程中的<code>run()</code>方法退出。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//线程自我终止</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="keyword">true</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        … <span class="comment">//完成线程的特定功能</span></span><br><span class="line">        <span class="keyword">if</span>( time_to_die )</span><br><span class="line">        &#123; Thread.currentThread().stop();&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>isAlive()</code>方法：可以用来判断线程目前是否正在执行状态中。如果线程已被启动并且未被终止，那么<code>isAlive( )</code>返回<code>true</code>，但该线程是可运行或是不可运行的，是不能作进一步的分辨。如果返回<code>false</code>，则该线程是新创建或是已被终止的（同样不能作进一步的分辨）。</p></li><li><p><code>join()</code>方法：等待线程执行完毕。</p></li><li><p><code>yield()</code>方法：将执行的权力交给其它优先级相同的线程，自己到可运行线程队列的最后等待，若队列空，该方法无效。</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">myThread thd = <span class="keyword">new</span> MyThread();</span><br><span class="line">thd.start();</span><br><span class="line">…</span><br><span class="line">thd.join();  <span class="comment">//等待线程thd执行完后再继续往下执行</span></span><br><span class="line"><span class="comment">//join(int time)：最多等待time所指定的时间。</span></span><br><span class="line">…</span><br></pre></td></tr></table></figure><ul><li><p><code>sleep()</code>方法可以暂停线程的执行，让其它线程得到机会。但<code>sleep()</code>要丢出例外<code>InterruptedException </code>，必须抓住。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    sleep(<span class="number">100</span>)</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">    …<span class="comment">//本例外可不作处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>suspend()</code>方法和<code>resume()</code>可以用来暂停线程或恢复线程。可以由线程自身在线程体重调用<code>suspend()</code>方法暂停自己，也可以在其他线程中通过线程实例调用<code>suspend()</code>方法暂停线程的执行。但是要恢复由<code>suspend()</code>方法暂停的线程，只能在其他线程中通过线程实例调用<code>resume()</code>方法。</p></li></ul><h2 id="4-线程的调度">4.线程的调度</h2><p>Java提供一个线程调度器来监控程序中启动后进入可运行状态的所有线程。线程调度器按照线程的<strong>优先级</strong>决定调度哪些线程来执行，具有高优先级的线程会在较低优先级的线程之前得到执行。同时线程的调度是<strong>抢先式</strong>的，即如果当前线程在执行过程中，一个具有更高优先级的线程进入可执行状态，则该高优先级的线程会被立即调度执行。多个线程运行时，若线程的优先级相同，由操作系统<strong>按时间片轮转方式</strong>和<strong>独占方式</strong>来分配线程的执行时间。</p><p>在Java中线程的优先级是用数字来表示的，分为三个级别：</p><ul><li><p><strong>低优先级</strong>：<code>Thread.MIN_PRIORITY</code>，数值为1 <em>(2~4)</em></p></li><li><p><strong>缺省优先级</strong>：<code>Thread. NORM_PRIORITY</code>，数值为5</p></li><li><p><strong>高优先级</strong>：<code>Thread.MAX_PRIORITY</code>，数值为10 <em>(6~9)</em></p></li></ul><p>线程被创建后，其缺省的优先级是缺省优先级<code>Thread. NORM_PRIORITY</code>。可以用方法 int <code>getPriority()</code>来获得线程的优先级，同时也可以用方法 <code>void setPriority( int p ) </code>在线程被创建后改变线程的优先级。</p><h2 id="5-多线程的互斥与同步">5.多线程的互斥与同步</h2><h3 id="1-线程间的通信">1. 线程间的通信</h3><ol><li><p>用管道流实现线程间的通信</p></li><li><p>通过一个中间类在线程间传递信息</p></li></ol><p>管道流可以连接两个线程间的通信。下面的例子里有两个线程在运行，一个写线程往管道流中输出信息，一个读线程从管道流中读入信息。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myWriter</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> PipedOutputStream outStream;   <span class="comment">//将数据输出</span></span><br><span class="line">    <span class="keyword">private</span> String messages[] = &#123; <span class="string">&quot;Monday&quot;</span>, <span class="string">&quot;Tuesday &quot;</span>, <span class="string">&quot;Wednsday&quot;</span>, </span><br><span class="line">            <span class="string">&quot;Thursday&quot;</span>,<span class="string">&quot;Friday&quot;</span>, <span class="string">&quot;Saturday&quot;</span>, <span class="string">&quot;Sunday&quot;</span> &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">myWriter</span><span class="params">(PipedOutputStream o)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        outStream = o;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        PrintStream p = <span class="keyword">new</span> PrintStream( outStream );</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; messages.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p.println( messages[i] );</span><br><span class="line">            p.flush();</span><br><span class="line">            System.out.println(<span class="string">&quot;Write:&quot;</span> + messages[i] );</span><br><span class="line">        &#125;</span><br><span class="line">        p.close(); p = <span class="keyword">null</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myReader</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> PipedInputStream inStream;  <span class="comment">//从中读数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">myReader</span><span class="params">(PipedInputStream i)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        inStream = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String line;</span><br><span class="line">        DataInputStream d;</span><br><span class="line">        <span class="keyword">boolean</span> reading = <span class="keyword">true</span>;</span><br><span class="line">        d = <span class="keyword">new</span> DataInputStream( inStream );</span><br><span class="line">        <span class="keyword">while</span>( reading &amp;&amp; d != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                line = d.readLine();</span><br><span class="line">                <span class="keyword">if</span>( line != <span class="keyword">null</span> )    </span><br><span class="line">                  System.out.println(<span class="string">&quot; Read: &quot;</span> + line );</span><br><span class="line">                <span class="keyword">else</span>    reading = <span class="keyword">false</span>;</span><br><span class="line">            &#125;<span class="keyword">catch</span>( IOException e)&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Thread.currentThread().sleep( <span class="number">4000</span> );</span><br><span class="line">        &#125;<span class="keyword">catch</span>( InterruptedException e )&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pipethread</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Pipethread thisPipe = <span class="keyword">new</span> Pipethread();  </span><br><span class="line">        thisPipe.process();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        PipedInputStream inStream; </span><br><span class="line">        PipedOutputStream outStream;</span><br><span class="line">        PrintStream printOut;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            outStream = <span class="keyword">new</span> PipedOutputStream();</span><br><span class="line">            inStream = <span class="keyword">new</span> PipedInputStream(outStream);</span><br><span class="line">            <span class="keyword">new</span> myWriter( outStream ).start();</span><br><span class="line">            <span class="keyword">new</span> myReader( inStream ).start(); </span><br><span class="line">        &#125;<span class="keyword">catch</span>( IOException e )&#123; &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-线程间的资源互斥共享">2.线程间的资源互斥共享</h3><p>通常，一些同时运行的线程需要共享数据。在这种时候，每个线程就必须要考虑其他一起共享数据的线程的状态与行为，否则的话就不能保证共享数据的一致性，从而也就不能保证程序的正确性。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">stack</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span>[] data = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">6</span>];</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        data[index] = c;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        index--;</span><br><span class="line">        <span class="keyword">return</span> data[index];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当有两个线程A和B同时使用了stack类的一个实例时，A要往堆栈里push数据，而B则要从堆栈中pop数据：</p><ol><li><p>操作之前，堆栈中有两个字符：</p><p>data = | a | c |  |  |  |  |   index = 2</p></li><li><p>A执行push中的第一条语句data[index] = ‘r’：</p><p>data = | a | c | r |  |  |  |   index = 2</p></li><li><p>A还没有执行index++语句，A被B中断，B执行pop()方法，返回‘c’：</p><p>data = | a | c | r |  |  |  |   index = 1</p></li><li><p>A继续执行index++语句：</p><p>data = | a | c | r |  |  |  |   index = 2</p></li></ol><p>最后的结果是r并没有添加到堆栈中去。</p><p>产生这种问题的原因是对共享资源访问的不完整。为了解决这种问题，需要寻找一种机制来保证对共享数据操作的完整性，这种完整性称为共享数据操作的同步，共享数据叫做条件变量。在Java语言中，引入了“<strong>对象互斥锁</strong>”的概念（又称为监视器、管程）来实现不同线程对共享数据操作的同步。 “对象互斥锁”阻止多个线程同时访问同一个条件变量。</p><p>在Java语言中，有两种方法可以实现“对象互斥锁”：</p><ul><li><p>用关键字<code>volatile</code>来声明一个<strong>共享数据</strong>（变量）；</p></li><li><p>用关键字<code>synchronized</code>来声明一个操作<strong>共享数据的方法</strong>或<strong>一段代码</strong>。</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">stack</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span>[] data = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">6</span>];</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        data[index] = c;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">char</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        index--;</span><br><span class="line">        <span class="keyword">return</span> data[index];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">stack</span></span>&#123;</span><br><span class="line">    <span class="comment">//…</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span>(<span class="keyword">this</span>)&#123;</span><br><span class="line">            data[index] = c;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//…</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用<code>synchronized</code>来标识的区域或方法即为“<strong>对象互斥锁</strong>”锁住的部分。如果一个程序内有两个或以上的方法使用<code>synchronized</code>标志，则它们在同一个“对象互斥锁”管理之下。</p><p>一般情况下，都使用<code>synchronized</code>关键字在方法的层次上实现对共享资源操作的同步，很少使用<code>volatile</code>关键字声明共享变量。</p><h3 id="3-线程间的同步">3.线程间的同步</h3><p>除了要处理多线程间共享数据操作的同步问题之外，在进行多线程程序设计时，还会遇到另一类问题，这就是如何控制相互交互的线程之间的运行进度，即<strong>多线程的同步</strong>。</p><p>典型的模型：生产者——消费者问题</p><p>若共享对象中只能存放一个数据，可能出现以下问题:</p><ul><li><p>生产者比消费者快时，消费者会漏掉一些数据没有取到；</p></li><li><p>消费者比生产者快时，消费者取相同的数据。</p></li></ul><p>为了解决所出现的问题，在Java语言中可以用<code>wait()</code> 和<code>notify()</code>/<code>notifyAll()</code>方法用来协调线程间的读取关系。 <code>wait()</code>方法的作用是让当前线程释放其所持有的“对象互斥锁”，进入wait队列（等待队列）；而<code>notify()</code>/<code>notifyAll()</code>方法的作用是唤醒一个或所有正在等待队列中等待的线程，并将它（们）移入等待同一个“对象互斥锁”的队列。</p><p>需要指出的是： <code>notify()</code>/<code>notifyAll()</code>方法和<code>wait ()</code>方法都只能在被声明为<code>synchronized</code>的方法或代码段中调用。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CubbyHole</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> seq;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> available = <span class="keyword">false</span>;  <span class="comment">//信号量</span></span><br><span class="line">    <span class="comment">//get()方法在读信息之前先等待，直到信息可读，读完后通知要写的线程。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (available == <span class="keyword">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">               wait();  </span><br><span class="line">               <span class="comment">// waits for notify() call from Producer</span></span><br><span class="line">            &#125;<span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        available = <span class="keyword">false</span>;</span><br><span class="line">        notify();</span><br><span class="line">        <span class="keyword">return</span> seq;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//put()方法在写信息之前先等待，直到信息被取走，写完后通知要读的进程。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (available == <span class="keyword">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;   </span><br><span class="line">            wait();</span><br><span class="line">            <span class="comment">// waits for notify() call from consumer</span></span><br><span class="line">        &#125;<span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    seq = value;</span><br><span class="line">    available = <span class="keyword">true</span>;</span><br><span class="line">    notify();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span> <span class="keyword">extends</span> <span class="title">Thread</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">private</span> CubbyHole cubbyhole;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Producer</span><span class="params">(CubbyHole c, <span class="keyword">int</span> number)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       cubbyhole = c;</span><br><span class="line">       <span class="keyword">this</span>.number = number;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span>; i++)</span><br><span class="line">       &#123;</span><br><span class="line">           cubbyhole.put(i);</span><br><span class="line">           System.out.println(<span class="string">&quot;Producer #&quot;</span> + <span class="keyword">this</span>.number + <span class="string">&quot; put: &quot;</span> + i);</span><br><span class="line">           <span class="keyword">try</span>&#123;</span><br><span class="line">               sleep((<span class="keyword">int</span>)(Math.random() * <span class="number">100</span>));</span><br><span class="line">           &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">extends</span> <span class="title">Thread</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> CubbyHole cubbyhole;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Consumer</span><span class="params">(CubbyHole c, <span class="keyword">int</span> number)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cubbyhole = c;</span><br><span class="line">        <span class="keyword">this</span>.number = number;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            value = cubbyhole.get();</span><br><span class="line">            System.out.println(<span class="string">&quot;Consumer #&quot;</span> + <span class="keyword">this</span>.number + <span class="string">&quot; got: &quot;</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProducerConsumerTest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        CubbyHole c = <span class="keyword">new</span> CubbyHole();</span><br><span class="line">        Producer p1 = <span class="keyword">new</span> Producer(c, <span class="number">1</span>);</span><br><span class="line">        Consumer c1 = <span class="keyword">new</span> Consumer(c, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        p1.setPriority(Thread.MAX_PRIORITY);</span><br><span class="line">        c1.setPriority(Thread.MAX_PRIORITY);</span><br><span class="line"></span><br><span class="line">        p1.start();</span><br><span class="line">        c1.start();</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-死锁问题">4.死锁问题</h3><p>如果你的持有一个锁并试图获取另一个锁时，就有死锁的危险。</p><p>死锁是资源的无序使用而带来得，解决死锁问题的方法就是给资源施加排序。note编号为1，pen编号为2，线程1和线程2都必须先获得1号资源后方可再获取2号资源。</p><h3 id="5-Daemon线程-守护线程">5.Daemon线程(守护线程)</h3><p>在客户/服务器模式下，服务器的作用是等待用户发来请求,并按请求完成客户的工作。</p><p>守护线程是为其它线程提供服务的线程，它一般应该是一个独立的线程，它的<code>run()</code>方法是一个无限循环。可以用方法<code>public boolean isDaemon()</code>确定一个线程是否守护线程，也可以用方法<code>public void setDaemon( boolean )</code>来设定一个线程为守护线程。守护线程与其它线程的区别是，如果守护线程是唯一运行着的线程,程序会自动退出。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java编程语言 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(五):JAVA可视化界面</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%8F%AF%E8%A7%86%E5%8C%96%E7%95%8C%E9%9D%A2/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%8F%AF%E8%A7%86%E5%8C%96%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概述">1.概述</h2><p>类继承关系如下：</p><p><code>java.lang.Object</code>–&gt;<code>java.awt.Component</code>–&gt;<code>java.awt.Conrtainer</code>–&gt;<code>javax.swing.JComponent</code></p><p><code>JComponnt</code>是<code>swing</code>组件存放的位置，常⽤的组件如下：</p><table><thead><tr><th style="text-align:center"><code>JFrame</code></th><th style="text-align:center">框架</th></tr></thead><tbody><tr><td style="text-align:center"><code>JDialog </code></td><td style="text-align:center">对话框</td></tr><tr><td style="text-align:center"><code>JOptionPane</code></td><td style="text-align:center">对话框</td></tr><tr><td style="text-align:center"><code>JButton</code></td><td style="text-align:center">按钮</td></tr><tr><td style="text-align:center"><code>JCheckBox</code></td><td style="text-align:center">复选框</td></tr><tr><td style="text-align:center"><code>JComBox</code></td><td style="text-align:center">下拉框</td></tr><tr><td style="text-align:center"><code>JLabel</code></td><td style="text-align:center">标签</td></tr><tr><td style="text-align:center"><code>JRadioButton</code></td><td style="text-align:center">单选按钮</td></tr><tr><td style="text-align:center"><code>JList</code></td><td style="text-align:center">显⽰⼀组条⽬的组件</td></tr><tr><td style="text-align:center"><code>JTextField</code></td><td style="text-align:center">⽂本框(1行)</td></tr><tr><td style="text-align:center"><code>JPasswordField</code></td><td style="text-align:center">密码框</td></tr><tr><td style="text-align:center"><code>JTextArea</code></td><td style="text-align:center">⽂本区域(多行)</td></tr></tbody></table><h2 id="2-常用的窗体">2. 常用的窗体</h2><h3 id="1-JFrame">1. <code>JFrame</code></h3><p>JFrame是⼀个容器，他是各个组件的载体。在开发的过程中，我们通过继承java.swiThg.JFrame来创建要给窗体。</p><ul><li>新建<code>JFrame</code>对象</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame();<span class="comment">//创建没有标题窗⼝。</span></span><br><span class="line">JFrame(String s);<span class="comment">//创建标题为s的窗⼝。</span></span><br></pre></td></tr></table></figure><ul><li>设置<code>JFrame</code>大小</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSize</span><span class="params">(<span class="keyword">int</span> width,<span class="keyword">int</span> height)</span></span>;<span class="comment">//设置窗⼝的⼤⼩。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLocation</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;<span class="comment">//设置窗⼝的位置，默认位置是(0,0)。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span><span class="title">setBounds</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> width,<span class="keyword">int</span> height)</span></span>;<span class="comment">//设置窗⼝的初始位置是(a,b),窗⼝的宽是width,⾼是height。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVisible</span><span class="params">(<span class="keyword">boolean</span> b)</span></span>;<span class="comment">//设置窗⼝是否可⻅，窗⼝默认是不可⻅的。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResizable</span><span class="params">(<span class="keyword">boolean</span> b)</span></span>;<span class="comment">//设置窗⼝是否可调整⼤⼩，默认可调整⼤⼩。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dispose</span><span class="params">()</span></span>;<span class="comment">//撤销当前窗⼝，并释放当前窗⼝所使⽤的资源。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExtendedState</span><span class="params">(<span class="keyword">int</span> state)</span></span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">设置窗⼝的扩展状态，其中参数state取JFrame类中的下列类常量:</span></span><br><span class="line"><span class="comment">MAXIMIZED_HORIZ ( ⽔ 平 ⽅ 向 最 ⼤ 化 )，</span></span><br><span class="line"><span class="comment">MAXIMIZED_VERT ( 垂 直 ⽅ 向 最 ⼤ 化 )， </span></span><br><span class="line"><span class="comment">MAXIMIZED_BOTH (⽔平、垂直⽅向都最⼤化)。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>设定<code>JFrame</code>关闭模式</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">publicvoid <span class="title">setDefaultCloseOperation</span><span class="params">(<span class="keyword">int</span> operation)</span></span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">该⽅法⽤来设置单击窗体右上⻆的关闭图标后，程序会做出怎样的处理，其中的参数operation取JFrame类中的下列int型static常量，程序根据参数operation取值做出不同的处理:</span></span><br><span class="line"><span class="comment">- DO_NOTHING_ON_CLOSE(什么也不做)， </span></span><br><span class="line"><span class="comment">- HIDE_ON_CLOSE (隐藏当前窗⼝)，</span></span><br><span class="line"><span class="comment">- DISPOSE_ON_CLOSE (隐藏当前窗⼝，并释放窗体占有的其他资源)，</span></span><br><span class="line"><span class="comment">- EXIT_ON_CLOSE (结束窗⼝所在的应⽤程序)。//常用</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="2-JDialog">2. <code>JDialog</code></h3><p>继承⾃java.awt.Dialog类。他是从⼀个窗体弹出来的另外⼀个窗体，和JFrame类似。可当成⼀JFrame使⽤，但必须从属于JFrame。</p><ul><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JDialog();</span><br><span class="line">JDialog(Frame f);<span class="comment">// 指定⽗窗⼝</span></span><br><span class="line">JDialog(Frame f, String title);<span class="comment">// 指定⽗窗⼝ + 标题</span></span><br></pre></td></tr></table></figure><ul><li>关闭方式没有<code>EXIT_ON_CLOSE</code>，一般用<code>DISPOSE_ON_CLOSE</code></li></ul><h2 id="3-常用面板">3.常用面板</h2><h3 id="1-JPanel">1.<code>JPanel</code></h3><p><code>JPaThel</code>就是⼀种最简单的⾯板，他继承⾃<code>java.awt.CoThtaiTher</code>类。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>); </span><br><span class="line">jf.setBounds(<span class="number">400</span>, <span class="number">300</span>, <span class="number">1200</span>, <span class="number">1200</span>);</span><br><span class="line">jf.setVisible(<span class="keyword">true</span>);</span><br><span class="line">JButton jb = <span class="keyword">new</span> JButton(<span class="string">&quot;⾹蕉&quot;</span>);</span><br><span class="line">JButton jb2 = <span class="keyword">new</span> JButton(<span class="string">&quot;草莓&quot;</span>);</span><br><span class="line">JPanel jp = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout());<span class="comment">// ⽣成⼀个⾯板</span></span><br><span class="line">jp.add(jb);</span><br><span class="line">jp.add(jb2);</span><br><span class="line">jf.add(jp);<span class="comment">// 将⾯板加⼊到另外的容器中</span></span><br></pre></td></tr></table></figure><h3 id="2-JScrollPane">2.<code>JScrollPane</code></h3><p><code>JScrollPahe</code>是带滚动条的⾯板。因此，在碰到需要将⼀个⼤的组件放到⼀个较⼩的空间的时候，使⽤该⾯板。<code>JScrollPaThe内</code><strong>只能添加⼀个组件</strong>；因此，如果需要将多个组件添加到⼀个<code>JScrollPahe</code>中时，需要先将需要添加的组件添加到<code>JPahel</code>中，再将<code>JPahel</code>添加到<code>JScrollPahe</code>中。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line">jf.setBounds(<span class="number">400</span>, <span class="number">300</span>, <span class="number">1200</span>, <span class="number">200</span>);</span><br><span class="line">jf.setVisible(<span class="keyword">true</span>);</span><br><span class="line">JButton jb = <span class="keyword">new</span> JButton(<span class="string">&quot;⾹蕉&quot;</span>);</span><br><span class="line">jb.setSize(<span class="number">800</span>,<span class="number">200</span>);</span><br><span class="line">JScrollPane jp=<span class="keyword">new</span> JScrollPane(jb); </span><br><span class="line">jf.add(jp);</span><br></pre></td></tr></table></figure><h2 id="4-常用组件">4.常用组件</h2><h3 id="1-标签组件">1.标签组件</h3><ul><li>类：<code>JLabel</code></li><li>作用：显示文本或者提示信息</li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> JLabel();</span><br><span class="line"><span class="keyword">new</span> JLabel(Icon icon);<span class="comment">//设置图标</span></span><br><span class="line"><span class="keyword">new</span> JLabel(Icon icon,<span class="keyword">int</span> aligment);<span class="comment">// 设置图标 + ⽔平对⻬⽅式</span></span><br><span class="line"><span class="keyword">new</span> JLabel(String str,<span class="keyword">int</span> aligment);<span class="comment">// 设置⽂本  + ⽔平对⻬⽅式</span></span><br><span class="line"><span class="keyword">new</span> JLabel(String str, Icon icon, <span class="keyword">int</span> aligment);<span class="comment">// 设置⽂本 + 图标 + ⽔平对⻬</span></span><br><span class="line"><span class="comment">//对齐方式: LEFT/RIGHT/CENTER</span></span><br></pre></td></tr></table></figure><h3 id="3-按钮">3.按钮</h3><ul><li>类：<code>JButton</code></li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JButton();</span><br><span class="line">JButton(String text);<span class="comment">//指定文字</span></span><br><span class="line">JButton(Icon icon);<span class="comment">//指定图标</span></span><br><span class="line">JButton(String text,Icon icon);<span class="comment">//指定文字+图标</span></span><br></pre></td></tr></table></figure><ul><li>其他方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setTooltipText(String text);<span class="comment">//设置提示文字</span></span><br><span class="line">setBorderPainted(Boolean);<span class="comment">//设置边界是否显示</span></span><br><span class="line">setEnabled(Boolean);设置是否可用</span><br></pre></td></tr></table></figure><h3 id="4-单选按钮组件">4.单选按钮组件</h3><ul><li>类：<code>JRadioButton</code>、<code>ButtonGroup</code></li><li>说明：<code>JRadioButton</code>是一个单选按钮，需要将单选按钮加入到按钮组中（对于一组单选而言）</li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JRadioButton();</span><br><span class="line">JRadioButton(Icon icon);<span class="comment">// 指定图标</span></span><br><span class="line">JRadioButton(Icon icon,Boolean selected);<span class="comment">// 指定图标 + 是否选中</span></span><br><span class="line">JRadioButton(String text);<span class="comment">// 指定⽂字</span></span><br><span class="line">JRadioButton(String text, Icon icon);<span class="comment">// 指定⽂字 + 图标</span></span><br><span class="line">JRadioButton(String text, Icon icon, <span class="keyword">boolean</span> selected);<span class="comment">// 指定⽂字 + 图标 +是否选中</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//设置框架</span></span><br><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>); </span><br><span class="line">jf.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">jf.setBounds(<span class="number">400</span>, <span class="number">300</span>, <span class="number">200</span>, <span class="number">300</span>); </span><br><span class="line"><span class="comment">//设置按钮信息</span></span><br><span class="line">JRadioButton jrb = <span class="keyword">new</span> JRadioButton(<span class="string">&quot;男&quot;</span>); </span><br><span class="line">JRadioButton jrb2 = <span class="keyword">new</span> JRadioButton(<span class="string">&quot;⼥&quot;</span>);</span><br><span class="line"><span class="comment">//将按钮加入同一个按钮组中</span></span><br><span class="line">ButtonGroup bg = <span class="keyword">new</span> ButtonGroup(); </span><br><span class="line">bg.add(jrb);</span><br><span class="line">bg.add(jrb2);</span><br><span class="line"><span class="comment">//将按钮添加到框架</span></span><br><span class="line">jf.add(jrb);</span><br><span class="line">jf.add(jrb2);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h3 id="5-复选组件框">5.复选组件框</h3><ul><li>类：<code>JCheckBox</code></li><li>说明：不需要再加到一个按钮组</li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JCheckBox();</span><br><span class="line">JCheckBox(Icon icon, <span class="keyword">boolean</span> checked);<span class="comment">// 指定图标 + 是否被选中</span></span><br><span class="line">JCheckBox(String text, <span class="keyword">boolean</span> checked);<span class="comment">// 指定⽂字 + 是否被选中</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>); </span><br><span class="line">jf.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">jf.setBounds(<span class="number">400</span>, <span class="number">300</span>, <span class="number">200</span>, <span class="number">300</span>); </span><br><span class="line"></span><br><span class="line">JCheckBox jcb1 = <span class="keyword">new</span> JCheckBox(<span class="string">&quot;篮球&quot;</span>); </span><br><span class="line">JCheckBox jcb2 = <span class="keyword">new</span> JCheckBox(<span class="string">&quot;⾳乐&quot;</span>);</span><br><span class="line">JCheckBox jcb3 = <span class="keyword">new</span> JCheckBox(<span class="string">&quot;代码&quot;</span>); </span><br><span class="line">JCheckBox jcb4 = <span class="keyword">new</span> JCheckBox(<span class="string">&quot;睡觉&quot;</span>);</span><br><span class="line"></span><br><span class="line">jf.add(jcb1);</span><br><span class="line">jf.add(jcb2);</span><br><span class="line">jf.add(jcb3);</span><br><span class="line">jf.add(jcb4);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h3 id="6-下拉列表组件">6.下拉列表组件</h3><ul><li>类：<code>JComboBox</code></li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JComboBox();<span class="comment">//常⽤</span></span><br><span class="line">JComboBox(ComboBoxModel dataModel);<span class="comment">// 使⽤listModel建⽴⼀个下拉列表</span></span><br><span class="line">JComboBox(Object[] arrayData);</span><br><span class="line">JComboBox(Vector vector);</span><br></pre></td></tr></table></figure><ul><li>其他方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">addItem();<span class="comment">// 添加下拉内容</span></span><br></pre></td></tr></table></figure><ul><li>示例:</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line">jf.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">JComboBox box=<span class="keyword">new</span> JComboBox(); </span><br><span class="line">box.addItem(<span class="string">&quot;--请选择你的学历--&quot;</span>);</span><br><span class="line">box.addItem(<span class="string">&quot;⾼中&quot;</span>);</span><br><span class="line">box.addItem(<span class="string">&quot;⼤学&quot;</span>);</span><br><span class="line">box.addItem(<span class="string">&quot;研究⽣&quot;</span>);</span><br><span class="line">jf.add(box);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h3 id="7-菜单栏">7.菜单栏</h3><ul><li>一级菜单的菜单栏目：<ol><li>创建菜单栏<code>JMenuBar</code></li><li>创建菜单 <code>JMenu</code></li><li>创建菜单项 <code>JMenuItem</code></li></ol></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>);</span><br><span class="line">JMenuBar bar=<span class="keyword">new</span> JMenuBar();</span><br><span class="line">JMenu menu=<span class="keyword">new</span> JMenu(<span class="string">&quot;菜单1&quot;</span>);</span><br><span class="line">JMenuItem item1 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单1&quot;</span>);</span><br><span class="line">JMenuItem item2 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单2&quot;</span>); </span><br><span class="line">JMenuItem item3 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单3&quot;</span>);</span><br><span class="line"></span><br><span class="line">menu.add(item1);</span><br><span class="line">menu.add(item2);</span><br><span class="line">menu.add(item3); </span><br><span class="line"></span><br><span class="line">bar.add(menu); </span><br><span class="line">jf.add(bar); </span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>);</span><br><span class="line">jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><ul><li>多级菜单的菜单栏<ol><li>创建菜单栏<code>JMenuBar</code></li><li>创建多个菜单<code>JMenu</code></li><li>创建多个菜单项 <code>JMenuItem</code></li></ol></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>); </span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>); </span><br><span class="line"></span><br><span class="line">JMenuBar bar=<span class="keyword">new</span> JMenuBar();</span><br><span class="line"></span><br><span class="line">JMenu menu=<span class="keyword">new</span> JMenu(<span class="string">&quot;菜单1&quot;</span>);</span><br><span class="line">JMenu menu2=<span class="keyword">new</span> JMenu(<span class="string">&quot;菜单2&quot;</span>);</span><br><span class="line"></span><br><span class="line">JMenuItem item1 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单1&quot;</span>);</span><br><span class="line">JMenuItem item2 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单2&quot;</span>);</span><br><span class="line">JMenuItem item3 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单3&quot;</span>);</span><br><span class="line">JMenuItem item4 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单1&quot;</span>);</span><br><span class="line">JMenuItem item5 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单2&quot;</span>);</span><br><span class="line">JMenuItem item6 = <span class="keyword">new</span> JMenuItem(<span class="string">&quot;⼆级菜单3&quot;</span>);</span><br><span class="line"></span><br><span class="line">menu.add(item1);</span><br><span class="line">menu.add(item2);</span><br><span class="line">menu.add(item3);</span><br><span class="line"></span><br><span class="line">menu2.add(item4);</span><br><span class="line">menu2.add(item5);</span><br><span class="line">menu2.add(item6);</span><br><span class="line"></span><br><span class="line">bar.add(menu);</span><br><span class="line">bar.add(menu2);</span><br><span class="line"></span><br><span class="line">jf.add(bar);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>);</span><br><span class="line">jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h3 id="8-文本组件">8. 文本组件</h3><ul><li>类：<code>JTextField</code></li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JTextField();</span><br><span class="line">JTextField(String text);<span class="comment">// 指定默认⽂字</span></span><br><span class="line">JTextField(<span class="keyword">int</span> fieldWidth);<span class="comment">// 指定⽂本框⻓度</span></span><br><span class="line">JTextField(String text, <span class="keyword">int</span> fieldWidth);<span class="comment">// 指定默认⽂字 + ⽂本框⻓度</span></span><br><span class="line">JTextField(Document docModel, String text, <span class="keyword">int</span> fieldWidth);<span class="comment">// 指定⽂本框模式 + 默认⽂字 + ⽂本框⻓度</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line">jf.setLayout(<span class="keyword">new</span> FlowLayout()); </span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>); </span><br><span class="line"></span><br><span class="line">JLabel label = <span class="keyword">new</span> JLabel(<span class="string">&quot;账号:&quot;</span>);</span><br><span class="line">JTextField text = <span class="keyword">new</span> JTextField(<span class="string">&quot;請輸⼊賬號&quot;</span>,<span class="number">20</span>);</span><br><span class="line">text.setSize(<span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">jf.add(label);</span><br><span class="line">jf.add(text);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h3 id="9-密码框组件">9. 密码框组件</h3><ul><li>类：<code>JPasswordField </code></li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JPasswordField();</span><br><span class="line">JPasswordField(String str);<span class="comment">// 指定默认⽂字</span></span><br><span class="line">JPasswordField(<span class="keyword">int</span> fieldWidth);<span class="comment">// 指定⽂本框⻓度</span></span><br><span class="line">JPasswordField(String text, <span class="keyword">int</span> fieldWidth);<span class="comment">// 指定默认⽂字 + ⽂本框⻓度</span></span><br><span class="line">JPasswordField(Document docModel, String text, <span class="keyword">int</span> fieldWidth);<span class="comment">// 指定⽂本框模式 + 默认⽂字 + ⽂本框⻓度</span></span><br></pre></td></tr></table></figure><ul><li>其他常用方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setEchoChar(<span class="string">&#x27;*&#x27;</span>);<span class="comment">// 设置回显字符</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>); </span><br><span class="line">jf.setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>); </span><br><span class="line"></span><br><span class="line">JLabel label = <span class="keyword">new</span> JLabel(<span class="string">&quot;账号:&quot;</span>);</span><br><span class="line">JTextField text = <span class="keyword">new</span> JTextField(<span class="string">&quot;請輸⼊賬號&quot;</span>,<span class="number">20</span>); </span><br><span class="line">text.setSize(<span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">JLabel label2 = <span class="keyword">new</span> JLabel(<span class="string">&quot;密码:&quot;</span>);</span><br><span class="line">JPasswordField pwd = <span class="keyword">new</span> JPasswordField(<span class="string">&quot;请输⼊密码&quot;</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">jf.add(label);</span><br><span class="line">jf.add(text);</span><br><span class="line">jf.add(label2);</span><br><span class="line">jf.add(pwd);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h3 id="10-文本域组件">10.文本域组件</h3><ul><li>类：<code>JTextArea</code></li><li>构造方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JTextArea();</span><br><span class="line">JTextArea(String text);<span class="comment">// 指定默认⽂字</span></span><br><span class="line">JTextArea(<span class="keyword">int</span> rows, <span class="keyword">int</span> cols);<span class="comment">// 指定⾏ 列</span></span><br><span class="line">JTextArea(Document doc);<span class="comment">// 指定⽂本模型</span></span><br><span class="line">JTextArea(Document doc, String text, <span class="keyword">int</span> rows, <span class="keyword">int</span> cols);<span class="comment">// 指定⽂本模型 +默认⽂字 + ⻓ + 宽</span></span><br></pre></td></tr></table></figure><ul><li>其他常用方法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">setLineWrap();<span class="comment">// 设置⽂本域是否⾃动换⾏</span></span><br><span class="line">getText();<span class="comment">//获取用户输入的内容</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line">jf.setLayout(<span class="keyword">new</span> FlowLayout()); </span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">JTextArea area = <span class="keyword">new</span> JTextArea(<span class="number">12</span>, <span class="number">20</span>);</span><br><span class="line">jf.add(area);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h2 id="5-常用的布局">5.常用的布局</h2><h3 id="1-流布局FlowLayout">1.流布局<code>FlowLayout</code></h3><p>所有组件像流⼀样，⼀个⼀个排放，排满了⼀⾏之后排下⼀⾏。默认情况下，每个组件是剧中排列的，但是也可以设置。</p><ul><li>流布局的构造⽅法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FlowLayout();</span><br><span class="line">FlowLayout(<span class="keyword">int</span> aligment);</span><br><span class="line"><span class="comment">// 设置对⻬⽅式(默认为FlowLayout.CENTER居中) ,我们⼀般改为FlowLayout.LEFT</span></span><br><span class="line">FlowLayout(<span class="keyword">int</span> aligment, <span class="keyword">int</span> horizGap, <span class="keyword">int</span> vertGap);</span><br><span class="line"><span class="comment">// 设置对⻬⽅式 + 上下偏移</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">aligment取值：</span></span><br><span class="line"><span class="comment">FlowLayout.LEFT = 0</span></span><br><span class="line"><span class="comment">FlowLayout.CENTER = 1</span></span><br><span class="line"><span class="comment">FlowLayout.RIGHT = 2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>通过<code>setLayout</code>方法来设置布局： 例如: <code>jf.setLayout(Thew FlowLayout(FlowLayout.LEFT))</code>;</p><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line">jf.setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.LEFT));</span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">JButton button3 = <span class="keyword">new</span> JButton(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">JButton button4 = <span class="keyword">new</span> JButton(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">JButton button5 = <span class="keyword">new</span> JButton(<span class="string">&quot;E&quot;</span>);</span><br><span class="line"></span><br><span class="line">jf.add(button1);</span><br><span class="line">jf.add(button2);</span><br><span class="line">jf.add(button3); </span><br><span class="line">jf.add(button4);</span><br><span class="line">jf.add(button5);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-边界布局BorderLayout">2.边界布局<code>BorderLayout</code></h3><p>边界布局是默认的布局管理⽅式，边界布局将容器分成了东（<code>BorderLayout.NORTH</code>）、南</p><p>（<code>BorderLayout.SOUTH</code>）、西（<code>BorderLayout.EAST</code>）、北（<code>BorderLayout.WEST</code>）、中</p><p>（<code>BorderLayout.CENTER</code>）5个区域。</p><ol><li><p>在Thew的时候指定内容</p></li><li><p>在给jFrame容器 add 组件的时候，指定边界</p></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>);</span><br><span class="line">jf.setLayout(<span class="keyword">new</span> BorderLayout()); </span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>); </span><br><span class="line"></span><br><span class="line">JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;北部&quot;</span>); </span><br><span class="line">JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;东部&quot;</span>); </span><br><span class="line">JButton button3 = <span class="keyword">new</span> JButton(<span class="string">&quot;南部&quot;</span>); </span><br><span class="line">JButton button4 = <span class="keyword">new</span> JButton(<span class="string">&quot;⻄部&quot;</span>);</span><br><span class="line">JButton button5 = <span class="keyword">new</span> JButton(<span class="string">&quot;中⼼&quot;</span>);</span><br><span class="line"></span><br><span class="line">jf.add(button1,BorderLayout.NORTH); </span><br><span class="line">jf.add(button2,BorderLayout.EAST); </span><br><span class="line">jf.add(button3,BorderLayout.SOUTH); </span><br><span class="line">jf.add(button4,BorderLayout.WEST); </span><br><span class="line">jf.add(button5,BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h3 id="3-网格布局管理器">3.网格布局管理器</h3><p>⽹格布局是将容器划分为⽹格；所有的组件都按照⾏和列排列，⽹格的个数由⾏数和列数决定。每个组件会填满空格，改变容器的⼤⼩，组件的⼤⼩也会随之改变。</p><ul><li>构造⽅法：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GridLayout(<span class="keyword">int</span> rows, <span class="keyword">int</span> columns);<span class="comment">// 指定⾏数，列数</span></span><br><span class="line">GridLayout(<span class="keyword">int</span> rows, <span class="keyword">int</span> columns, <span class="keyword">int</span> horizGap, <span class="keyword">int</span> vertGap);<span class="comment">// 指定⾏数 + 列数 + ⽔平间隔 + 垂直间隔</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JFrame jf = <span class="keyword">new</span> JFrame(<span class="string">&quot;Frame&quot;</span>); </span><br><span class="line">jf.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">jf.setBounds(<span class="number">400</span>,<span class="number">300</span>,<span class="number">300</span>,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;B&quot;</span>); </span><br><span class="line">JButton button3 = <span class="keyword">new</span> JButton(<span class="string">&quot;C&quot;</span>); </span><br><span class="line">JButton button4 = <span class="keyword">new</span> JButton(<span class="string">&quot;D&quot;</span>); </span><br><span class="line">JButton button5 = <span class="keyword">new</span> JButton(<span class="string">&quot;E&quot;</span>); </span><br><span class="line">JButton button6 = <span class="keyword">new</span> JButton(<span class="string">&quot;F&quot;</span>); </span><br><span class="line">JButton button7 = <span class="keyword">new</span> JButton(<span class="string">&quot;G&quot;</span>); </span><br><span class="line">JButton button8 = <span class="keyword">new</span> JButton(<span class="string">&quot;H&quot;</span>); </span><br><span class="line">JButton button9 = <span class="keyword">new</span> JButton(<span class="string">&quot;I&quot;</span>); </span><br><span class="line"></span><br><span class="line">jf.add(button1);</span><br><span class="line">jf.add(button2); </span><br><span class="line">jf.add(button3); </span><br><span class="line">jf.add(button4); </span><br><span class="line">jf.add(button5); </span><br><span class="line">jf.add(button6); </span><br><span class="line">jf.add(button7); </span><br><span class="line">jf.add(button8); </span><br><span class="line">jf.add(button9);</span><br><span class="line"></span><br><span class="line">jf.setVisible(<span class="keyword">true</span>); jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br></pre></td></tr></table></figure><h2 id="6-常用的事件监听器">6.常用的事件监听器</h2><h3 id="1-一个时间模型中有三个对象：事件源、事件、监听程序。">1.一个时间模型中有三个对象：事件源、事件、监听程序。</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">事件</th><th style="text-align:center">事件源</th><th style="text-align:center">监听接口</th><th style="text-align:center">方法</th></tr></thead><tbody><tr><td style="text-align:center">动作事件监听器</td><td style="text-align:center"><code>ActionEvent</code></td><td style="text-align:center"><code>JButton,JList,JTextField</code></td><td style="text-align:center"><code>ActionListener</code></td><td style="text-align:center"><code>addActionListener()``removeActionListener()</code></td></tr><tr><td style="text-align:center">焦点事件监听器</td><td style="text-align:center"><code>FocusEvent</code></td><td style="text-align:center"><code>Component</code>及其派生类</td><td style="text-align:center"><code>FocusListener</code></td><td style="text-align:center"><code>addActionListener()``removeActionListener()</code></td></tr></tbody></table><p>使用步骤：</p><ol><li><p>新建⼀个组件（如JButton）。</p></li><li><p>将该组件添加到相应的⾯板（如JFrame）。</p></li><li><p>注册监听器以监听事件源产⽣的事件（如通过ActionListener来响应⽤户点击按钮）。</p></li><li><p>定义处理事件的⽅法（如在ActionListener中的actionPerformed中定义相应⽅法）。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java编程语言 </tag>
            
            <tag> Swing </tag>
            
            <tag> GUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(四):JAVA例外处理</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E4%BE%8B%E5%A4%96%E5%A4%84%E7%90%86/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E4%BE%8B%E5%A4%96%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>所谓错误，是在程序运行过程中发生的异常事件，比如除0溢出、数组越界、文件找不到等，这些事件的发生将阻止程序的正常运行。为了加强程序的鲁棒性（robust），程序设计时，必须考虑到可能发生的异常事件并做出相应的处理。</p><h2 id="1-例外的概念">1.例外的概念</h2><p>在C语言中，通过使用if语句来判断是否出现了错误，同时，调用函数通过被调用函数的返回值感知在被调用函数中产生的错误事件并进行处理。但是，这种错误处理机制会导致不少问题，因为在很多情况下需要知道错误产生的内部细节。通常，用全局变量<code>Errno</code>来存储一个异常事件的类型，这容易导致误用，因为一个<code>Errno</code>的值有可能在被处理前被另外的错误覆盖掉。此外，即使最优美的C语言程序，为了处理异常情况，也常常求助于<code>goto</code>语句。</p><p>以常规方法处理错误：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">openFiles;</span><br><span class="line"><span class="keyword">if</span> (theFilesOpen)</span><br><span class="line">&#123; determine the length of the file;</span><br><span class="line">   <span class="keyword">if</span> (gotTheFileLength)</span><br><span class="line">   &#123;   allocate that much memory;</span><br><span class="line">       <span class="keyword">if</span> (gotEnoughMemory)</span><br><span class="line">       &#123;   read the file into memory;</span><br><span class="line">            <span class="keyword">if</span> (readFailed)  errorCode=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">else</span> errorCode = <span class="number">-2</span>; </span><br><span class="line">      &#125; <span class="keyword">else</span>  errorCode=<span class="number">-3</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> errorCode=<span class="number">-4</span> ;</span><br><span class="line">&#125;<span class="keyword">else</span> errorCode=<span class="number">-5</span>; </span><br></pre></td></tr></table></figure><p>该代码有以下缺点：</p><ul><li><p>大部分精力花在出错处理上了</p></li><li><p>只把能够想到的错误考虑到，对以外的情况无法处理</p></li><li><p>程序可读性差</p></li><li><p>出错返回信息量太少</p></li></ul><p>Java通过面向对象的方法来处理程序错误，在Java中，错误被称为<strong>例外</strong>（Exception）。</p><p>在一个方法的运行过程中，如果发生了例外，则这个方法（或者是Java虚拟机）生成一个<strong>代表该例外的对象</strong>（包含了该例外的详细信息），并把它交给运行时系统，运行时系统寻找相应的代码来处理这一例外。我们把生成例外对象并把它提交给运行时系统的过程称为<strong>抛弃</strong>(throw)一个例外。</p><p>运行时系统在方法的调用栈中查找，从生成例外的方法开始进行回朔，直到找到包含相应例外处理的方法为止，这一个过程称为<strong>捕获</strong>(catch)一个例外。</p><p>用例外的形式处理错误：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123; <span class="keyword">try</span></span><br><span class="line">  &#123;  openTheFile;</span><br><span class="line">     determine its size;</span><br><span class="line">     allocate that much memory;</span><br><span class="line">     read-File;</span><br><span class="line">     closeTheFile;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span>(fileopenFailed)&#123; dosomething; &#125;</span><br><span class="line">  <span class="keyword">catch</span>(sizeDetermineFailed)&#123; dosomething; &#125;</span><br><span class="line">  <span class="keyword">catch</span>(memoryAllocateFailed)&#123; dosomething; &#125;</span><br><span class="line">  <span class="keyword">catch</span>(readFailed)&#123; dosomething; &#125;</span><br><span class="line">  <span class="keyword">catch</span>(fileCloseFailed)&#123; dosomething; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和传统的方法比较，例外的优点包括：</p><ol><li><p>把错误代码从业务处理代码中分离出</p></li><li><p>把错误传播给调用堆栈</p></li><li><p>按错误类型和错误差别分组</p></li><li><p>系统提供了对于一些无法预测错误的捕获和处理</p></li><li><p>克服了传统方法的错误信息有限难题</p></li></ol><h2 id="2-例外的分类">2.例外的分类</h2><p>一个例外是由一个对象来代表的,所有的例外都直接或间接地继承自<code>Throwable</code>类。</p><p>在Java类库的每个类包中都定义了例外类，这些例外类分成两大类：<code>Error</code>类及<code>Exception</code>类，后者是Java程序中需要大量处理的。</p><p>除了Java类库所定义的例外类之外，用户也可以通过继承已有的例外类来定义自己的例外类，并在程序中使用（利用throw产生，catch捕捉）。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gqwq110l0aj30cf07odfs.jpg" alt="例外的分类"></p><ul><li><p><code>Error</code>：由Java虚拟机生成并抛出，包括动态链接失败、虚拟机错误等，Java程序<strong>不做处理</strong>。</p></li><li><p><code>Runtime Exception</code>：Java虚拟机在运行时生成的例外，如被0除等系统错误、数组下标超范围等，其产生比较频繁，处理麻烦，对程序可读性和运行效率影响太大。因此由系统检测, 用户可不做处理，系统将它们交给缺省的异常处理程序（当然，必要时，用户可对其处理）。</p></li><li><p><code>Exception</code>：一般程序中可预知的问题，其产生的例外可能会带来意想不到的结果，因此Java编译器要求Java程序必须捕获或声明所有的非运行时异常。</p></li></ul><h2 id="3-捕获例外">3.捕获例外</h2><p>Java的例外处理是通过3个关键词来实现的：<code>try-catch-finally</code>。用try来执行一段程序，如果出现例外，系统抛出（throws）一个例外，可以通过它的类型来捕捉（catch）并处理它，或最后（finally）由缺省处理器来处理。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">   <span class="comment">//接受监视的程序块,在此区域内发生</span></span><br><span class="line">   <span class="comment">//的异常,由catch中指定的程序处理;</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(要处理的异常种类和标识符)&#123;  <span class="comment">//处理异常;</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(要处理的异常种类和标识符)&#123;  <span class="comment">//处理异常;</span></span><br><span class="line">&#125;</span><br><span class="line">…</span><br><span class="line"><span class="keyword">finally</span>&#123;<span class="comment">//最终处理;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="1-try语句：">1.<code>try</code>语句：</h3><p>捕获例外的第一步就是用<code>try &#123;…&#125;</code>语句指定了一段代码，该段代码就是一次捕获并处理例外的范围。在执行过程中，该段代码可能会产生并抛弃一个或多个例外，因此，它后面的<code>catch</code>语句进行捕获时也要做相应的处理。</p><h3 id="2-catch语句">2.<code>catch</code>语句</h3><p>每个try语句通常伴随一个或多个catch语句，用于捕获try代码块所产生的例外并做相应的处理。 catch语句有一个形式参数，用于指明其所能捕获得<strong>例外类型</strong>，运行时系统通过参数值把被抛弃的例外对象传递给catch语句。</p><p>程序设计中要根据具体的情况来选择catch语句的例外处理类型，一般应该<strong>按照try代码块中例外可能产生的顺序及其真正类型进行捕获和处理</strong>，尽量避免选择最一般的类型作为catch语句中指定要捕获的类型。</p><p>可以用一个catch语句处理多个例外类型，这时它的例外类型应该是这多个例外类型的父类，但这种方式使得在程序中不能确切判断例外的具体类型。</p><p>如下代码异常的捕获顺序就有待调整。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">   </span>&#123;  <span class="keyword">try</span></span><br><span class="line">       &#123;   FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;test1.txt&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> b;</span><br><span class="line">            <span class="keyword">while</span>( (b=fis.read())!=-<span class="number">1</span> )   </span><br><span class="line">                   System.out.print(b); </span><br><span class="line">            fis.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(FileNotFoundException e)&#123;</span><br><span class="line">            …</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            …</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">catch(IOException e)&#123;</span></span><br><span class="line"><span class="comment">    …</span></span><br><span class="line"><span class="comment">&#125;catch(FileNotFoundException e)&#123;</span></span><br><span class="line"><span class="comment">    …</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">**</span></span><br></pre></td></tr></table></figure><h3 id="3-finally语句">3.<code>finally</code>语句</h3><p>捕获例外的最后一步是通过<code>finally</code>语句为例外处理提供一个统一的出口，使得在控制流程转到程序的其他部分以前，能够对程序的状态作统一的管理。</p><p>无论<code>try</code>所指定的程序块中抛弃或不抛弃例外，也无论catch语句的例外类型是否与所抛弃的例外的类型一致，<strong><code>finally</code>所指定的代码都要被执行</strong>，它提供了统一的出口。</p><p>通常在<code>finally</code>语句中可以<strong>进行资源的清除工作</strong>，如关闭打开的文件等。</p><p><code>finally</code>在文件处理时非常有用，如下格式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//对文件进行处理的程序;</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">    <span class="comment">//对文件异常进行处理;</span></span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">   <span class="comment">//不论是否发生异常，都关闭文件;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常见的例外有：</p><ul><li><p><code>ArithmeticException</code></p></li><li><p><code>ArrayIndexOutOfBandsException</code></p></li><li><p><code>ArrayStoreException</code></p></li><li><p><code>IOException</code></p></li><li><p><code>FileNotFoundException</code></p></li><li><p><code>NullPointerException</code></p></li><li><p><code>MalformedURLException</code></p></li><li><p><code>NumberFormatException</code></p></li><li><p><code>OutOfMemoryException</code></p></li></ul><p>在使用能够产生异常的方法而没有捕获和处理，程序将不能通过编译。</p><h2 id="4-声明例外">4.声明例外</h2><p>如果在一个方法中生成了例外，但是该方法并不处理它产生的例外，而是沿着调用层次向上传递，由调用它的方法来处理这些例外，叫<strong>声明例外</strong>。</p><p>通常的情况是在该方法中并不确切知道该如何对这些例外进行处理，比如<code>FileNotFoundException</code>类例外，它由<code>FileInputStream</code>的构造方法产生，但在其构造方法中并不清楚如何处理它，是终止程序的执行还是新生成一个文件，这需要由调用它的方法来处理。</p><h3 id="1-声明例外的方法">1.声明例外的方法</h3><p>声明例外的方法是在产生异常的方法名后面加上要抛出(throws)的例外的列表：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">retType <span class="title">methodName</span><span class="params">([paramlist])</span> <span class="keyword">throws</span> exceptionList</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如类<code>FileInputStream</code>中的<code>read()</code>方法是这样定义的：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123; … &#125;</span><br></pre></td></tr></table></figure><p>throws子句中可以同时指明多个例外，说明该方法将<strong>不对这些例外进行处理</strong>，而是声明抛弃它们。需要强调的是：对于非运行时例外，程序中必须要作处理，或者捕获，或者声明抛弃；而对于运行时例外，程序中则可不处理。</p><h2 id="5-例外抛出">5.例外抛出</h2><p>声明抛弃例外首先必须生成例外。前面所提到的例外或者是由Java虚拟机生成，或者是由Java类库中的某些类生成。事实上，我们在程序中也可以生成自己的例外对象，使得例外可以<strong>不是出错产生，而是人为地抛出</strong>。</p><p>不论那种方式，抛出例外都是通过throw语句实现：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ThrowableObject();</span><br><span class="line">ArithmeticException e = <span class="keyword">new</span> ArithmeticException();</span><br><span class="line"><span class="keyword">throw</span> e;</span><br></pre></td></tr></table></figure><p>注意：抛出的例外必须是<code>Throwable</code>或其子类的实例。</p><h2 id="6-创建自己的例外">6.创建自己的例外</h2><p>当我们在设计自己的类包时，应尽最大的努力为用户提供最好的服务，并且希望用户不要滥用我们所提供的方法，当程序出现某些异常事件时，我们希望程序足够健壮以从程序中恢复，这时就需要用到例外。在选择例外类型时，可以使用Java类库中已经定义好的类，也可以自己定义例外类。自定义例外类不是由Java系统监测到的例外（如数组下标越界，被0除等），而是由用户自己定义的例外。</p><p>自定义例外同样要用<code>try-catch-finally</code>捕获，但必须由用户自己抛出（<code>throw new MyException</code>）。</p><p>例外是一个类，自定义例外必须继承自<code>Throwable</code>或<code>Exception</code>类，建议用<code>Exception</code>类。一般不把自定义例外作为<code>Error</code>的子类，因为<code>Error</code>通常被用来表示系统内部的严重故障。</p><p>当自定义例外是从<code>RuntimeException</code>及其子类继承而来时，该自定义例外是<strong>运行时例外</strong>，程序中可以不捕获并处理它。</p><p>当自定义例外是从<code>Throwable</code>、<code>Exception</code>及其其他子类继承而来时，该自定义例外是<strong>编译时例外</strong>，也即程序中必须捕获并处理它。</p><p>自定义例外的形式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    …</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ol><li>计算两个数之和，当任意一个数超出范围时，抛出自己的例外。</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NumberRangeException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">NumberRangeException</span><span class="params">(String msg)</span></span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">           <span class="keyword">super</span>(msg);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">CalcAnswer</span><span class="params">(String str1, String str2)</span> <span class="keyword">throws</span> NumberRangeException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> int1, int2;</span><br><span class="line">     <span class="keyword">int</span> answer = -<span class="number">1</span>;</span><br><span class="line">     <span class="keyword">try</span></span><br><span class="line">     &#123;</span><br><span class="line">          int1 = Integer.parseInt(str1);</span><br><span class="line">          int2 = Integer.parseInt(str2);</span><br><span class="line">          <span class="keyword">if</span>( (int1 &lt; <span class="number">10</span>) || (int1 &gt; <span class="number">20</span>) || (int2 &lt; <span class="number">10</span>) || (int2 &gt; <span class="number">20</span>) )</span><br><span class="line">          &#123;</span><br><span class="line">                NumberRangeException e = <span class="keyword">new</span> NumberRangeException</span><br><span class="line">                    (<span class="string">&quot;Numbers not within the specified range.&quot;</span>);</span><br><span class="line">                <span class="keyword">throw</span> e;</span><br><span class="line">          &#125;</span><br><span class="line">          answer = int1 + int2;</span><br><span class="line">     &#125;<span class="keyword">catch</span> (NumberFormatException e)&#123;</span><br><span class="line">          System.out.println( e.toString());</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getAnswer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    String answerStr;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">int</span> answer = CalcAnswer(<span class="string">&quot;12&quot;</span>, <span class="string">&quot;5&quot;</span>);</span><br><span class="line">         answerStr = String.valueOf(answer);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (NumberRangeException e)&#123;</span><br><span class="line">         answerStr = e.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(answerStr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在定义银行类时，若取钱数大于余额则作为异常处理(<code>InsufficientFundsException</code>)。</li></ol><ul><li>思路<ul><li>产生例外的条件是余额少于取额，因此是否抛出例外要先判断该条件。</li><li>确定产生例外的方法，应该在取钱方法<code>withdrawal</code>中产生例外<code>InsufficientFundsException</code> 。</li><li>处理例外安排在调用<code>withdrawal</code>的时候，因此<code>withdrawal</code>方法要声明例外，由上级方法捕获并处理。</li><li>要定义好自己的异例外。</li></ul></li><li>代码</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bank</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> balance;  <span class="comment">//余额</span></span><br><span class="line">    Bank(<span class="keyword">int</span> initdeposit)&#123; balance=initdeposit;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deposite</span><span class="params">(<span class="keyword">double</span> dAmount)</span>   <span class="comment">//存钱</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(dAmount&gt;<span class="number">0.0</span>)  balance += dAmount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">withdrawal</span><span class="params">(<span class="keyword">double</span> dAmount)</span> <span class="keyword">throws</span> InsufficientFundsException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         <span class="keyword">if</span>( balance&lt;dAmout )&#123;</span><br><span class="line">         String str = <span class="string">&quot;The balance&quot;</span> + getbalance()</span><br><span class="line">    +<span class="string">&quot;The withdrawal was&quot;</span>+dAmount;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> InsufficientFundsException(str);</span><br><span class="line">         &#125;</span><br><span class="line">         balance = balance-dAmount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getbalance</span><span class="params">()</span></span>&#123;   <span class="comment">//获取余额</span></span><br><span class="line">  <span class="keyword">return</span> balance;  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsufficientFundsException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    InsufficientFundsException(String str)</span><br><span class="line">     &#123; <span class="keyword">super</span>(str);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         <span class="keyword">try</span>&#123;</span><br><span class="line">             Bank ba = <span class="keyword">new</span> Bank(<span class="number">50</span>);</span><br><span class="line">             ba.withdrawal(<span class="number">100</span>);</span><br><span class="line">             System.out.println(<span class="string">&quot;Withdrawal successful!&quot;</span>);</span><br><span class="line">         &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">             System.out.println(e.toString());&#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 异常处理 </tag>
            
            <tag> Java编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(三):JAVA的输入输出流</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<p>大部分程序都需要输入/输出处理，比如从键盘读取数据、向屏幕中输出数据、从文件中读取或者写入数据、在一个网络连接上进行数据读写。在Java中，把这些不同类型的输入、输出源抽象为流（Stream），而其中输入或者输出的数据则称为数据流（Data Stream），用统一的接口来表示，从而使程序设计更加简单明了。</p><span id="more"></span><h2 id="1-I-O概述">1.I/O概述</h2><p>流一般分为输入流（Input Stream)和输出流（Output Stream）两类，但这种划分不是绝对的。在Java开发中，主要是由包<code>java.io</code>提供一系列的类和接口来实现输入/输出处理。标准输入/输出处理则是由包<code>java.lang</code>中提供的类来处理的，但这些类又是从包<code>java.io</code>中的类继承而来的。</p><p>在JDK1.1之前，<code>java.io</code>包中的流只有普通的字节流（以byte为基本处理单位的流），这种流对于以16位的Unicode吗表示的字符流处理不是很方便。从JDK1.1开始，<code>java.io</code>包中加入了专门用于字符流处理的类（以<code>Reader</code>和<code>Writer</code>为基础派生的一系列类）。</p><p>另外，为了使对象的状态方便永久的保存下来，JDK1.1以后的<code>java.io</code>包提供了以字节流为基础的用于对象的永久化保存状态机制（通过实现<code>ObjectInput</code>和<code>ObjectOutput</code>接口）。</p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gqw6f4cw46j30n40nowfz.jpg" alt="IO流类关系" style="zoom:67%;" /><h2 id="2-字节流">2.字节流</h2><h3 id="1-基类">1.基类</h3><p>Java中每一种字节流的功能依赖于基本类<code>InputStream</code>和<code>OutputStream</code>，它们是抽象类，不能直接使用。</p><h4 id="1-输入流（InputStream）">1.输入流（<code>InputStream</code>）</h4><ul><li>常见方法：<ul><li><code>read()</code>从流中读入数据</li><li><code>skip()</code>跳过流中若干数据</li><li><code>available()</code>返回流中的可用字节数</li><li><code>mark()</code>在流中标记一个位置</li><li><code>reset()</code>返回标记过得位置</li><li><code>markSupport()</code>是否支持标记和复位操作</li><li><code>close()</code>关闭流</li></ul></li><li><code>read()</code>方法的使用：<ul><li><code>int read()</code>：从输入流中读取一个字节，形成0~255之间的整数并返回（是一个抽象方法）</li><li><code>int read(byte b[])</code>：读多个字节到数组中，填满整个数组，返回读到的字节个数</li><li><code>int read(byte b[],int off,int len)</code>：从输入流中读取长度为len的数据，写入数组b中从索引off开始的位置，并返回读到的字节数</li><li>对于这三种方法，若返回-1，则表明流结束。</li></ul></li></ul><h4 id="2-输出流（OutputStream）">2.输出流（<code>OutputStream</code>）</h4><ul><li>常见方法：<ul><li><code>write(int b)</code>：将一个整数输出到流中（只输出低位字节，抽象方法）</li><li><code>write(byte b[])</code>：将字节数组中的数据输出到流中</li><li><code>write(byte b[],int off,int len)</code>：将数组b中从off指定位置开始，长度为len的数据输出到流中</li><li><code>flush()</code>：刷空输出流，并将缓存区中的数据强行送出</li><li><code>close()</code>：刷空并关闭输出流</li></ul></li></ul><h3 id="2-文件流">2.文件流</h3><p>在<code>java.io</code>包中所提供的文件操作类包括：</p><ul><li><code>File</code>：描述本地文件系统中的文件或目录</li><li><code>FileDescriptor</code>：描述本地文件系统中的文件或目录</li><li><code>FilenameFilter</code>：接口，主要用于实现文件名查找模式的匹配</li><li><code>FileInputStream</code>：用于读取本地文件系统中的文件</li><li><code>FileOutputStream</code>：用于写入本地文件系统中的文件</li><li><code>RandomAccessFile</code>：提供本地文件系统中的文件的随机访问</li></ul><p>使用文件类<code>File</code>可以获取文件的各种信息。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File f=<span class="keyword">new</span> File(<span class="string">&quot;data\\test.txt&quot;</span>);<span class="comment">//构造一个File类对象</span></span><br><span class="line">f.getName();<span class="comment">//返回文件名   test.txt</span></span><br><span class="line">f.getParent();<span class="comment">//返回文件所在目录名   data</span></span><br><span class="line">f.getPath();<span class="comment">//返回文件路径  data\temp.dat</span></span><br><span class="line">f.getAbsolutePath();<span class="comment">//返回绝对路径  …\data\temp.dat</span></span><br><span class="line">f.exists();<span class="comment">//文件是否存在</span></span><br><span class="line">f.canWrite(); f.canRead();<span class="comment">//文件是否可写、读</span></span><br><span class="line">f.isFile(); f.isDirectory();<span class="comment">//是否为文件或目录</span></span><br><span class="line">f.lastModified(); f.length(); f.delete();</span><br><span class="line"><span class="comment">//文件的最后修改日期、长度；删除文件</span></span><br><span class="line">f.mkdir();<span class="comment">//创建一个目录</span></span><br><span class="line">f.list();<span class="comment">//列出目录下所有的文件</span></span><br></pre></td></tr></table></figure><h3 id="3-文件输入输出流">3.文件输入输出流</h3><p>当使用<code>FileInputStream</code>打开输入文件时，若要打开的文件不存在，则会产生例外<code>FileNotFoundException</code>，这是一个非运行时例外，<strong>必须捕获或声明抛弃</strong>；<code>FileOutputStream</code>类用来打开一个输出文件，若要打开的文件不存在，则会<strong>创建一个新的文件</strong>，否则原文件的内容会被新写入的内容所<strong>覆盖</strong>。在进行文件的读/写操作时，会产生非运行时例外<code>IOException</code>，必须<strong>捕获或声明抛弃</strong>（其它的输入/输出流处理时也同样需要进行输入/输出例外处理）。</p><p>文件输入/输出流对象的创建格式如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File f1 = <span class="keyword">new</span> File(“file1.txt”);</span><br><span class="line">File f2 = <span class="keyword">new</span> File(“file2.txt”);</span><br><span class="line">FileInputStream in=<span class="keyword">new</span> FileInputStream(f1);</span><br><span class="line">FileOutputStream out1 =<span class="keyword">new</span> FileOutputStream(f2);</span><br><span class="line">FileOutputStream out2 = <span class="keyword">new</span> FileOutputStream(“file3.txt”);<span class="comment">//实参可以为String类也可以为File类</span></span><br></pre></td></tr></table></figure><p>下面是一个逐字节实现文件拷贝的代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filestream</span></span></span><br><span class="line"><span class="class"></span>&#123;  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;   <span class="keyword">try</span></span><br><span class="line">        &#123;   File inFile=<span class="keyword">new</span> File(<span class="string">&quot;file1.txt&quot;</span>);</span><br><span class="line">             File outFile=<span class="keyword">new</span> File(<span class="string">&quot;file2.txt&quot;</span>);</span><br><span class="line">             FileInputStream fis=<span class="keyword">new</span> FileInputStream(inFile);</span><br><span class="line">             FileOutputStream fos=<span class="keyword">new</span>  FileOutputStream(outFile);</span><br><span class="line">       <span class="keyword">int</span> c;</span><br><span class="line">             <span class="keyword">while</span>((c=fis.read())!=-<span class="number">1</span>)  fos.write(c);</span><br><span class="line">             fis.close();</span><br><span class="line">             fos.close();</span><br><span class="line">    &#125;<span class="keyword">catch</span>(FileNotFoundException e) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;FileStreamsTest: &quot;</span>+e);</span><br><span class="line">    &#125;<span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">       System.err.println(<span class="string">&quot;FileStreamsTest: &quot;</span>+e);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-随机访问流">4.随机访问流</h3><p>它们的实例都是<strong>顺序访问流</strong>，即只能进行顺序读/写。而类<code>RandomAccessFile</code>则允许对文件内容<strong>同时完成读和写</strong>操作，它<strong>直接继承</strong><code>Object</code>，并且同时实现了接口<code>DataInput</code>和<code>DataOutput</code>，提供了支持随机文件操作的方法：</p><ul><li><p><code>readXXX()</code>或<code>writeXXX()</code>：</p><ul><li>如<code>ReadInt()</code>,<code>ReadLine()</code>,<code>WriteChar()</code>,<code>WriteDouble()</code>等。</li></ul></li><li><p><code>int skipBytes(int n)</code>：将指针向下移动若干字节</p></li><li><p><code>length()</code>：返回文件长度</p></li><li><p><code>long getFilePointer()</code>：返回指针当前位置</p></li><li><p><code>void seek(long pos)</code>：将指针调到所需位置</p><p>在生成一个随机文件对象时，除了么指明文件对象和文件名之外，还需要指明访问文件的模式。</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(“file.txt”);</span><br><span class="line"><span class="keyword">new</span> RandomAccessFile(f, “r”);<span class="comment">//只读模式</span></span><br><span class="line"><span class="keyword">new</span> RandomAccessFile(f, “rw”);<span class="comment">//读写</span></span><br><span class="line"><span class="keyword">new</span> RandomAccessFile(“file1.txt”, “r”);</span><br><span class="line"><span class="keyword">new</span> RandomAccessFile(“file2.txt”, “rw”);</span><br></pre></td></tr></table></figure><p>下面是一个使用<code>RandomAccessFile</code>类实现文件写入并倒序读出的程序：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> data_arr[]=&#123;<span class="number">12</span>,<span class="number">31</span>,<span class="number">56</span>,<span class="number">23</span>,<span class="number">27</span>,<span class="number">1</span>,<span class="number">43</span>,<span class="number">65</span>,<span class="number">4</span>,<span class="number">99</span>&#125;;</span><br><span class="line">            RandomAccessFile randf=<span class="keyword">new</span> RandomAccessFile(<span class="string">&quot;temp.dat&quot;</span>,<span class="string">&quot;rw&quot;</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;data_arr.length;i++)</span><br><span class="line">                    randf.writeInt(data_arr[i]);<span class="comment">//顺序写入</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=data_arr.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">                &#123;   randf.seek(i*<span class="number">4</span>);<span class="comment">//整型数占4字节</span></span><br><span class="line">                    System.out.print(randf.readInt()+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                randf.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-过滤流">5.过滤流</h3><p><code>java.io</code>中提供类<code>FilterInputStream</code>和<code>FilterOutputStream</code>分别对其他输入/输出流进行<strong>特殊处理</strong>，它们在读/写数据的同时可以对数据进行特殊处理。另外还提供了同步机制，使得某一时刻只有一个线程可以访问一个输入/输出流。</p><p>类<code>FilterInputStream</code>和<code>FilterOutputStream</code>分别重写了父类<code>InputStream</code>和<code>OutputStream</code>的所有方法，同时，它们的子类也应该重写它们的方法以满足特定的需要。</p><p>要使用过滤流，首先必须把它连接到某个输入/输出流上，通常在构造方法的参数中<strong>指定所要连接的流</strong>：</p><ul><li><p><code>FilterInputStream(InputStream in);</code></p></li><li><p><code>FilterOutputStream(OutputStream out);</code></p></li></ul><p>下面将介绍过滤流的两个重要子类：缓冲流和数据流</p><h4 id="1-缓冲流">1.缓冲流</h4><p>类<code>BufferedInputStream</code>和<code>BufferedOutputStream</code>实现了带缓冲的过滤流，它提供了缓冲机制，把任意的I/O流“捆绑”到缓冲流上，可以提供该I/O流的读取效率。</p><p>在初始化时，除了要指定所连接的I/O流之外，还可以<strong>指定缓冲区的大小</strong>。缺省时实用<strong>32字节大小</strong>的缓冲区；最优的缓冲区大小常依赖于主机操作系统、可使用的内存空间以及机器的配置等；一般缓冲区的大小为内存页或磁盘块等的整数倍，如8912字节或更小。</p><p>下面是将缓冲流与文件流相接的代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FileInputStream in = <span class="keyword">new</span> FileInputStream(“file1.txt”);</span><br><span class="line">FileOutputStream out = <span class="keyword">new</span> FileOutputStream (“file2.txt”);</span><br><span class="line">BufferedInputStream bin = <span class="keyword">new</span> BufferedInputStream(in,<span class="number">256</span>) </span><br><span class="line">BufferedOutputStream bout = <span class="keyword">new</span> BufferedOutputStream(out,<span class="number">256</span>);</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">byte</span> bArray[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">256</span>];</span><br><span class="line">len = bin.read(bArray);  <span class="comment">//len中得到是长度, bArray中得到的是数据</span></span><br><span class="line">bout.write(bArray);  <span class="comment">//将bArray中得到的数据写入输出缓冲流</span></span><br></pre></td></tr></table></figure><p>对于<code>BufferedOutputStream</code>只有缓冲区满时，才会将数据真正送到输出流，但可以使用<code>flush()</code>方法人为地将尚未填满的缓冲区中的数据送出。</p><h4 id="2-数据流">2.数据流</h4><p>数据流类<code>DataInputStream</code>和<code>DataOutputStream</code>的处理对象除了是字节或字节数组外，还可以实现对文件的不同数据类型的读写。它们分别实现了接口<code>DataInput</code>和<code>DataOutput</code>（与<code>RandomAccessFile</code>类似），提供了一种较为高级的数据输入输出方式：除了可处理字节和字节数组外，还可以处理<code>int</code>、<code>float</code>、<code>boolean</code>等基本数据类型，这些数据在文件中的表示方式和它们在内存中的一样，无须转换，如<code>read()</code>, <code>readInt()</code>, <code>readByte()</code> …；<code>write()</code>, <code>writeChar()</code>,<code> writeBoolean()</code>…。此外，还可以用<code>readLine()</code>方法读取一行信息。</p><p>数据输入/输出流可以是一个已经建立好的输入/输出流对象,例如网络的连结,文件等。数据流可通过如下方式建立：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FileInputStream fis = <span class="keyword">new</span>  FileInputStream(<span class="string">&quot;file1.txt&quot;</span>);</span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span>  FileOutputStream(<span class="string">&quot;file2.txt&quot;</span>);</span><br><span class="line">DataInputStream dis = <span class="keyword">new</span> DataInputStream(fis);</span><br><span class="line">DataOutputStream dos = <span class="keyword">new</span> DataOutputStream(fos);</span><br></pre></td></tr></table></figure><p>下列程序使用数据输出流对文件进行写入操作，并使用数据输出流对文件进行读取操作，并打印：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;a.txt&quot;</span>);</span><br><span class="line">        DataOutputStream dos = <span class="keyword">new</span> DataOutputStream(fos);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dos.writeBoolean(<span class="keyword">true</span>);</span><br><span class="line">            dos.writeByte((<span class="keyword">byte</span>) <span class="number">123</span>);</span><br><span class="line">            dos.writeChar(<span class="string">&#x27;J&#x27;</span>);</span><br><span class="line">            dos.writeDouble(<span class="number">3.141592654</span>);</span><br><span class="line">            dos.writeFloat(<span class="number">2.7182f</span>);</span><br><span class="line">            dos.writeInt(<span class="number">1234567890</span>);</span><br><span class="line">            dos.writeLong(<span class="number">998877665544332211L</span>);</span><br><span class="line">            dos.writeShort((<span class="keyword">short</span>) <span class="number">11223</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            dos.close();</span><br><span class="line">        &#125;</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;a.txt&quot;</span>);</span><br><span class="line">        DataInputStream dis = <span class="keyword">new</span> DataInputStream(fis);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readBoolean());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readByte());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readChar());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readDouble());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readFloat());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readInt());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readLong());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t &quot;</span> + dis.readShort());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            dis.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一个利用方法<code>readLine()</code>计算一个输入流中的字符数和行数的代码片段</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        DataInputStream data = <span class="keyword">new</span> DataInputStream(in);</span><br><span class="line">        String currentLine;</span><br><span class="line">        <span class="keyword">int</span> lineCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> charCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((currentLine = data.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ++lineCount;</span><br><span class="line">            charCount += currentLine.length();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (charCount / (<span class="keyword">float</span>) lineCount);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-其他过滤流">3.其他过滤流</h4><ul><li><p><code>LineNumberInputStream</code>：主要用于对文本文件的处理，提供了行号控制功能。</p></li><li><p><code>PushBackInputStream</code>：在编译程序的词法分析阶段，经常要超前读入一个字节以界定当前词的属性，然后再将该字节退回（因为下面的处理可能还会用到该字节）。<code> PushBackInputStream</code>就提供了这样的能力，它提供了一个方法将刚刚读入的字节退回到输入流中去。</p></li><li><p><code>PrintStream</code>：其作用是将Java语言中的不同类型的数据以字符表示形式输出到相应的输出流中去。</p></li></ul><h3 id="6-标准流">6.标准流</h3><p>语言包<code>java.lang</code>中的System类管理标准输入/输出流和错误流。</p><ul><li><p><code>System.in</code>，从<code>InputStream</code>中继承而来，用于从标准输入设备中获取输入数据(通常是键盘)。</p></li><li><p><code>System.out</code>，从<code>PrintStream</code>中继承而来，把输出送到缺省的显示设备(通常是显示器)。</p></li><li><p><code>System.err</code>，也是从<code>PrintStream</code>中继承而来，把错误信息送到缺省的显示设备(通常是显示器)。</p><p>每当main方法被执行时，就<strong>自动生成</strong>上述三个对象。下面是利用标准输入输出流使用键盘输入并在显示器上打印输入内容的代码片段。</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadFromKB</span></span></span><br><span class="line"><span class="class"></span>&#123;   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;  <span class="keyword">try</span></span><br><span class="line">       &#123;   <span class="keyword">byte</span> bArray[]=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">128</span>];</span><br><span class="line">String str;</span><br><span class="line">System.out.println(<span class="string">&quot;Enter Using Keyborad:&quot;</span>);</span><br><span class="line">System.in.read(bArray);</span><br><span class="line">str = <span class="keyword">new</span> String(bArray, <span class="number">0</span>);</span><br><span class="line">System.out.print(<span class="string">&quot;You entered:&quot;</span>);</span><br><span class="line">System.out.println(str);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">catch</span>(IOException ioe)</span><br><span class="line">       &#123;System.out.println(ioe.toString());   &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标准输出流和标准错误流有以下区别：</p><ul><li><p><code>System.out.println</code>能重定向到别的输出流，比如输出到txt文本中；而<code>System.err.println</code>只能在屏幕上实现打印，即便重定向也一样。</p></li><li><p><code>System.out.println</code>有可能在缓存中，由OS和JVM决定是否输出，而<code>System.err.println</code>它将每一次操作的结果都输出来。</p></li><li><p>在eclipse控制台输出时，<code>System.err.println</code>输出的内容是红色的。</p></li><li><p>调试程序的时候尽量使用err来输出，这样可以很清晰的定位到任何一个步骤，而out输出的位置顺序很可能和你期望的不一样。</p></li></ul><h3 id="7-对象流">7.对象流</h3><ul><li><p>对象的持续性（persistence）：能够记录自己的状态以便将来再生的能力,叫对象的持续性。</p></li><li><p>对象的串行化（Serialization）：对象通过写出描述自己状态的的数值来记录自己的过程叫串行化。串行化的主要任务是写出对象实例变量的数值，如果变量是另一个对象的引用，则引用的对象也要串行化。这个过程是递归的。</p></li><li><p>对象流：能够输入输出对象的流称为对象流。</p></li></ul><p>可以将对象<strong>串行化后通过对象输入输出流写入文件或传送到其它地方</strong>。</p><p>在Java中，允许可串行化的对象再通过对象流进行传输。只有实现<code>Serializable</code>接口的类才能被串行化， <code>Serializable</code>接口中<strong>没有任何方法</strong>，当一个类声明实现<code>Serializable</code>接口时，只是表明该类加入对象串行化协议。例如：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span></span><br><span class="line"><span class="class"></span>&#123; <span class="keyword">int</span> id;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">  String department;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age, String department)</span></span></span><br><span class="line"><span class="function">  </span>&#123;  <span class="keyword">this</span>.id=id;</span><br><span class="line">     <span class="keyword">this</span>.name=name;</span><br><span class="line">     <span class="keyword">this</span>.age=age;</span><br><span class="line">     <span class="keyword">this</span>.department =departmernt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要串行化一个对象，必须与一定的对象输出/输入流联系起来，通过对象输出流将对象状态保存下来(将对象保存到文件中，或者通过网络传送到其他地方) ，再通过对象输入流将对象状态恢复。</p><p>类<code>ObjectOutputStream</code>和<code>ObjectInputStream</code>分别继承了接口<code>ObjectOutput</code>和<code>ObjectInput</code>，将数据流功能扩展到可以读写对象，前者用<code>writeObject()</code>方法可以直接将对象保存到输出流中，而后者用<code>readObject()</code>方法可以直接从输入流中读取一个对象。</p><p>如下代码片段，使用对象输出流将对象信息存储在文件中:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Objectser</span></span></span><br><span class="line"><span class="class"></span>&#123;  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span></span><br><span class="line"><span class="function">   </span>&#123;  Student stu=<span class="keyword">new</span> Student(<span class="number">981036</span>, <span class="string">&quot;Li Ming&quot;</span>, <span class="number">16</span>, <span class="string">&quot;CSD&quot;</span>);</span><br><span class="line">       <span class="keyword">try</span></span><br><span class="line">       &#123;  FileOutputStream fo = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;data.ser&quot;</span>);</span><br><span class="line">           ObjectOutputStream so = <span class="keyword">new</span> ObjectOutputStream(fo);</span><br><span class="line">           so.writeObject(stu);</span><br><span class="line">           so.close();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">catch</span>(Exception e)</span><br><span class="line">       &#123; System.out.println(e) ;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面代码片段对文件中的信息，使用对象输入流进行读取：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        Student stu = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileInputStream fi = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;data.ser&quot;</span>);</span><br><span class="line">            ObjectInputStream si = <span class="keyword">new</span> ObjectInputStream(fi);</span><br><span class="line">            stu = (Student) si.readObject();</span><br><span class="line">            si.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;ID: &quot;</span> + stu.id + <span class="string">&quot;name:&quot;</span> +</span><br><span class="line">                stu.name + <span class="string">&quot;age:&quot;</span> + stu.age + <span class="string">&quot;dept.:&quot;</span> + stu.department);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定制对象的串行化：在类定义中重写readObject()和WriteObject()方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id, age;</span><br><span class="line">    String name, department;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age, String department)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.department = department;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(ObjectOutputStream out)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        out.writeInt(id);</span><br><span class="line">        <span class="comment">//省略</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        id = in.readInt();</span><br><span class="line"><span class="comment">//省略</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对象串行化有如下使用限制：</p><ul><li><p>串行化<strong>只能保存对象的非静态成员变量</strong>，而不能保存任何成员方法和静态成员变量，并且保存的<strong>只是变量的值</strong>，对于变量的任何修饰符都不能保存。</p></li><li><p>对于某些类型的对象，其状态是<strong>瞬时</strong>的，这样的对象是<strong>无法保存其状态</strong>的，如Thread对象或流对象。对于这样的成员变量，必须用<code>transient</code>关键字标明，否则编译器将报错。任何用<code>transient</code>关键字标明的成员变量，都不会被保存。</p></li><li><p>串行化可能涉及将对象存放到磁盘上或在网络上发送数据，这时会产生安全问题。对于一些需要保密的数据，不应保存在永久介质中（或者不应简单地不加处理地保存下来），为了<strong>保证安全</strong>，应在这些变量前加上<code>transient</code>关键字。</p></li></ul><h3 id="8-管道流">8.管道流</h3><p>管道用来把一个程序、线程和代码块的输出连接到另一个程序、线程和代码块的输入。<code>java.io</code>中提供了类<code>PipedInputStream</code>和<code>PipedOutputStream</code>作为管道的输入/输出流。</p><p>管道输入流作为一个通信管道的接收端，管道输出流则作为发送端。管道流必须是输入输出并用，即在使用管道前，两者必须进行连接。</p><p>管道输入/输出流可以用两种方式进行连接：</p><ul><li><p>在构造方法中进行连接：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PipedInputStream(PipedOutputStream pos);</span><br><span class="line">PipedOutputStream(PipedInputStream pis);</span><br></pre></td></tr></table></figure></li><li><p>通过各自的connect()方法连接</p><ul><li>在类<code>PipedInputStream</code>中，<code>connect(PipedOutputStream pos)</code>；</li><li>在类<code>PipedOutputStream</code>中，<code>connect(PipedInputStream pis)</code>；</li></ul></li></ul><p>下面是一个应用实例：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span> aByteData1 = <span class="number">123</span>, aByteData2 = <span class="number">111</span>;</span><br><span class="line">        PipedInputStream pis = <span class="keyword">new</span> PipedInputStream();</span><br><span class="line">        PipedOutputStream pos = <span class="keyword">new</span> PipedOutputStream(pis);</span><br><span class="line">        System.out.println(<span class="string">&quot;PipedInputStream&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pos.write(aByteData1);</span><br><span class="line">            pos.write(aByteData2);</span><br><span class="line">            System.out.println((<span class="keyword">byte</span>) pis.read());</span><br><span class="line">            System.out.println((<span class="keyword">byte</span>) pis.read());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            pis.close();</span><br><span class="line">            pos.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">PipedInputStream</span></span><br><span class="line"><span class="comment">123</span></span><br><span class="line"><span class="comment">111</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h3 id="9-内存读写流">9.内存读写流</h3><p>为了支持内存的读/写，<code>java.io</code>中提供了类<code>ByteArrayInputStream</code>、 <code>ByteArrayOutputStream</code>和<code>StringBufferInputStream</code>。</p><ul><li><p><code>ByteArrayInputStream</code>可以从指定的字节数组中读取数据。</p></li><li><p><code>ByteArrayOutputStream</code>中提供了缓冲区可以存放数据（缓冲区大小可以在构造方法中设定，缺省为32），可以用<code>write()</code>方法向其中写入数据，然后用<code>toByteArray()</code>方法将缓冲区中的有效字节写到字节数组中去。</p></li><li><p><code>StringBufferInputStream</code>与<code>ByteArrayInputStream</code>相类似，不同点在于它是从字符缓冲区<code>StringBuffer</code>中读取16位的Unicode数据，而不是8位的字节数据。</p></li></ul><h3 id="10-顺序输入流">10.顺序输入流</h3><p><code>java.io</code>中提供了类<code>SequenceInputStream</code>，使应用程序可以将几个输入流顺序连接起来，让程序员看起来就像是一个比较长的流一样。顺序输入流提供了将多个不同的输入流统一为一个输入流的功能，这使得程序可能变得更加简洁。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FileInputStream f1,f2;</span><br><span class="line">String s;</span><br><span class="line">f1 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;file1.txt&quot;</span>);</span><br><span class="line">f2 = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;file2.txt&quot;</span>);</span><br><span class="line">SequenceInputStream fs = <span class="keyword">new</span> SequenceInputStream(f1, f2);<span class="comment">//将几个输入流顺序连接起来</span></span><br><span class="line">DataInputStream ds = <span class="keyword">new</span> DataInputStream(fs);</span><br><span class="line"><span class="keyword">while</span>( (s = ds.readLine()) != <span class="keyword">null</span> )</span><br><span class="line">   System.out.println(s);</span><br></pre></td></tr></table></figure><h2 id="3-字符流">3.字符流</h2><p>在JDK1.1之前，<code>java.io</code>包中的流只有普通的字节流，对于以16位的Unicode码表示的字符流处理很不方便.从JDK1.1开始，<code>java.io</code>包中加入了专门用于字符流处理的类，它们是以<code>Reader</code>和<code>Writer</code>为基础派生的一系列类。<code>Reader</code>和<code>Writer</code>是抽象类，只提供了一系列用于字符流处理的接口。它们的方法与类<code>InputStream</code>和<code>OutputStream</code>类似，只不过其中的参数换成字符或字符数组。</p><h3 id="1-字符输入输出流">1.字符输入输出流</h3><p><code>InputStreamReader</code>和<code>OutputStreamWriter</code>是<code>java.io</code>包中用于处理字符流的最基本的类，用来在字节流和字符流之间作为中介。使用这两者进行字符处理时，在构造方法中应指定一定的平台规范，以便把以字节方式表示的流转换为特定平台上的字符表示。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">InputStreamReader(InputStream in);            <span class="comment">//缺省规范</span></span><br><span class="line">InputStreamReader(InputStream in, String enc);    <span class="comment">//指定规范enc</span></span><br><span class="line">OutputStreamWriter(OutputStream out);          <span class="comment">//缺省规范</span></span><br><span class="line">OutputStreamWriter(OutputStream out, String enc);  <span class="comment">//指定规范enc</span></span><br></pre></td></tr></table></figure><p>如果读取的字符流不是来自本地时（比如网上某处与本地编码方式不同的机器），那么在构造字符输入流时就不能简单地使用缺省编码规范，而应该指定一种统一的编码规范“ISO 8859_1”，这是一种映射到ASCII码的编码方式，能够在不同平台之间正确转换字符。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">InputStreamReader ir = <span class="keyword">new</span> InputStreamReader( is, <span class="string">&quot;8859_1&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-缓冲流">2.缓冲流</h3><p>同样的，为了提高字符流处理的效率，<code>java.io</code>中也提供了缓冲流<code>BufferedReader</code>和<code>BufferedWriter</code>。其构造方法与<code>BufferedInputStream</code>和<code>BufferedOutputStream</code>相类似。另外，除了<code>read()</code>和<code>write()</code>方法外，它还提供了整行字符处理方法：</p><ul><li><p><code>public String readLine()</code>： <code>BufferedReader</code>的方法，从输入流中读取一行字符，行结束标志为‘\n’、‘\r’或两者一起。</p></li><li><p><code>public void newLine()</code>： <code>BufferedWriter</code>的方法，向输出流中写入一个行结束标志，它不是简单的换行符‘\n’或‘\r’，而是系统定义的行隔离标志（line separator）。</p></li></ul><p>例如如下代码片段实现文件的按行读取。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileTOUnicode</span></span></span><br><span class="line"><span class="class"></span>&#123;  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">   </span>&#123;    <span class="keyword">try</span></span><br><span class="line">        &#123;    FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;file1.txt&quot;</span>);</span><br><span class="line">             InputStreamReader dis = <span class="keyword">new</span> InputStreamReader(fis);</span><br><span class="line">             BufferedReader reader = <span class="keyword">new</span> BufferedReader(dis);</span><br><span class="line">             String s;</span><br><span class="line">             <span class="keyword">while</span>( (s = reader.readLine()) != <span class="keyword">null</span> )  </span><br><span class="line">             &#123; System.out.println(<span class="string">&quot;read: &quot;</span>+s); &#125;</span><br><span class="line">             dis.close();</span><br><span class="line">         &#125;<span class="keyword">catch</span>(IOException e)</span><br><span class="line">         &#123;  System.out.println(e); &#125;</span><br><span class="line">   &#125;<span class="comment">//main()</span></span><br><span class="line">&#125;<span class="comment">//class</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java编程语言 </tag>
            
            <tag> IO流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(二):面向对象</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基本概念">1.基本概念</h2><h3 id="1-对象（Object）">1.对象（Object）</h3><ul><li><p>状态：对象本身的信息（变量）</p></li><li><p>行为：实现对象的访问/对象的操作（方法）</p></li><li><p>对象是变量和相关方法的集合，对象是具有责任的实体</p></li><li><p><strong>程序是对象的集合</strong>，对象之间通过发送消息完成任务</p></li></ul><h3 id="2-类（Class">2.类（Class)</h3><ul><li>类是一种原型，一种抽象，一种共性，一个模板</li><li>对象与类的关系：<ul><li>对象是具体的，是其所属的类的某个具体实例</li><li>必须先有类才能有对象</li><li>类是静态的，对象是动态的</li></ul></li></ul><h3 id="3-封装性">3.封装性</h3><ul><li>对象的某些状态被保护/隐藏，其他对象无法直接访问</li><li>其他对象只能通过该类的方法（接口，interface）访问被保护的状态</li><li>好处：<ul><li>模块化：每个对象的源文件相互独立的，可以被不同的程序调用</li><li>信息隐藏：被定义为公共属性的数据和方法才能被其他对象访问，否则不能访问</li></ul></li></ul><h3 id="4-继承性">4.继承性</h3><ul><li>目的：实现代码复用</li><li>Java中所有类的基类：<code>Object类</code></li><li>子类继承基类所有的数据成员和方法，同时子类可以有新的数据成员和方法</li><li>Java中仅支持<strong>单一继承</strong>，同时采取接口变相实现多重继承</li></ul><h3 id="5-多态性">5.多态性</h3><ol><li>方法的重写（overwrite）<ul><li>多个子类从同一个基类继承（extends）而来</li><li>每个子类都重写了父类的某个方法</li><li>被重写的方法在不同的子类中具有不同形式</li></ul></li><li>方法的重载（override）<ul><li>同名方法拥有不同的形参列表</li></ul></li></ol><h2 id="2-类的定义">2.类的定义</h2><h3 id="1-类的定义格式">1.类的定义格式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[类的修饰符] <span class="class"><span class="keyword">class</span> 类名 [<span class="keyword">extends</span> 基类名] [<span class="keyword">implements</span> 接口名]</span>&#123;</span><br><span class="line">    [变量修饰符] 类型 成员变量<span class="number">1</span>;</span><br><span class="line">    [变量修饰符] 类型 成员变量<span class="number">2</span>;</span><br><span class="line">    ...</span><br><span class="line">    [方法修饰符] 类型 成员方法<span class="number">1</span>([形参列表])&#123;</span><br><span class="line">        方法体;</span><br><span class="line">    &#125;</span><br><span class="line">    [方法修饰符] 类型 成员方法<span class="number">1</span>([形参列表])&#123;</span><br><span class="line">        方法体;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-类的描述">2.类的描述</h3><h4 id="1-类的修饰符">1.类的修饰符</h4><ul><li><code>public</code>：公共类，可以被其他任何类使用</li><li><code>无默认修饰符</code>：仅能被同一个包内的其他类引用</li><li><code>abstract</code>：抽象类，不能被实例化/创建对象</li><li><code>final</code>：最终类，不能被继承</li></ul><h4 id="2-继承和接口">2.继承和接口</h4><ul><li><code>extends</code>：一个类继承另一个类（仅一个）</li><li><code>implements</code>：一个类实现一些（可以是多个）接口的方法，用以变相实现多继承</li></ul><h4 id="3-包的概念（package）">3.包的概念（package）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.mycompany;<span class="comment">//以根目录开始的文件夹，比如D:\src\org\mycompany</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>源文件的位置在&quot;D:\src\org\mycompany\Test.java&quot;（注意：包的文件层次关系和类名与文件名的关系）</p></li><li><p>编译方法1：在源文件所在文件夹下编译</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt;&gt; <span class="built_in">cd</span>:D:\src\org\mycompany</span><br><span class="line">&gt;&gt; javac Test.java</span><br></pre></td></tr></table></figure></li><li><p>编译方法2：在根目录下编译</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt;&gt; javac org\mycompany\Test.java</span><br></pre></td></tr></table></figure></li><li><p>生成的字节码文件与源文件在同一文件夹下</p></li><li><p>运行class的方法：在根目录下运行，注意运行时不加文件后缀</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&gt;&gt; cd:D:\src\</span><br><span class="line">&gt;&gt; java org.mycompany.Test </span><br></pre></td></tr></table></figure></li><li><p>作用：</p><ul><li>防止同名类发生冲突</li><li>形成结构层次便于管理</li></ul></li><li><p>引用格式:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.mycompany.Test </span><br></pre></td></tr></table></figure></li></ul><h3 id="3-类成员：变量和方法">3.类成员：变量和方法</h3><h4 id="1-类成员的定义">1.类成员的定义</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[访问权限修饰符] 类型 变量名;<span class="comment">//只声明</span></span><br><span class="line">[访问权限修饰符] 类型 变量名[=初值];<span class="comment">//声明时初始化</span></span><br><span class="line">[访问权限修饰符] 类型 变量名[=初值],[变量名[=初值]...];<span class="comment">//同时初始化多个变量</span></span><br></pre></td></tr></table></figure><h4 id="2-成员方法的定义">2.成员方法的定义</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[访问权限修饰符] 类型 方法名([形参列表])[<span class="keyword">throws</span> 异常名]&#123;</span><br><span class="line">    方法体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-类成员和成员方法的访问修饰符">3.类成员和成员方法的访问修饰符</h4><ul><li><p>公共权限<code>public</code>：能被<strong>所有类</strong>访问</p></li><li><p>默认权限<code>不写</code>：可以被<strong>同一个包</strong>中的所有类访问</p></li><li><p>私有权限<code>private</code>：只能被<strong>该类自身</strong>访问</p></li><li><p>保护权限<code>protected</code>：只能被<strong>同一包中的类、该类的子类</strong>访问</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">访问权限符</th><th style="text-align:center">类本身</th><th style="text-align:center">同一包内</th><th style="text-align:center">子类</th><th style="text-align:center">其他类</th></tr></thead><tbody><tr><td style="text-align:center">公共</td><td style="text-align:center"><code>public</code></td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">保护</td><td style="text-align:center"><code>protected</code></td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">默认</td><td style="text-align:center">无修饰符</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">私有</td><td style="text-align:center"><code>private</code></td><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr></tbody></table></li></ul><h4 id="4-类成员和成员方法的非访问修饰符">4.类成员和成员方法的非访问修饰符</h4><ul><li>静态成员/方法 <code>static</code><ul><li>独立于类的对象，可以直接通过类进行访问</li><li>静态方法只能访问静态变量或方法，反之不亦然</li><li>静态变量/方法每个类只有一份</li></ul></li><li>最终成员/方法<code>final</code><ul><li>对于成员变量：程序执行过程中不允许被改变</li><li>对于成员方法：不允许被子类重写</li></ul></li><li>抽象方法<code>abstract</code><ul><li>只有方法说明，没有方法体</li></ul></li><li>本地方法<code>native</code><ul><li>其他语言实现的方法功能</li></ul></li><li>同步方法<code>synchronized</code><ul><li>多线程程序中的协调和同步</li></ul></li></ul><h4 id="5-方法的传参">5.方法的传参</h4><ul><li>区分实参和形参</li><li>实参列表必须与形参列表一致，否则先考虑类型转化，如果不能转化则出错</li><li>Java仅支持值传递</li></ul><h4 id="6-变量的作用域">6. 变量的作用域</h4><ul><li>成员变量：从类声明开始到类结束为止</li><li>局部变量：<ul><li>方法中：声明处开始，方法结束为止</li><li>复合语句中：声明处开始，复合语句结束为止</li><li>形参的作用域：方法内</li></ul></li><li>局部变量与成员变量重名时，后者被屏蔽</li></ul><h4 id="7-方法的重载（overload）">7.方法的重载（overload）</h4><ul><li>一个类中方法名相同，但形参列表不同</li></ul><h4 id="8-方法的重写（override）">8.方法的重写（override）</h4><ul><li>子类重写父类的方法</li></ul><h4 id="9-构造方法">9.构造方法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Apple a = <span class="keyword">new</span> Apple();<span class="comment">//声明并创建对象</span></span><br><span class="line">Apple b;<span class="comment">//声明对象</span></span><br><span class="line">b = <span class="keyword">new</span> Apple();<span class="comment">//创建对象</span></span><br></pre></td></tr></table></figure><ol><li>对象创建通过构造方法来实现，其可以在对象被创建时，做一些初始化工作</li><li>构造方法的名字与类名相同</li><li>构造方法无返回值</li><li>构造方法可以 有多个，但形参列表不同（方法重载）</li></ol><h4 id="10-默认构造方法">10.默认构造方法</h4><ul><li>如果没有编写任何构造方法则系统会自动创建一个无参数的构造方法</li><li>如果类存在有参数的构造方法，则系统不会自动创建默认构造方法</li></ul><h3 id="4-抽象类">4.抽象类</h3><ul><li>抽象类中含有抽象方法</li><li>抽象方法：仅仅写出来了方法的修饰符、名字、参数、返回类型等，没有函数体</li><li>只有抽象类中抽象方法</li><li>抽象类不能被实体化，即创建对象</li><li>抽象类可以具有普通方法</li><li>子类继承抽象类时必须重写抽象方法，否则仍为抽象类</li><li>多态与抽象类：<ul><li>父类无法预期其各个子类的某一行为的具体表现形式</li><li>抽象类为子类规定了同一的形式</li></ul></li></ul><h2 id="3-对象">3.对象</h2><h3 id="1-引用格式">1.引用格式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">对象名.变量名;</span><br><span class="line">对象名.方法名(实参列表);</span><br></pre></td></tr></table></figure><h3 id="2-对象的释放-垃圾回收">2.对象的释放/垃圾回收</h3><ul><li>将对象从内存中清除（释放内存空间）</li><li>Java会周期性地释放不再被引用的对象，自动完成</li><li>手动完成<code>System.gc()</code></li></ul><h3 id="3-对象的使用">3.对象的使用</h3><ul><li><p>关键词<code>this</code></p><ul><li>指向当前对象</li><li>应用1：增强程序的可读性</li><li>应用2：对同一个对象的执行多次方法调用</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Leaf</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="function">Leaf <span class="title">increment</span><span class="params">()</span></span>&#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>应用3：在一个构造方法中调用另一个构造方法</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flower</span></span>&#123;</span><br><span class="line">   String name;</span><br><span class="line">   <span class="keyword">int</span> price;</span><br><span class="line">   Flower()&#123;</span><br><span class="line">       <span class="keyword">this</span>(<span class="string">&quot;rose&quot;</span>,<span class="number">10</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   Flower(String s, <span class="keyword">int</span> i)&#123;</span><br><span class="line">       name = s;</span><br><span class="line">       price = i;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>判断对象是否为空</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(Obj == <span class="keyword">null</span>)</span><br></pre></td></tr></table></figure></li><li><p>判断对象的真实类型</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(Obj <span class="keyword">instanceof</span> Class)</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-类的继承和多态">4.类的继承和多态</h2><h3 id="1-类的继承">1.类的继承</h3><ul><li>基本内容<ul><li>子类可以调用父类的方法和变量，子类可以增加父类中没有的方法和变量</li><li>子类继承父类中的构造方法</li><li>类成员访问修饰符与继承的关系</li></ul></li><li>调用子类的构造方法时，下调用其父类的构造方法<ul><li>显示调用</li><li>隐式调用<ul><li>没有写调用父类构造方法的代码</li><li>实际是调用父类的无参数构造方法</li></ul></li></ul></li><li><code>super</code>可以用来引用父类中的（被覆盖的）方法、（被隐藏的）变量及构造方法<ul><li>注意：子类显示调用父类构造方法时，<code>super</code>必须是子类构造方法的第一条</li></ul></li><li>方法重写：<ul><li>重写：子类和父类的方法名、返回类型和参数均相同（方法可见性可以不同）</li><li><code>final/private</code>方法不能重写</li><li>子类中重写的方法<strong>不能降低</strong>父类中被重写方法的可见性</li><li>子类中重写的方法产生的异常<strong>不能超过</strong>父类中被重写的方法</li></ul></li><li>子类对象与父类对象<ul><li>子类对象可以被视为其父类的一个对象</li><li>父类对象不能当作某一个子类对象</li></ul></li></ul><h2 id="5-接口和包">5.接口和包</h2><ul><li><p>接口是对<code>abstract</code>类的进一步扩展</p></li><li><p>接口中的方法都是未实现的（类似于抽象方法），目的是在实现接口的类之间建立一种协议</p></li><li><p>接口中的变量都是常量</p></li><li><p>定义方法：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">public</span>] <span class="class"><span class="keyword">interface</span> 接口名</span>&#123;</span><br><span class="line">    成员变量;</span><br><span class="line">    成员方法;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>一个类符合某个或一组接口，利用<code>implements</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名 <span class="keyword">implements</span> 接口1,接口2,...</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>接口名修饰</p><ul><li><code>public</code>：无任何访问限制</li><li>无修饰：仅限于本包中</li></ul></li><li><p>接口变量默认都是<code>public static final</code></p></li><li><p>接口方法：</p><ul><li>无修饰</li><li>但在实现接口方法的类中，修饰符为<code>public</code></li></ul></li><li><p>接口的继承<code>extends</code></p><ul><li>用以将多个接口合并为一个新接口</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java编程语言 </tag>
            
            <tag> 面向对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记(一):基础语法</title>
      <link href="/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/07/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JAVA%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="1-一个简单的语言实例">1. 一个简单的语言实例</h2><h3 id="1-实例：">1. 实例：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstSample</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;We will not use &#x27;Hello world!&#x27;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-说明：">2. 说明：</h3><ol><li><p>Java<strong>区分大小写</strong></p></li><li><p>关键字<code>public</code>称为访问修饰符：控制程序其他部分对这段代码的访问级别；</p></li><li><p><code>class</code>后常跟类名，命名规则为：</p><ol><li>必须以字母开头；</li><li>由字母和数字组成；</li><li>长度上基本没有限制；</li><li>不能使用 java 的保留字；</li></ol></li><li><p>类的标准命名规范（<strong>大驼峰命名法</strong>）：以大写字母开头的名字。如果名字中含有多个单词，则每个单词的首字母必须大写；</p></li><li><p>源代码的文件名必须与公共类的名字相同，并以<code>.java</code>作为扩展名；</p></li><li><p>Java 中的每个句子必须以<code>;</code>结束；</p></li><li><p>Java中的方法调用格式为：</p></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">object.method(parameters);</span><br></pre></td></tr></table></figure><ol start="8"><li><code>System.out</code>类的<code>println()</code>方法为打印内容并换行，而<code>print()</code>方法只打印内容。</li></ol><h2 id="2-注释">2. 注释</h2><ol><li>行注释界定符为<code>//</code>;</li><li>区块注释界定符为<code>/*</code>和<code>*/</code>的组合；（Java中<code>/* </code> <code>*/</code>注释不可以嵌套）</li></ol><h2 id="3-数据类型">3. 数据类型</h2><h3 id="1-分类：">1. 分类：</h3><ol><li><p>8种基本数据类型（primitive type）</p><ol><li>整数型：<code>byte</code>、<code>short</code>、<code>int</code>、<code>long </code></li><li>浮点型：<code>float</code>、<code>double</code></li><li>字符型：<code>char</code></li><li>布尔型：<code>boolean</code></li></ol></li><li><p>引用数据类型<br>字符串、数组、类、接口、Lambda</p></li></ol><h3 id="2-整型：">2. 整型：</h3><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">存储空间</th><th style="text-align:center">范围</th></tr></thead><tbody><tr><td style="text-align:center"><code>byte</code></td><td style="text-align:center">1</td><td style="text-align:center">-128 ~ 127</td></tr><tr><td style="text-align:center"><code>short</code></td><td style="text-align:center">2</td><td style="text-align:center">-32768 ~ 32767</td></tr><tr><td style="text-align:center"><code>int</code></td><td style="text-align:center">4</td><td style="text-align:center">-2147483648 ~ 2147483647 （刚过20亿）</td></tr><tr><td style="text-align:center"><code>long</code></td><td style="text-align:center">8</td><td style="text-align:center">-9223373036854775808 ~ 9223373036854775807</td></tr></tbody></table><ul><li>Java中，整型的范围与运行Java代码的机器无关；</li><li>长整型数值需要加上后缀<code>L</code>或<code>l</code>，如<code>400000000000L</code>;</li><li>八进制数加前缀<code>0</code>，二进制数加前缀<code>0B</code>或者<code>0b</code>；</li><li>Java7 后还可以给数字字面量加下划线<code>_</code>，增加可读性；</li><li>注意：Java没有任何无符号（<code>unsigned</code>）形式的<code>long</code>、<code>int</code>、<code>short</code>、<code>byte</code>类型。</li></ul><h3 id="3-浮点类型：">3. 浮点类型：</h3><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">存储空间</th><th style="text-align:center">范围</th></tr></thead><tbody><tr><td style="text-align:center"><code>float</code></td><td style="text-align:center">4</td><td style="text-align:center">6~7位</td></tr><tr><td style="text-align:center"><code>double</code></td><td style="text-align:center">8</td><td style="text-align:center">15位</td></tr></tbody></table><ul><li><code>float</code>类型的数值有一个后缀<code>F</code>或<code>f</code>;</li><li>没有后缀默认为<code>double</code>类型数据，也可在数值后加上<code>D</code>或<code>d</code>；</li><li>三个特殊的浮点数值：POSITIVE_INFINITY, NEGATIVE_INFINITY, NaN；</li><li>浮点数的存储具有一定的偏差，如果不允许偏差，可以使用<code>BigDecimal</code>类。</li></ul><h3 id="4-char类型">4. char类型</h3><ul><li>内存大小：2Byte；</li><li>Unicode转义序列会在解析代码之前进行处理；</li><li><strong>码点</strong>(code point)：指与一个编码表中的某个字符对应的代码值。在Unicode标准中，码点采用十六进制书写，并加上前缀<code>U+</code>；</li><li>Unicode的码点可以分为17个代码平面。第一个代码平面称为<strong>基本多语言平面</strong>（basic multilingual plane），包括码点从U+0000到U+FFFF；其余16个平面的码点从U+10000到U+10FFFF，包括<strong>辅助字符</strong>（supplement character）；</li><li>在基本多语言平面中，每个字符用16位表示，通常称为<strong>代码单元</strong>（code unit）；而辅助字符编码则需要一对连续的代码单元。</li></ul><h3 id="5-boolean类型">5. boolean类型</h3><p>boolean类型有两个值：true和false；</p><h2 id="4-常量与变量">4. 常量与变量</h2><h3 id="1-声明变量：">1. 声明变量：</h3><ul><li>声明形式同C语言</li><li>变量名中可以出现Unicode编码下的大部分字符</li><li>不可以使用保留字做变量名</li><li>对大小写敏感</li><li>建议使用小驼峰法</li></ul><h3 id="2-变量初始化：基本形式同C-；">2. 变量初始化：基本形式同C++；</h3><ul><li>注：如果可以从变量赋值的结果推断出变量的类型，则可以使用如下形式：</li></ul> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="number">12</span>;<span class="comment">//value为int型</span></span><br></pre></td></tr></table></figure><h3 id="3-常量：利用关键字final指示常量。">3. 常量：利用关键字<code>final</code>指示常量。</h3><ul><li>常量名一般全大写；</li><li><strong>类常量</strong>（class constant）：可以在一个类的多个方法中使用。可以使用关键字<code>static final</code>设置，一般位于main方法的外部。</li></ul><h3 id="4-枚举类型：变量的取值只在一个有限的集合内">4. 枚举类型：变量的取值只在一个有限的集合内</h3>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Size</span></span>&#123;SMALL,MEDIUM,LARGE,EXTRA_LARGE&#125;;</span><br><span class="line">Size s = Size.SMALL;</span><br></pre></td></tr></table></figure><h2 id="5-运算符">5. 运算符</h2><h3 id="1-算术运算符：">1. 算术运算符：</h3><p>加：+  减：-  乘：*  除：/  取余：%</p><h3 id="2-数学函数与常量">2. 数学函数与常量</h3><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:center">功能</th><th style="text-align:center">注释</th></tr></thead><tbody><tr><td style="text-align:left"><code>Math.pow(x,a)</code></td><td style="text-align:center">计算x的a次方</td><td style="text-align:center">参数和返回值均为double类型</td></tr><tr><td style="text-align:left"><code>Math.floorMod(m,n)</code></td><td style="text-align:center">计算m%n</td><td style="text-align:center">n为整数的话，此处返回的结果为正余数</td></tr></tbody></table><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center"><code>Math.sin()</code></td><td style="text-align:center">sin()</td></tr><tr><td style="text-align:center"><code>Math.cos()</code></td><td style="text-align:center">cos()</td></tr><tr><td style="text-align:center"><code>Math.tan()</code></td><td style="text-align:center">tan()</td></tr><tr><td style="text-align:center"><code>Math.atan()</code></td><td style="text-align:center">actan()</td></tr><tr><td style="text-align:center"><code>Math.atan2()</code></td><td style="text-align:center">actan()^2</td></tr></tbody></table><table><thead><tr><th>方法</th><th>功能</th></tr></thead><tbody><tr><td><code>Math.exp()</code></td><td>e^()</td></tr><tr><td><code>Math.log()</code></td><td>log()</td></tr><tr><td><code>Math.log10()</code></td><td>log10()</td></tr></tbody></table><table><thead><tr><th>常量</th><th>值</th></tr></thead><tbody><tr><td><code>Math.PI</code></td><td>π</td></tr><tr><td><code>Math.E</code></td><td>e</td></tr></tbody></table><p>Math类提供了一些方法可以对数的溢出进行检验，见<code>API</code>文档。</p><h3 id="3-自动类型转换">3. 自动类型转换</h3><p>符合数据范围从小到大的规则，发生自动类型转换。例如：float --&gt;  double；int --&gt; long；long --&gt; float。</p><h3 id="4-强类型转换">4. 强类型转换</h3><pre><code>  1. 不符合符合数据范围从小到大(见上图虚线)的规则会报错；  2. 特点：代码需要特殊的格式处理，不能自动完成；  3. 格式：</code></pre>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">范围小的类型  变量名<span class="number">1</span> = (范围小的类型) 变量名<span class="number">2</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>注意事项:</p><p>一般不推荐使用强制类型转换，因为可能发生精度损失、数据溢出；<br>2. byte/short/char这三种类型都可以发生数学运算；<br>3. 类型转换不意味着四舍五入,而是直接舍去后面的部分，四舍五入使用<code>Math.round()</code>方法，参数类型为<code>double</code>时返回值类型为<code>long</code>，参数类型为<code>float</code>时返回值类型为<code>int</code>；<br>4. byte/short/char类型若进行了数学运算，则会被首先转化为int类型；<br>5. 不同类型进行计算，会先统一转换为大范围进行计算；</p></li></ol><h3 id="5-结合赋值和运算符">5. 结合赋值和运算符</h3><p><code>+=、-=、*=、/=、%=</code></p><h3 id="6-自增自减运算符">6. 自增自减运算符</h3><p><code>i++,++i,i--,--i</code></p><h3 id="7-关系和boolean运算符">7. 关系和boolean运算符</h3><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">功能</th><th style="text-align:center">符号</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">检测相等性</td><td style="text-align:center">!</td><td style="text-align:center">非</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td><td style="text-align:center">&lt;=</td><td style="text-align:center">小于等于</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于</td><td style="text-align:center">&gt;=</td><td style="text-align:center">大于等于</td></tr><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">与</td><td style="text-align:center">||</td><td style="text-align:center">或</td></tr></tbody></table><h3 id="8-三元运算符">8. 三元运算符</h3>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">codition?expression1:expression2;</span><br></pre></td></tr></table></figure><p>若<code>condition</code>成立，返回<code>expression1</code>，否则返回<code>expression2</code></p><h3 id="9-位运算符">9. 位运算符</h3><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">功能</th><th style="text-align:center">符号</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">&amp;</td><td style="text-align:center">按位与</td><td style="text-align:center">|</td><td style="text-align:center">按位或</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">按位异或</td><td style="text-align:center">~</td><td style="text-align:center">按位取反</td></tr><tr><td style="text-align:center">&lt;&lt;</td><td style="text-align:center">左移</td><td style="text-align:center">&gt;&gt;</td><td style="text-align:center">逻辑右移</td></tr><tr><td style="text-align:center">&gt;&gt;&gt;</td><td style="text-align:center">算术右移</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h2 id="6-字符串">6. 字符串</h2><p>在Java中没有内置的字符串类型，而是在标准Java库中提供了一个预定义类。String是一种引用数据类型，主要有以下常见的几种操作：</p><h3 id="1-字符串长度">1. 字符串长度</h3><p>在Java中，使用方法<code>length</code>求字符串的的长度，例如：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String a = <span class="string">&quot;abcdef&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> len = a.length();<span class="comment">//a为6</span></span><br></pre></td></tr></table></figure><p>​注意<code>length</code>与<code>length()</code>看起来相似，但是前者主要用于求解数组大小，例如：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] a = <span class="keyword">new</span> String&#123;<span class="string">&quot;aa&quot;</span>,<span class="string">&quot;bb&quot;</span>,<span class="string">&quot;cc&quot;</span>,<span class="string">&quot;dd&quot;</span>,<span class="string">&quot;ee&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> Len = a.length;<span class="comment">//a为5</span></span><br></pre></td></tr></table></figure><h3 id="2-子串（substring）">2.子串（substring）</h3><p>​<code>substring</code>方法可以在一个字符串中取其子串，需要两个参数。第一个参数为起始位置，第二个参数为终止位置的下一位。</p><p>​下述代码将创建一个<code>“Hel&quot;</code>字符：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s = <span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line">String subs = s.substring(<span class="number">0</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>同时，可以通过如下方法获取字符串特定位置字符：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">charAt</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="3-拼接">3. 拼接</h3><ol><li>与绝大部分语言类似，Java支持使用<code>+</code>对字符串进行直接拼接，例如：</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String first = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">String second = <span class="string">&quot;World!&quot;</span>;</span><br><span class="line">String a = first + second;<span class="comment">//a为&quot;HelloWorld!&quot;</span></span><br></pre></td></tr></table></figure><pre><code> String类型也可以和其他类型数据进行拼接，优先级与加法运算优先级相同，且计算结果为String类型：</code></pre><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> age = <span class="number">19</span>;</span><br><span class="line">String s = <span class="string">&quot;I&#x27;m &quot;</span>;</span><br><span class="line">String a = s + age;<span class="comment">//a为“I&#x27;m 19&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>若需要进行多个字符串的拼接，可以使用方法<code>join</code>:</li></ol> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String a = String.join(<span class="string">&quot;I&quot;</span>,<span class="string">&quot; &quot;</span>,<span class="string">&quot;can&quot;</span>,<span class="string">&quot; &quot;</span>,<span class="string">&quot;do&quot;</span>,<span class="string">&quot; &quot;</span>,<span class="string">&quot;it&quot;</span>,<span class="string">&quot;.&quot;</span>);</span><br><span class="line"> <span class="comment">//a为&quot;I can do it.&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-不可变字符串">4. 不可变字符串</h3><p>Java 中<strong>不可以直接修改字符串中的字符</strong>，因此称String类对象为不可变字符串.</p><h3 id="5-检测字符串是否相等">5. 检测字符串是否相等</h3><p>可以直接使用<code>equals</code>方法判断两个字符串是否相等，如果相等则返回true，反之，则返回false：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">s.equals(t);<span class="comment">//判断字符串s和t是否相等</span></span><br></pre></td></tr></table></figure><p>​也可直接使用字符串字面量：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello World!&quot;</span>.equals(s);<span class="comment">//判断字符串&quot;Hello World!&quot;和s是否相等</span></span><br></pre></td></tr></table></figure><p>​如果不区分大小写，则可以使用方法<code>equalsIgnoreCase</code>:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello World!&quot;</span>.equalsIgnoreCase(<span class="string">&quot;hello world!&quot;</span>);<span class="comment">//返回true</span></span><br></pre></td></tr></table></figure><p>​注意：与C++不同，Java中一定不可以使用运算符<code>==</code>来检测两个字符串是否相等，这个运算符只能检测两个变量是否代表<strong>相同位置</strong>的字符串。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equalsIgnoreCase</span><span class="params">(String anotherString)</span></span>;<span class="comment">//判断逻辑与equals相同，仅仅在判断内容上不考虑大小写</span></span><br></pre></td></tr></table></figure><h3 id="6-字符串比较">6.字符串比较</h3><p>​使用<code>compareTo</code>方法进行字符串比较，与C++中的<code>strcmp</code>完全类似。以<code>s.compareTo(t)</code>的返回值为例：</p><table><thead><tr><th style="text-align:center"><strong>s &gt;t</strong></th><th style="text-align:center"><strong>正数</strong></th></tr></thead><tbody><tr><td style="text-align:center"><strong>s=t</strong></td><td style="text-align:center"><strong>0</strong></td></tr><tr><td style="text-align:center"><strong>s&lt;t</strong></td><td style="text-align:center"><strong>负数</strong></td></tr></tbody></table><p>以上比较为字典序比较，具体比较规则见<a href="https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E5%BA%8F/7786229?fr=aladdin">百度百科</a>。</p><p>同样有忽略大小写的比较方式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareToIgnoreCase</span><span class="params">(String str)</span>  <span class="comment">//基本功能同上，仅仅在判断时不考虑大小写</span></span></span><br></pre></td></tr></table></figure><p>可以通过下列方法进行字符串前缀(prefix)/后缀(suffix)的判断：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">startsWith</span><span class="params">(String prefix)</span></span>;<span class="comment">//判断字符串是否以一特定的字符串开头</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">startsWith</span><span class="params">(String prefix, <span class="keyword">int</span> toffset)</span></span>; <span class="comment">//从toffset位置开始判断前缀</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">endsWith</span><span class="params">(String suffix)</span></span>;<span class="comment">//判断字符串是否以一特定的字符串头</span></span><br></pre></td></tr></table></figure><h3 id="7-空串和NULL串">7. 空串和NULL串</h3><p>​空串&quot;&quot;是长度为0的字符串，是一个Java对象，表示长度为0的内容为空的字符串，用如下方法判断空串：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(str.length()==<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(str.equals(<span class="string">&quot;&quot;</span>))</span><br></pre></td></tr></table></figure><p>NULL为存放null的String变量，表示目前还没有任何对象与该变量关联，用如下方法检验：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(str==<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p>如果需要同时检验NULL串和空串，则一定要先检验NULL串，因为在NULL串上调用方法会产生错误：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(str==<span class="keyword">null</span> &amp;&amp; str.length()==<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="8-码点与代码单元">8.码点与代码单元</h3><p>​Java字符串由char值序列组成。char数据类型是一个采用utf-16编码表示Unicode码点的代码单元。大多数常用Unicode字符使用1个代码单元就可以表示，而辅助字符需要2个代码单元进行表示。</p><p>​<code>length</code>方法返回采用<code>UTF-16</code>编码表示的给定字符串所需要的<strong>代码单元</strong>数量；<code>codePointCount</code>方法则返回实际的长度，即<strong>码点数量</strong>。如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String a = <span class="string">&quot;Hello\uD835\uDD57&quot;</span>;</span><br><span class="line">System.out.println(a.length());<span class="comment">//代码单元数为7  最后一个字符占2个代码单元，为1个码点</span></span><br><span class="line">System.out.println(a.codePointCount(<span class="number">0</span>,a.length()));<span class="comment">//码点个数为6</span></span><br></pre></td></tr></table></figure><p>​<code>charAt</code>方法将返回传入位置的代码单元；使用<code>offsetBycodePoints</code>和<code>codePointAt</code>将得到得到传入位置的码点，例如：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> sec = a.charAt(<span class="number">2</span>);<span class="comment">//sec为&#x27;e&#x27;</span></span><br><span class="line"><span class="keyword">int</span> index1 = a.offsetByCodePoints(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">int</span> index2 = a.offsetByCodePoints(<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">int</span> cp1 = a.codePointAt(index1);<span class="comment">//cp1为&#x27;e&#x27;所对十进制编码108</span></span><br><span class="line"><span class="keyword">int</span> cp2 = a.codePointAt(index2);<span class="comment">//cp2为&#x27;\uD835\uDD57&#x27;所对十进制编码120152</span></span><br></pre></td></tr></table></figure><p>​因此，逐字符遍历字符串时不能以代码单元为跨度</p><h3 id="9-查询特定字符-字符串的位置">9. 查询特定字符/字符串的位置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//从前往后</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(<span class="keyword">int</span> ch)</span></span>;<span class="comment">//该字符在字符串中第一次出现位置的索引值；否则返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(<span class="keyword">int</span> ch, <span class="keyword">int</span> fromIndex)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String str, <span class="keyword">int</span> fromIndex)</span></span>; </span><br><span class="line"><span class="comment">//从后往前</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(<span class="keyword">int</span> ch)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(<span class="keyword">int</span> ch, <span class="keyword">int</span> fromIndex)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(String str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(String str, <span class="keyword">int</span> fromIndex)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="10-构建字符串">10.构建字符串</h3><p>​有些时候，需要由较短的字符串构建字符串，可以通过如下方式：</p><p>首先，创建一个空的字符串构建器：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br></pre></td></tr></table></figure><p>​当每次需要添加一部分元素时，调用<code>append</code>方法：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">builder.append(ch);</span><br><span class="line">builder.append(str);</span><br></pre></td></tr></table></figure><p>​最后使用<code>toString</code>方法得到一个String对象：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = bulider.toString();</span><br></pre></td></tr></table></figure><p>​<code>API</code>官方文档，click <a href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/StringBuilder.html">here</a>，下为常用例子：</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">名称</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>void</code></td><td style="text-align:center"><code>StringBuilder()</code></td><td style="text-align:center">构造一个空的字符串构建器</td></tr><tr><td style="text-align:center"><code>int</code></td><td style="text-align:center"><code>length()</code></td><td style="text-align:center">返回构建器或缓冲器的代码单元数量</td></tr><tr><td style="text-align:center"><code>StringBuilder</code></td><td style="text-align:center"><code>append(String str)</code></td><td style="text-align:center">追加一个字符串并返回<code>this</code></td></tr><tr><td style="text-align:center"><code>StringBuilder</code></td><td style="text-align:center"><code>append(char c)</code></td><td style="text-align:center">追加一个代码单元并返回<code>this</code></td></tr><tr><td style="text-align:center"><code>StringBuilder</code></td><td style="text-align:center"><code>appendCodePoint(int cp)</code></td><td style="text-align:center">追加一个代码点，并将其转换为一个或两个代码单元并返回<code>this</code></td></tr><tr><td style="text-align:center"><code>void</code></td><td style="text-align:center"><code>setCharAt(int i,char c)</code></td><td style="text-align:center">将第i个代码单元设置为c</td></tr><tr><td style="text-align:center"><code>StringBuilder</code></td><td style="text-align:center"><code>insert(int offset, char c)</code></td><td style="text-align:center">在<code>offset</code>位置插入一个代码单元并返回this</td></tr><tr><td style="text-align:center"><code>StringBuilder</code></td><td style="text-align:center"><code>insert(int offset, String str)</code></td><td style="text-align:center">在<code>offset</code>位置插入一个字符串并返回this</td></tr><tr><td style="text-align:center"><code>StringBuilder</code></td><td style="text-align:center"><code>delete(int startIndex,int endIndex)</code></td><td style="text-align:center">删除偏移量从<code>startIndex</code>到<code>endIndex-1</code>的代码单元并返回this</td></tr><tr><td style="text-align:center"><code>String</code></td><td style="text-align:center"><code>toString()</code></td><td style="text-align:center">返回一个与构建器或缓冲器内容相同的字符串</td></tr></tbody></table><p>单线程推荐使用<code>StringBuilder</code>对象，速度比较快；多线程推荐使用<code>StringBuff</code>，安全性更好。</p><h3 id="11-其他">11.其他</h3><p>可以通过下列方法进行字节长度获取</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String s = <span class="string">&quot;java语言&quot;</span>;</span><br><span class="line"><span class="keyword">char</span>[] c = s.toCharArray();<span class="comment">//将String字符串转化为字符数组Char[]</span></span><br><span class="line">System.out.println(c.length);</span><br><span class="line"><span class="keyword">byte</span>[] b = s.getBytes();<span class="comment">//以默认编码获得字节长度</span></span><br><span class="line">System.out.println(b.length);<span class="comment">//8，汉字2字节</span></span><br><span class="line">b = s.getBytes(<span class="string">&quot;ISO8859-1&quot;</span>);<span class="comment">//以ISO8859-1编码获得字节长度</span></span><br><span class="line">System.out.println(b.length);<span class="comment">//6</span></span><br></pre></td></tr></table></figure><p>可以通过下列方法拼接字符串或字符串替换</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">concat</span><span class="params">(String str)</span></span>;<span class="comment">//连接字符串 </span></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">* &quot;cares&quot;.concat(&quot;s&quot;)</span></span><br><span class="line"><span class="comment">* returns &quot;caress&quot;</span></span><br><span class="line"><span class="comment">* &quot;to&quot;.concat(&quot;get&quot;).concat(&quot;her&quot;)</span></span><br><span class="line"><span class="comment">* returns &quot;together&quot; </span></span><br><span class="line"><span class="comment">***/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">replace</span><span class="params">(<span class="keyword">char</span> oldChar, <span class="keyword">char</span> newChar)</span></span>;<span class="comment">//在字符串中进行字符替换    </span></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">* &quot;mesquite in your cellar&quot;.replace(&#x27;e&#x27;, &#x27;o&#x27;)</span></span><br><span class="line"><span class="comment">* returns &quot;mosquito in your collar&quot;</span></span><br><span class="line"><span class="comment">* &quot;JonL&quot;.replace(&#x27;q&#x27;, &#x27;x&#x27;)</span></span><br><span class="line"><span class="comment">* returns &quot;JonL&quot; (no change) </span></span><br><span class="line"><span class="comment">***/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">trim</span><span class="params">()</span></span>; <span class="comment">//将字符串头尾的空格字符删除</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toLowerCase</span><span class="params">()</span></span>;  <span class="comment">//字符串中字符转为小写</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toUpperCase</span><span class="params">()</span></span>;  <span class="comment">//字符串中字符转为大写</span></span><br></pre></td></tr></table></figure><p>下列方法可以实现字符串分割：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringTokenizer</span><span class="params">(String str)</span></span>;<span class="comment">//按默认的分隔符将字符串分割– 四个字符“ \t\n\r\f”</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringTokenizer</span><span class="params">(String str, String delim)</span></span>;<span class="comment">//按指定的分割符将字符串分割</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasMoreTokens</span><span class="params">()</span></span>;<span class="comment">//判断是否有token</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">nextToken</span><span class="params">()</span></span>;<span class="comment">//得到下一个token</span></span><br></pre></td></tr></table></figure><p>String类常用方法，见官方文档click <a href="https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html">here</a>。</p><h2 id="7-输入和输出">7. 输入和输出</h2><h3 id="1-读取输入">1.读取输入</h3><p>​想要通过控制台输入，首先需要引入<code>java.util </code>包，构建一个<code>Scanner</code>对象，并与“标准输入流”<code>System.in</code>关联</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br></pre></td></tr></table></figure><p>​之后便可以使用Scanner类的各种方法实现输入操作了。例如，使用<code>nextLine</code>方法输入一行：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.print(<span class="string">&quot;What is your name?&quot;</span>);</span><br><span class="line">String name = in.nextLine();</span><br></pre></td></tr></table></figure><p>​如果想只读取一个单词（以空白符作为分隔符），则调用：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String firstName = in.next();</span><br></pre></td></tr></table></figure><p>​如果想读取一个整数，则调用方法<code>nextInt</code>方法：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.print(<span class="string">&quot;How old are you?&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> age = in.nextInt();</span><br></pre></td></tr></table></figure><p>​读取整数，则调用<code>nextDouble</code>方法。</p><p>​以下为<code>Scanner</code>对象常用方法：</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">名称</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">Scanner</td><td style="text-align:center"><code>Scanner(InputStream in)</code></td><td style="text-align:center">用给定的输入流创建一个Scanner对象</td></tr><tr><td style="text-align:center">String</td><td style="text-align:center"><code>nextLine()</code></td><td style="text-align:center">读取输入的下一行内容</td></tr><tr><td style="text-align:center">String</td><td style="text-align:center"><code>next()</code></td><td style="text-align:center">读取输入的下一个单词（以空白符作为分隔符）</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center"><code>nextInt()</code></td><td style="text-align:center">读取并转换下一个表示整数的字符序列</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center"><code>nextDouble()</code></td><td style="text-align:center">读取并转换下一个表示浮点数的字符序列</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center"><code>hasNext()</code></td><td style="text-align:center">检测输入中是否有其他单词</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center"><code>hasNextInt</code></td><td style="text-align:center">检测是否有表示整数的下一个字符序列</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center"><code>hasNextDouble</code></td><td style="text-align:center">检测是否有表示浮点数的下一个字符序列</td></tr></tbody></table><p>​因为输入是可见的，所以Scanner类不适合从控制台读取密码。因此引入了<code>Console</code>类来实现该目的，代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;You are &quot;</span>+ name + <span class="string">&quot;. You are &quot;</span> + age + <span class="string">&quot; now.&quot;</span>);</span><br><span class="line">Console cons = System.console();</span><br><span class="line">String username = cons.readLine(<span class="string">&quot;User name:&quot;</span>);</span><br><span class="line"><span class="keyword">char</span>[] passwd = cons.readPassword(<span class="string">&quot;Password:&quot;</span>);</span><br></pre></td></tr></table></figure><p>​为了安全起见，返回的密码存放在一维字符数组中，而不是字符串中。注意，在IDEA中使用Console出现报<code>NullPointerException</code>错误，IDEA没有主控制台console，<code>System.console()</code>为null。</p><h3 id="2-格式化输出">2.格式化输出</h3><table><thead><tr><th style="text-align:center">指令</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>System.out.println(x)</code></td><td style="text-align:center">将x输出到控制台上并换行</td></tr><tr><td style="text-align:center"><code>System.out.print(x)</code></td><td style="text-align:center">将x输出到控制台上</td></tr><tr><td style="text-align:center"><code>System.out.printf()</code></td><td style="text-align:center">格式控制输出，类似于C语言的<code>printf()</code>函数</td></tr></tbody></table><p><code>String.format()</code>可以类似于<code>System.out.printf()</code>进行格式化控制，返回一个字符串而不打印输出。</p><h3 id="3-文件的输入与输出">3 .文件的输入与输出</h3><p>​想要对文件进行读取，就需要用File对象构造一个Scanner对象，如下所示：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner in = <span class="keyword">new</span> Scanner(Paths.get(<span class="string">&quot;myfile.txt&quot;</span>),<span class="string">&quot;UTF-8&quot;</span>); </span><br></pre></td></tr></table></figure><p>​注意，如果路径中有’\‘,需要给之前格外加一个‘\\’，之后利用前面所述Scanner的方法进行操作即可。</p><p>​要想写入文件，需要构造一个<code>PrintWriter</code>对象。在构造器中，只需要提供文件名：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PrintWriter out = <span class="keyword">new</span> PrintWriter(<span class="string">&quot;myfile.txt&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure><p>​如果文件不存在在，则创建文件。之后像输出到<code>System.out</code>一样使用<code>print</code>、<code>println</code>、<code>printf</code>命令。</p><p>​如果用一个不存在的文件构造一个Scanner，或者用一个不能被创建的文件名构造一个<code>PrintWriter</code>，则会发生异常。Java编译器认为这些异常比“被0除”更严重。因此需要在<code>main(String[] args)</code>后面加上<code>throws IOException</code>。</p><h2 id="8-常用工具类">8. 常用工具类</h2><h3 id="1-java-lang-Object类">1.java.lang.Object类</h3><ul><li>是Java中所有类的基类</li><li>子类可以对Object类的方法进行重写</li></ul><h3 id="2-java-lang-System类">2.java.lang.System类</h3><ul><li>静态变量<ul><li><code>public static final InputStream in</code>（标准输入流）</li><li><code>public static final PrintStream out</code>（标准输出流）</li><li><code>public static final PrintStream err</code>（标准错误输出流）</li></ul></li><li>静态方法<ul><li><code>public static void exit(int status)</code>（程序退出）</li><li><code>public static viod gc()</code>（内存释放）</li><li><code>public static long currentTimeMillis()</code>（获取当前时间，ms）</li></ul></li></ul><h3 id="3-基本数据类型的包装类">3.基本数据类型的包装类</h3><ul><li><p>基本数据类型: byte, short, int, long, float, double, boolean, char</p></li><li><p>对应的包装类: Byte, Short, Integer, Long, Float, Double, Boolean, Character</p></li><li><p>作用：</p><ul><li>包装类对象中包含有一个对应基本类型的值</li><li>提供有基本类型和字符串(String)之间的转换函数</li><li>定义有一些常数和方法</li></ul></li><li><p>常数定义</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">名称</th><th style="text-align:center">大小</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">largestByte</td><td style="text-align:center">Byte.MAX_VALUE;  //127</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">largestShort</td><td style="text-align:center">Short.MAX_VALUE; //32767</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">largestInteger</td><td style="text-align:center">Integer.MAX_VALUE;//2147483647</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">largestLong</td><td style="text-align:center">Long.MAX_VALUE;//9223372036854775807</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">largestFloat</td><td style="text-align:center">Float.MAX_VALUE;<a href="//3.40282e+38">//3.40282e+38</a></td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">largestDouble</td><td style="text-align:center">Double.MAX_VALUE;<a href="//1.79769e+308">//1.79769e+308</a></td></tr></tbody></table></li><li><p>基本类型和字符串(String)之间的转换</p><ul><li><p><code>parseInt(String s,int i)</code>  将字符串表示的i进制数s转化为10进制数</p><ul><li>如果s不满足i进制格式要求，则<code>throws a NumberFormatException</code></li></ul></li><li><p>Integer类举例</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">123</span>;</span><br><span class="line">String s1 = Integer.toString(i);\\将i转化为<span class="number">10</span>进制数（默认）再转为String，<span class="number">123</span></span><br><span class="line">String s2 = Integer.toString(i, <span class="number">10</span>);\\将i转化为<span class="number">10</span>进制数再转为String，<span class="number">123</span></span><br><span class="line">String s3 = Integer.toString(i, <span class="number">2</span>);\\将i转化为<span class="number">2</span>进制数再转为String，<span class="number">1111011</span></span><br><span class="line">String s4 = Integer.toString(i, <span class="number">8</span>);\\将i转化为<span class="number">8</span>进制数再转为String，<span class="number">173</span></span><br><span class="line">String s5 = Integer.toString(i, <span class="number">16</span>);\\将i转化为<span class="number">16</span>进制数再转为String，7b</span><br><span class="line">String s6 = Integer.toBinaryString(i);\\将i转化为<span class="number">2</span>进制数再转为String</span><br><span class="line">String s7 = Integer.toHexString(i);\\将i转化为<span class="number">16</span>进制数再转为String</span><br><span class="line">String s8 = Integer.toOctalString(i);\\将i转化为<span class="number">8</span>进制数再转为String</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
